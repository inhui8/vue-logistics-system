{"version":3,"file":"js/888.1cbabcf6.js","mappings":"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","sources":["webpack://vue-logistics-system/./src/views/Admin/QuoteManagement/BiddingList.vue","webpack://vue-logistics-system/./src/views/Admin/QuoteManagement/BiddingList.vue?a85f"],"sourcesContent":["<template>\n  <div class=\"bidding-list-container\">\n    <el-card>\n      <template #header>\n        <div class=\"card-header\">\n          <span>竞价项目列表</span>\n           <el-button type=\"primary\" @click=\"handleCreateBidding\">\n             <el-icon><Plus /></el-icon> 创建新竞价项目\n           </el-button>\n        </div>\n      </template>\n\n      <!-- 筛选区域 -->\n       <el-form :inline=\"true\" :model=\"filterForm\" class=\"filter-form\">\n         <el-form-item label=\"竞价状态\">\n           <el-select v-model=\"filterForm.status\" placeholder=\"选择状态\" clearable>\n             <el-option label=\"准备中\" value=\"preparing\" />\n             <el-option label=\"竞价中\" value=\"bidding\" />\n             <el-option label=\"已结束 (待授标)\" value=\"ended\" />\n             <el-option label=\"已授标\" value=\"awarded\" />\n             <el-option label=\"已流标/取消\" value=\"cancelled\" />\n           </el-select>\n         </el-form-item>\n          <el-form-item label=\"项目名称/编号\">\n           <el-input v-model=\"filterForm.name\" placeholder=\"输入名称或编号\" clearable />\n         </el-form-item>\n          <el-form-item label=\"创建时间\">\n           <el-date-picker\n              v-model=\"filterForm.dateRange\"\n              type=\"daterange\"\n              range-separator=\"至\"\n              start-placeholder=\"开始日期\"\n              end-placeholder=\"结束日期\"\n              value-format=\"YYYY-MM-DD\"\n            />\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleSearch\">查询</el-button>\n        </el-form-item>\n      </el-form>\n\n      <!-- 竞价项目列表 -->\n      <div class=\"view-management\">\n        <span class=\"view-label\"></span>\n        <el-radio-group v-model=\"currentView\" size=\"small\" class=\"status-view-group\">\n          <el-radio-button value=\"all\">全部({{ filteredBiddingsData.length }})</el-radio-button>\n          <el-radio-button value=\"preparing\">准备中({{ getCountByStatus('preparing') }})</el-radio-button>\n          <el-radio-button value=\"bidding\">竞价中({{ getCountByStatus('bidding') }})</el-radio-button>\n          <el-radio-button value=\"ended\">已结束({{ getCountByStatus('ended') }})</el-radio-button>\n          <el-radio-button value=\"awarded\">已授标({{ getCountByStatus('awarded') }})</el-radio-button>\n          <el-radio-button value=\"cancelled\">已流标/取消({{ getCountByStatus('cancelled') }})</el-radio-button>\n          <!-- 动态添加自定义视图 -->\n          <el-radio-button \n            v-for=\"view in customViews\" \n            :key=\"view.id\" \n            :label=\"view.id\"\n            @contextmenu.prevent=\"handleContextMenu($event, view)\"\n          >\n            {{view.name}}\n          </el-radio-button>\n        </el-radio-group>\n        \n        <el-button type=\"text\" size=\"small\" @click=\"handleSaveView\">新增视图</el-button>\n        <el-button type=\"text\" size=\"small\" @click=\"showGroupModal\">高级分组</el-button>\n        <el-button type=\"text\" size=\"small\" @click=\"showSortModal\">高级排序</el-button>\n        <el-button type=\"text\" size=\"small\" @click=\"showFilterPanel\">筛选</el-button>\n        <el-button type=\"text\" size=\"small\" @click=\"showColumnSettings\">字段配置</el-button>\n      </div>\n\n      <!-- 使用GroupableTable组件替换原有表格 -->\n      <groupable-table\n        ref=\"mainTable\"\n        :data=\"filteredBiddingList\"\n        row-key=\"id\"\n        :group-fields=\"groupField ? [groupField] : []\"\n        :show-selection=\"true\"\n        :show-group-column=\"!!groupField\"\n        :group-column-label=\"groupField ? getGroupColumnLabel(groupField) : '分组'\"\n        :default-expand-all=\"false\"\n        :show-pagination=\"true\"\n        :current-page=\"pagination.currentPage\"\n        :page-size=\"pagination.pageSize\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        :total=\"totalBiddings\"\n        @selection-change=\"handleSelectionChange\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        style=\"width: 100%\"\n        border\n      >\n        <el-table-column \n          v-for=\"column in visibleColumns\" \n          :key=\"column.prop\" \n          :prop=\"column.prop\" \n          :label=\"column.label\" \n          :width=\"column.width\"\n          :sortable=\"column.sortable\"\n          :fixed=\"column.fixed\"\n          :show-overflow-tooltip=\"column.showOverflowTooltip !== false\"\n        >\n          <template #default=\"scope\" v-if=\"column.prop === 'status'\">\n               <el-tag :type=\"getStatusTagType(scope.row.status)\">\n                 {{ formatStatus(scope.row.status) }}\n               </el-tag>\n            </template>\n          \n          <template #default=\"scope\" v-else-if=\"column.prop === 'currentLowestBid'\">\n            {{ scope.row.currentLowestBid ? scope.row.currentLowestBid.toFixed(2) : '-' }}\n          </template>\n          \n          <template #default=\"scope\" v-else-if=\"column.prop === 'operation'\">\n            <el-button text type=\"primary\" size=\"small\" @click=\"handleViewDetails(scope.row)\">详情</el-button>\n            <el-dropdown trigger=\"click\" @command=\"(command) => handleOperationCommand(command, scope.row)\">\n              <el-button text type=\"primary\" size=\"small\">\n                更多<el-icon class=\"el-icon--right\"><arrow-down /></el-icon>\n              </el-button>\n              <template #dropdown>\n                <el-dropdown-menu>\n                  <el-dropdown-item command=\"monitor\">监控</el-dropdown-item>\n                  <el-dropdown-item command=\"endEarly\" v-if=\"scope.row.status === 'bidding'\">提前结束竞价</el-dropdown-item>\n                  <el-dropdown-item command=\"cancel\" v-if=\"scope.row.status === 'preparing' || scope.row.status === 'bidding'\">取消项目</el-dropdown-item>\n                </el-dropdown-menu>\n              </template>\n            </el-dropdown>\n          </template>\n        </el-table-column>\n      </groupable-table>\n\n      <!-- 替换分页组件，现在由GroupableTable处理 -->\n\n      <!-- 筛选面板 -->\n      <filter-panel\n        v-model:visible=\"filterPanelVisible\"\n        :columns=\"tableColumns\"\n        :existing-filters=\"activeFilters\"\n        :existing-logic=\"filterLogic\"\n        @apply-filters=\"applyFilters\"\n        @cancel=\"cancelFilters\"\n      />\n\n      <!-- 保存视图对话框 -->\n      <el-dialog\n        title=\"保存视图\"\n        v-model=\"saveViewDialogVisible\"\n        width=\"500px\"\n      >\n        <el-form :model=\"viewForm\" label-width=\"100px\">\n          <el-form-item label=\"视图名称\" required>\n            <el-input v-model=\"viewForm.name\" placeholder=\"请输入视图名称\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"显示字段\">\n            <el-checkbox-group v-model=\"viewForm.columns\">\n              <el-checkbox \n                v-for=\"col in tableColumns\" \n                :key=\"col.prop\" \n                :label=\"col.prop\"\n              >\n                {{col.label}}\n              </el-checkbox>\n            </el-checkbox-group>\n          </el-form-item>\n        </el-form>\n        <template #footer>\n          <el-button @click=\"saveViewDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"saveView\">确定</el-button>\n        </template>\n      </el-dialog>\n\n      <!-- 视图操作下拉菜单 -->\n      <el-dialog\n        title=\"视图操作\"\n        v-model=\"viewOptionsDialogVisible\"\n        width=\"300px\"\n      >\n        <div class=\"view-options-menu\">\n          <div class=\"view-option-item\" @click=\"handleRenameView\">\n            <i class=\"el-icon-edit\"></i>\n            <span>重命名视图</span>\n          </div>\n          <div class=\"view-option-item\" @click=\"handleCopyView\">\n            <i class=\"el-icon-document-copy\"></i>\n            <span>复制视图</span>\n          </div>\n          <div class=\"view-option-item\" @click=\"handleDeleteView\">\n            <i class=\"el-icon-delete\"></i>\n            <span>删除视图</span>\n          </div>\n        </div>\n      </el-dialog>\n      \n      <!-- 重命名视图对话框 -->\n      <el-dialog\n        title=\"重命名视图\"\n        v-model=\"renameViewDialogVisible\"\n        width=\"500px\"\n      >\n        <el-form :model=\"renameForm\" label-width=\"100px\">\n          <el-form-item label=\"视图名称\" required>\n            <el-input v-model=\"renameForm.name\" placeholder=\"请输入视图名称\"></el-input>\n          </el-form-item>\n        </el-form>\n        <template #footer>\n          <el-button @click=\"renameViewDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"saveRenameView\">确定</el-button>\n        </template>\n      </el-dialog>\n\n      <!-- 右键菜单 -->\n      <div \n        v-show=\"contextMenuVisible\" \n        class=\"context-menu\" \n        :style=\"{left: contextMenuX + 'px', top: contextMenuY + 'px'}\"\n      >\n        <div class=\"context-menu-item\" @click=\"handleCopyView\">\n          <span>复制视图</span>\n        </div>\n        <div class=\"context-menu-item\" @click=\"handleRenameView\">\n          <span>重命名</span>\n        </div>\n        <div class=\"context-menu-item\" @click=\"handleDeleteView\">\n          <span>删除</span>\n        </div>\n      </div>\n\n      <!-- 分组设置弹窗 -->\n      <el-dialog\n        title=\"分组设置\"\n        v-model=\"groupModalVisible\"\n        width=\"500px\"\n      >\n        <div class=\"group-settings\">\n          <div class=\"group-level\">\n            <span class=\"group-level-label\">一级分组：</span>\n            <el-select v-model=\"groupSettings.level1\" placeholder=\"选择字段\" style=\"width: 280px;\" clearable>\n              <el-option v-for=\"field in groupableFields\" :key=\"field.prop\" :label=\"field.label\" :value=\"field.prop\"></el-option>\n            </el-select>\n          </div>\n          <div class=\"group-level\">\n            <span class=\"group-level-label\">二级分组：</span>\n            <el-select v-model=\"groupSettings.level2\" placeholder=\"选择字段\" style=\"width: 280px;\" clearable>\n              <el-option v-for=\"field in groupableFields\" :key=\"field.prop\" :label=\"field.label\" :value=\"field.prop\"></el-option>\n            </el-select>\n          </div>\n          <div class=\"group-level\">\n            <span class=\"group-level-label\">三级分组：</span>\n            <el-select v-model=\"groupSettings.level3\" placeholder=\"选择字段\" style=\"width: 280px;\" clearable>\n              <el-option v-for=\"field in groupableFields\" :key=\"field.prop\" :label=\"field.label\" :value=\"field.prop\"></el-option>\n            </el-select>\n          </div>\n        </div>\n        <template #footer>\n          <span class=\"dialog-footer\">\n            <el-button @click=\"groupModalVisible = false\">取消</el-button>\n            <el-button type=\"danger\" @click=\"clearGroupSettings\">清除分组</el-button>\n            <el-button type=\"primary\" @click=\"applyGroupSettings\">应用</el-button>\n          </span>\n        </template>\n      </el-dialog>\n\n      <!-- 排序设置弹窗 -->\n      <el-dialog\n        title=\"排序设置\"\n        v-model=\"sortModalVisible\"\n        width=\"500px\"\n      >\n        <div class=\"sort-settings\">\n          <div v-for=\"(sort, index) in sortSettings\" :key=\"index\" class=\"sort-item\">\n            <el-select v-model=\"sort.field\" placeholder=\"选择字段\" style=\"width: 200px;\" clearable>\n              <el-option \n                v-for=\"field in sortableFields\" \n                :key=\"field.prop\" \n                :label=\"field.label\" \n                :value=\"field.prop\"\n              ></el-option>\n            </el-select>\n            <el-select v-model=\"sort.direction\" placeholder=\"排序方向\" style=\"width: 120px;\">\n              <el-option label=\"升序\" value=\"asc\"></el-option>\n              <el-option label=\"降序\" value=\"desc\"></el-option>\n            </el-select>\n            <el-button \n              type=\"danger\" \n              size=\"small\"\n              @click=\"removeSortField(index)\"\n            >删除</el-button>\n          </div>\n          <div class=\"sort-actions\">\n            <el-button type=\"primary\" plain @click=\"addSortField\">添加排序字段</el-button>\n          </div>\n        </div>\n        <template #footer>\n          <span class=\"dialog-footer\">\n            <el-button @click=\"sortModalVisible = false\">取消</el-button>\n            <el-button type=\"danger\" @click=\"clearSortSettings\">清除排序</el-button>\n            <el-button type=\"primary\" @click=\"applySortSettings\">应用</el-button>\n          </span>\n        </template>\n      </el-dialog>\n\n      <!-- 字段配置对话框 -->\n      <el-dialog\n        title=\"字段配置\"\n        v-model=\"columnSettingsVisible\"\n        width=\"600px\"\n      >\n        <div class=\"column-settings\">\n          <div class=\"column-settings-header\">\n            <el-checkbox\n              v-model=\"allColumnsSelected\"\n              @change=\"handleSelectAllColumns\"\n            >全选</el-checkbox>\n            <el-button type=\"primary\" size=\"small\" @click=\"resetColumnSettings\">重置</el-button>\n          </div>\n          <div class=\"column-list\">\n            <draggable\n              v-model=\"columnSettingsList\"\n              item-key=\"prop\"\n              handle=\".drag-handle\"\n              @end=\"handleDragEnd\"\n            >\n              <template #item=\"{ element }\">\n                <div class=\"column-item\">\n                  <el-icon class=\"drag-handle\"><d-arrow-left /></el-icon>\n                  <el-checkbox v-model=\"element.visible\">{{ element.label }}</el-checkbox>\n                </div>\n              </template>\n            </draggable>\n          </div>\n        </div>\n        <template #footer>\n          <span class=\"dialog-footer\">\n            <el-button @click=\"columnSettingsVisible = false\">取消</el-button>\n            <el-button type=\"primary\" @click=\"applyColumnSettings\">确定</el-button>\n          </span>\n        </template>\n      </el-dialog>\n\n      <!-- 创建新竞价 / 查看详情 / 监控 / 授标 弹窗 -->\n       <el-dialog\n         v-model=\"dialogVisible\"\n         :title=\"dialogTitle\"\n         width=\"80%\"\n         @close=\"handleDialogClose\"\n         :close-on-click-modal=\"false\"\n       >\n         <!-- 创建竞价表单 -->\n         <el-form\n           v-if=\"isCreating\"\n           ref=\"biddingFormRef\"\n           :model=\"biddingForm\"\n           :rules=\"formRules\"\n           label-width=\"120px\"\n         >\n           <el-row :gutter=\"20\">\n             <el-col :span=\"12\">\n               <el-form-item label=\"项目名称\" prop=\"name\">\n                 <el-input v-model=\"biddingForm.name\" placeholder=\"为竞价项目起个名字\" />\n               </el-form-item>\n             </el-col>\n              <el-col :span=\"12\">\n                 <el-form-item label=\"服务类型/线路\" prop=\"serviceDescription\">\n                   <el-input v-model=\"biddingForm.serviceDescription\" placeholder=\"如：LAX-ONT8 提柜服务 (未来一个月)\" />\n                 </el-form-item>\n               </el-col>\n           </el-row>\n            <el-form-item label=\"详细需求描述\" prop=\"details\">\n             <el-input v-model=\"biddingForm.details\" type=\"textarea\" :rows=\"3\" placeholder=\"详细描述服务要求、数量、时间范围等\" />\n           </el-form-item>\n           <el-row :gutter=\"20\">\n             <el-col :span=\"8\">\n               <el-form-item label=\"开始时间\" prop=\"startTime\">\n                 <el-date-picker v-model=\"biddingForm.startTime\" type=\"datetime\" placeholder=\"选择竞价开始时间\" style=\"width: 100%;\" value-format=\"YYYY-MM-DD HH:mm:ss\"/>\n               </el-form-item>\n             </el-col>\n              <el-col :span=\"8\">\n               <el-form-item label=\"结束时间\" prop=\"endTime\">\n                 <el-date-picker v-model=\"biddingForm.endTime\" type=\"datetime\" placeholder=\"选择竞价结束时间\" style=\"width: 100%;\" value-format=\"YYYY-MM-DD HH:mm:ss\"/>\n               </el-form-item>\n             </el-col>\n             <el-col :span=\"8\">\n                 <el-form-item label=\"起始价格 (USD)\">\n                   <el-input-number v-model=\"biddingForm.startPrice\" :precision=\"2\" :step=\"10\" placeholder=\"可选\" style=\"width: 100%;\"/>\n                 </el-form-item>\n               </el-col>\n           </el-row>\n             <el-row :gutter=\"20\">\n              <el-col :span=\"12\">\n                 <el-form-item label=\"邀请供应商\" prop=\"invitedSupplierIds\">\n                   <el-select v-model=\"biddingForm.invitedSupplierIds\" multiple filterable placeholder=\"选择参与竞价的供应商\" style=\"width: 100%;\">\n                      <el-option v-for=\"supplier in mockSuppliers\" :key=\"supplier.id\" :label=\"supplier.name\" :value=\"supplier.id\" />\n                   </el-select>\n                 </el-form-item>\n               </el-col>\n                <el-col :span=\"12\">\n                 <el-form-item label=\"竞价规则 (占位)\">\n                    <el-text>例如：最低价中标，允许多次出价，显示排名等 (待实现)</el-text>\n                 </el-form-item>\n               </el-col>\n           </el-row>\n         </el-form>\n\n         <!-- 查看详情与监控 -->\n         <div v-else>\n           <h4>竞价项目信息</h4>\n            <el-row :gutter=\"20\">\n                <el-col :span=\"8\"><p><strong>项目编号:</strong> {{ currentBidding?.id }}</p></el-col>\n                <el-col :span=\"16\"><p><strong>项目名称:</strong> {{ currentBidding?.name }}</p></el-col>\n            </el-row>\n             <el-row :gutter=\"20\">\n                <el-col :span=\"8\"><p><strong>开始时间:</strong> {{ currentBidding?.startTime }}</p></el-col>\n                <el-col :span=\"8\"><p><strong>结束时间:</strong> {{ currentBidding?.endTime }}</p></el-col>\n                <el-col :span=\"8\"><p><strong>状态:</strong> {{ formatStatus(currentBidding?.status) }}</p></el-col>\n            </el-row>\n            <p><strong>服务需求:</strong> {{ currentBidding?.serviceDescription }}</p>\n            <p><strong>详细描述:</strong> {{ currentBidding?.details }}</p>\n             <p v-if=\"currentBidding?.awardedSupplierId\"><strong>中标供应商:</strong> {{ currentBidding?.awardedSupplierName }} (最终价: {{ currentBidding?.awardedPrice?.toFixed(2) }} USD)</p>\n\n           <el-divider />\n           <h4>供应商出价监控 (模拟)</h4>\n            <el-alert v-if=\"currentBidding?.status === 'bidding'\" title=\"竞价进行中... (模拟数据每 5 秒刷新一次)\" type=\"info\" show-icon :closable=\"false\" />\n           <el-table :data=\"currentBidding?.bids\" style=\"width: 100%; margin-top: 10px;\" border size=\"small\">\n              <el-table-column type=\"index\" label=\"排名\" width=\"60\" align=\"center\" />\n              <el-table-column prop=\"supplierName\" label=\"供应商\" width=\"200\" show-overflow-tooltip />\n              <el-table-column prop=\"bidPrice\" label=\"当前出价 (USD)\" width=\"150\" sortable>\n                  <template #default=\"scope\">\n                     <span :class=\"{ 'best-bid': scope.$index === 0 }\">\n                       {{ scope.row.bidPrice?.toFixed(2) }}\n                     </span>\n                  </template>\n              </el-table-column>\n              <el-table-column prop=\"bidTime\" label=\"最后出价时间\" width=\"160\" />\n              <el-table-column prop=\"bidCount\" label=\"出价次数\" width=\"100\" align=\"center\" />\n              <el-table-column label=\"供应商评分\" width=\"100\" align=\"center\">\n                <template #default=\"scope\">\n                  <span :class=\"getRatingClass(scope.row.rating)\">\n                    {{ scope.row.rating }}分\n                  </span>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"remarks\" label=\"备注\" minWidth=\"200\" show-overflow-tooltip>\n                <template #default=\"scope\">\n                  <el-input\n                    v-model=\"scope.row.remarks\"\n                    type=\"textarea\"\n                    :rows=\"1\"\n                    placeholder=\"添加备注\"\n                    @change=\"handleBidRemarkChange(scope.row)\"\n                  />\n                </template>\n              </el-table-column>\n              <el-table-column label=\"操作\" width=\"100\" align=\"center\">\n                 <template #default=\"scope\">\n                    <el-button \n                       text \n                       type=\"success\" \n                       size=\"small\" \n                       @click=\"handleAward(scope.row)\"\n                       v-if=\"currentBidding?.status === 'ended'\" \n                    >授标</el-button>\n                    <el-tag type=\"success\" v-if=\"currentBidding?.status === 'awarded' && currentBidding?.awardedSupplierId === scope.row.supplierId\">已中标</el-tag>\n                 </template>\n              </el-table-column>\n           </el-table>\n            <p v-if=\"!currentBidding?.bids || currentBidding?.bids.length === 0\" style=\"text-align: center; color: #909399; margin-top: 10px;\">暂无出价记录</p>\n         </div>\n\n         <template #footer>\n           <span class=\"dialog-footer\">\n             <el-button @click=\"dialogVisible = false\">{{ isCreating ? '取消' : '关闭' }}</el-button>\n             <el-button type=\"primary\" @click=\"handleSubmitBidding\" v-if=\"isCreating\">确认创建</el-button>\n           </span>\n         </template>\n       </el-dialog>\n\n      <!-- 提前结束竞标弹窗 -->\n      <el-dialog\n        title=\"提前结束竞标\"\n        v-model=\"endEarlyDialogVisible\"\n        width=\"80%\"\n        :close-on-click-modal=\"false\"\n      >\n        <div v-if=\"currentBidding\">\n          <h4>竞价项目信息</h4>\n          <el-row :gutter=\"20\">\n            <el-col :span=\"8\"><p><strong>项目编号:</strong> {{ currentBidding.id }}</p></el-col>\n            <el-col :span=\"16\"><p><strong>项目名称:</strong> {{ currentBidding.name }}</p></el-col>\n          </el-row>\n          <el-row :gutter=\"20\">\n            <el-col :span=\"8\"><p><strong>开始时间:</strong> {{ currentBidding.startTime }}</p></el-col>\n            <el-col :span=\"8\"><p><strong>结束时间:</strong> {{ currentBidding.endTime }}</p></el-col>\n            <el-col :span=\"8\"><p><strong>状态:</strong> {{ formatStatus(currentBidding.status) }}</p></el-col>\n          </el-row>\n          <p><strong>服务需求:</strong> {{ currentBidding.serviceDescription }}</p>\n          <p><strong>详细描述:</strong> {{ currentBidding.details }}</p>\n\n          <el-divider />\n          <h4>供应商出价列表</h4>\n          <el-table :data=\"currentBidding.bids\" style=\"width: 100%; margin-top: 10px;\" border size=\"small\">\n            <el-table-column type=\"index\" label=\"排名\" width=\"60\" align=\"center\" />\n            <el-table-column prop=\"supplierName\" label=\"供应商\" width=\"200\" show-overflow-tooltip />\n            <el-table-column prop=\"bidPrice\" label=\"当前出价 (USD)\" width=\"150\" sortable>\n              <template #default=\"scope\">\n                <span :class=\"{ 'best-bid': scope.$index === 0 }\">\n                  {{ scope.row.bidPrice?.toFixed(2) }}\n                </span>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"bidTime\" label=\"最后出价时间\" width=\"160\" />\n            <el-table-column prop=\"bidCount\" label=\"出价次数\" width=\"100\" align=\"center\" />\n            <el-table-column prop=\"remarks\" label=\"备注\" minWidth=\"200\" show-overflow-tooltip>\n              <template #default=\"scope\">\n                <el-input\n                  v-model=\"scope.row.remarks\"\n                  type=\"textarea\"\n                  :rows=\"1\"\n                  placeholder=\"添加备注\"\n                  @change=\"handleBidRemarkChange(scope.row)\"\n                />\n              </template>\n            </el-table-column>\n            <el-table-column label=\"操作\" width=\"120\" align=\"center\">\n              <template #default=\"scope\">\n                <el-button \n                  text \n                  type=\"success\" \n                  size=\"small\" \n                  @click=\"handleEndEarlyAward(scope.row)\"\n                >选择中标</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n          <p v-if=\"!currentBidding.bids || currentBidding.bids.length === 0\" style=\"text-align: center; color: #909399; margin-top: 10px;\">暂无出价记录</p>\n        </div>\n        <template #footer>\n          <span class=\"dialog-footer\">\n            <el-button @click=\"endEarlyDialogVisible = false\">取消</el-button>\n          </span>\n        </template>\n      </el-dialog>\n\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, computed, onMounted, onUnmounted, nextTick, watch } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { Plus, ArrowDown } from '@element-plus/icons-vue';\nimport { DArrowLeft } from '@element-plus/icons-vue';\nimport draggable from 'vuedraggable';\nimport FilterPanel from '@/components/logistics/FilterPanel.vue';\nimport GroupableTable from '@/components/logistics/GroupableTable.vue';\n\n// --- 模拟数据 ---\nconst mockSuppliers = ref([\n  { id: 'supplier_1', name: '测试供应商A' },\n  { id: 'supplier_2', name: '测试供应商B' },\n  { id: 'supplier_3', name: '测试供应商C' },\n  { id: 'supplier_4', name: '测试供应商D' },\n]);\n\nconst allBiddings = ref([]);\nlet biddingRefreshTimer = null;\n\nconst generateMockBiddings = (count = 20) => {\n  const names = ['年度提柜服务竞标', 'Q3 旺季派送补充运力', '紧急线路竞价', '新仓库启用运输招标'];\n  const services = ['LAX-ONT8 提柜', 'LGB-LAX9 提柜', 'ONT8-SBD1 派送', 'JFK-TEB9 提柜'];\n  const statuses = ['preparing', 'bidding', 'ended', 'awarded', 'cancelled'];\n  const mockData = [];\n  const now = Date.now();\n\n  for (let i = 0; i < count; i++) {\n    const status = statuses[Math.floor(Math.random() * statuses.length)];\n    const createdAt = new Date(now - Math.floor(Math.random() * 30 * 24 * 60 * 60 * 1000));\n    const startTime = new Date(createdAt.getTime() + (status === 'preparing' ? Math.random() * 5 * 24 * 60 * 60 * 1000 : -Math.random() * 3 * 24 * 60 * 60 * 1000)); // 准备中则未来开始，否则过去开始\n    const endTime = new Date(startTime.getTime() + (Math.random() * 4 + 1) * 60 * 60 * 1000); // 持续 1-5 小时\n    const invitedCount = Math.floor(Math.random() * (mockSuppliers.value.length -1)) + 2;\n    const invitedSuppliers = [...mockSuppliers.value].sort(() => 0.5 - Math.random()).slice(0, invitedCount);\n    \n    let bids = [];\n    let bidCount = 0;\n    let currentLowestBid = null;\n    let awardedSupplierId = null;\n    let awardedSupplierName = null;\n    let awardedPrice = null;\n\n    if (status === 'bidding' || status === 'ended' || status === 'awarded') {\n        // 模拟生成一些出价记录\n        const bidderCount = Math.floor(Math.random() * invitedCount) + 1;\n        const bidders = invitedSuppliers.slice(0, bidderCount);\n        bids = bidders.map(sup => {\n            const supplierBids = [];\n            const bidTimes = Math.floor(Math.random() * 5) + 1; // 1-5 次出价\n            let currentBid = 1000 + Math.random() * 1000; // 初始价格较高\n            let lastBidTime = new Date(startTime.getTime() + Math.random() * (Math.min(endTime.getTime(), Date.now()) - startTime.getTime()));\n\n            for(let j=0; j<bidTimes; j++){\n                supplierBids.push({ price: currentBid, time: lastBidTime });\n                currentBid -= Math.random() * 100; // 价格逐渐降低\n                lastBidTime = new Date(lastBidTime.getTime() - Math.random() * 10 * 60 * 1000); // 时间往前推\n            }\n             supplierBids.sort((a,b)=> a.price - b.price); // 取最低价\n\n            return {\n                supplierId: sup.id,\n                supplierName: sup.name,\n                bidPrice: Math.max(100, supplierBids[0].price), // 最低出价\n                bidTime: supplierBids[0].time.toLocaleString(),\n                bidCount: bidTimes,\n                remarks: Math.random() > 0.8 ? `供应商${sup.name}的竞价备注...` : '', // 添加随机备注\n                rating: Math.floor(Math.random() * 40) + 60, // 生成60-100之间的随机分数\n            };\n        });\n        bids.sort((a, b) => a.bidPrice - b.bidPrice); // 按最终出价排序\n        bidCount = bids.reduce((sum, b) => sum + b.bidCount, 0);\n        if (bids.length > 0) currentLowestBid = bids[0].bidPrice;\n    }\n\n     if (status === 'awarded' && bids.length > 0) {\n        const awardedBid = bids[0]; // 假设授予最低价\n        awardedSupplierId = awardedBid.supplierId;\n        awardedSupplierName = awardedBid.supplierName;\n        awardedPrice = awardedBid.bidPrice;\n    }\n\n    mockData.push({\n      id: `BID-${String(createdAt.getFullYear()).slice(2)}${String(i + 1000).slice(1)}`,\n      name: `${names[Math.floor(Math.random() * names.length)]} #${i+1}`,\n      serviceDescription: services[Math.floor(Math.random() * services.length)],\n      details: `详细需求描述 ${i+1}...`, // 简化\n      startTime: startTime.toLocaleString(),\n      endTime: endTime.toLocaleString(),\n      startPrice: Math.random() > 0.5 ? parseFloat((1500 + Math.random() * 500).toFixed(2)) : null,\n      invitedSupplierIds: invitedSuppliers.map(s => s.id),\n      invitedCount: invitedCount,\n      status: status,\n      remarks: Math.random() > 0.7 ? `项目备注 ${i+1}...` : '', // 添加随机备注\n      bids: bids,\n      bidCount: bidCount,\n      currentLowestBid: currentLowestBid,\n      awardedSupplierId: awardedSupplierId,\n      awardedSupplierName: awardedSupplierName,\n      awardedPrice: awardedPrice,\n    });\n  }\n  return mockData;\n};\n\n// --- 选项数据 ---\nconst statusOptions = {\n  preparing: { label: '准备中', tag: 'info' },\n  bidding: { label: '竞价中', tag: 'primary' },\n  ended: { label: '已结束 (待授标)', tag: 'warning' },\n  awarded: { label: '已授标', tag: 'success' },\n  cancelled: { label: '已流标/取消', tag: 'danger' },\n};\n\n// --- 表格列定义 ---\nconst defaultTableColumns = [\n  { prop: 'id', label: '项目编号', width: 150, sortable: true },\n  { prop: 'name', label: '项目名称', minWidth: 200, showOverflowTooltip: true, sortable: true },\n  { prop: 'startTime', label: '开始时间', width: 160, sortable: true },\n  { prop: 'endTime', label: '结束时间', width: 160, sortable: true },\n  { prop: 'invitedCount', label: '受邀供应商数', width: 130, align: 'center', sortable: true },\n  { prop: 'bidCount', label: '出价次数', width: 110, align: 'center', sortable: true },\n  { prop: 'currentLowestBid', label: '当前最低价 (USD)', width: 160, sortable: true },\n  { prop: 'remarks', label: '备注', width: 200, showOverflowTooltip: true },\n  { prop: 'status', label: '状态', width: 150, sortable: true },\n  { prop: 'operation', label: '操作', fixed: 'right', width: 280 },\n];\n\n// --- 视图与表格状态 ---\nconst tableColumns = ref([...defaultTableColumns]);\nconst visibleColumns = ref([...defaultTableColumns]);\nconst selectedRows = ref([]);\nconst currentView = ref('all');\nconst customViews = ref([]);\nconst saveViewDialogVisible = ref(false);\nconst viewOptionsDialogVisible = ref(false);\nconst renameViewDialogVisible = ref(false);\nconst contextMenuVisible = ref(false);\nconst contextMenuX = ref(0);\nconst contextMenuY = ref(0);\nconst groupField = ref('');\nconst viewForm = ref({\n  name: '',\n  columns: []\n});\nconst currentEditingView = ref(null);\nconst renameForm = ref({\n  name: ''\n});\n\n// --- 筛选相关 ---\nconst filterPanelVisible = ref(false);\nconst activeFilters = ref([]);\nconst filterLogic = ref('and');\n\n// --- 分组相关 ---\nconst groupModalVisible = ref(false);\nconst groupSettings = ref({\n  level1: '',\n  level2: '',\n  level3: ''\n});\nconst groupableFields = computed(() => {\n  return tableColumns.value.filter(col => \n    col.prop !== 'operation' && \n    !['id'].includes(col.prop)\n  );\n});\n\n// --- 排序相关 ---\nconst sortModalVisible = ref(false);\nconst sortSettings = ref([{ field: '', direction: 'desc' }]);\nconst sortableFields = computed(() => {\n  return tableColumns.value.filter(col => col.sortable && col.prop !== 'operation');\n});\n\n// --- 字段配置相关 ---\nconst columnSettingsVisible = ref(false);\nconst columnSettingsList = ref([]);\nconst allColumnsSelected = ref(true);\n\n// 按状态统计数量\nconst getCountByStatus = (status) => {\n  return allBiddings.value.filter(item => item.status === status).length;\n};\n\n// --- 分组与视图相关方法 ---\n// 获取分组列字段名称\nconst getGroupColumnLabel = (field) => {\n  const column = tableColumns.value.find(col => col.prop === field);\n  return column ? `按${column.label}分组` : '分组';\n};\n\n// 显示筛选面板\nconst showFilterPanel = () => {\n  filterPanelVisible.value = true;\n};\n\n// 应用筛选\nconst applyFilters = (filterData) => {\n  activeFilters.value = filterData.filters;\n  filterLogic.value = filterData.logic;\n  applyCustomFilters();\n};\n\n// 取消筛选\nconst cancelFilters = () => {\n  // 可以不做任何操作，或重置筛选\n};\n\n// 应用自定义筛选\nconst applyCustomFilters = () => {\n  // 这里应用自定义筛选逻辑，修改filteredBiddingsData的计算方式\n  // 为简化，我们会在computed中直接使用activeFilters\n};\n\n// 显示分组设置弹窗\nconst showGroupModal = () => {\n  groupModalVisible.value = true;\n};\n\n// 清除分组设置\nconst clearGroupSettings = () => {\n  groupSettings.value = {\n    level1: '',\n    level2: '',\n    level3: ''\n  };\n  groupField.value = '';\n};\n\n// 应用分组设置\nconst applyGroupSettings = () => {\n  if (groupSettings.value.level1) {\n    groupField.value = groupSettings.value.level1;\n  } else {\n    groupField.value = '';\n  }\n  groupModalVisible.value = false;\n};\n\n// 显示排序设置弹窗\nconst showSortModal = () => {\n  sortModalVisible.value = true;\n};\n\n// 添加排序字段\nconst addSortField = () => {\n  sortSettings.value.push({ field: '', direction: 'asc' });\n};\n\n// 移除排序字段\nconst removeSortField = (index) => {\n  sortSettings.value.splice(index, 1);\n  if (sortSettings.value.length === 0) {\n    sortSettings.value = [{ field: '', direction: 'asc' }];\n  }\n};\n\n// 清除排序设置\nconst clearSortSettings = () => {\n  sortSettings.value = [{ field: '', direction: 'asc' }];\n};\n\n// 应用排序设置\nconst applySortSettings = () => {\n  // 实现排序逻辑\n  const validSortSettings = sortSettings.value.filter(sort => sort.field);\n  if (validSortSettings.length > 0) {\n    // 按照排序设置对数据进行排序\n    // 为简单起见，这里只应用第一个排序规则\n    const { field, direction } = validSortSettings[0];\n    allBiddings.value.sort((a, b) => {\n      const fieldA = a[field];\n      const fieldB = b[field];\n      \n      if (direction === 'asc') {\n        return fieldA < fieldB ? -1 : fieldA > fieldB ? 1 : 0;\n      } else {\n        return fieldA > fieldB ? -1 : fieldA < fieldB ? 1 : 0;\n      }\n    });\n  }\n  sortModalVisible.value = false;\n};\n\n// 显示字段配置\nconst showColumnSettings = () => {\n  columnSettingsList.value = JSON.parse(JSON.stringify(tableColumns.value));\n  allColumnsSelected.value = columnSettingsList.value.every(col => col.visible !== false);\n  columnSettingsVisible.value = true;\n};\n\n// 全选/取消全选列\nconst handleSelectAllColumns = (val) => {\n  columnSettingsList.value.forEach(col => {\n    col.visible = val;\n  });\n};\n\n// 重置列设置\nconst resetColumnSettings = () => {\n  columnSettingsList.value = JSON.parse(JSON.stringify(defaultTableColumns));\n  allColumnsSelected.value = true;\n};\n\n// 应用列设置\nconst applyColumnSettings = () => {\n  tableColumns.value = columnSettingsList.value;\n  visibleColumns.value = tableColumns.value.filter(col => col.visible !== false);\n  columnSettingsVisible.value = false;\n};\n\n// 拖动列结束\nconst handleDragEnd = () => {\n  // 拖动结束后的操作，可以更新列顺序\n};\n\n// 处理右键菜单\nconst handleContextMenu = (event, view) => {\n  event.preventDefault();\n  currentEditingView.value = view;\n  contextMenuX.value = event.clientX;\n  contextMenuY.value = event.clientY;\n  contextMenuVisible.value = true;\n  \n  // 添加一个全局点击事件处理器，点击其他地方关闭菜单\n  const closeContextMenu = () => {\n    contextMenuVisible.value = false;\n    document.removeEventListener('click', closeContextMenu);\n  };\n  setTimeout(() => {\n    document.addEventListener('click', closeContextMenu);\n  }, 0);\n};\n\n// 处理保存视图\nconst handleSaveView = () => {\n  viewForm.value = {\n    name: '',\n    columns: tableColumns.value.filter(col => col.visible !== false).map(col => col.prop)\n  };\n  saveViewDialogVisible.value = true;\n};\n\n// 保存视图\nconst saveView = () => {\n  if (!viewForm.value.name.trim()) {\n    ElMessage.warning('请输入视图名称');\n    return;\n  }\n  \n  const viewId = 'view_' + Date.now();\n  const newView = {\n    id: viewId,\n    name: viewForm.value.name,\n    columns: viewForm.value.columns,\n    filters: JSON.parse(JSON.stringify(activeFilters.value)),\n    filterLogic: filterLogic.value,\n    groupField: groupField.value\n  };\n  \n  customViews.value.push(newView);\n  currentView.value = viewId;\n  saveViewDialogVisible.value = false;\n  \n  ElMessage.success('视图保存成功');\n};\n\n// 重命名视图\nconst handleRenameView = () => {\n  if (!currentEditingView.value) return;\n  \n  renameForm.value.name = currentEditingView.value.name;\n  renameViewDialogVisible.value = true;\n  viewOptionsDialogVisible.value = false;\n};\n\n// 保存重命名\nconst saveRenameView = () => {\n  if (!renameForm.value.name.trim()) {\n    ElMessage.warning('请输入视图名称');\n    return;\n  }\n  \n  const index = customViews.value.findIndex(v => v.id === currentEditingView.value.id);\n  if (index !== -1) {\n    customViews.value[index].name = renameForm.value.name;\n    ElMessage.success('视图重命名成功');\n  }\n  \n  renameViewDialogVisible.value = false;\n};\n\n// 复制视图\nconst handleCopyView = () => {\n  if (!currentEditingView.value) return;\n  \n  const viewId = 'view_' + Date.now();\n  const newView = JSON.parse(JSON.stringify(currentEditingView.value));\n  newView.id = viewId;\n  newView.name = `${newView.name} (复制)`;\n  \n  customViews.value.push(newView);\n  currentView.value = viewId;\n  viewOptionsDialogVisible.value = false;\n  \n  ElMessage.success('视图复制成功');\n};\n\n// 删除视图\nconst handleDeleteView = () => {\n  if (!currentEditingView.value) return;\n  \n  ElMessageBox.confirm(\n    `确定要删除视图\"${currentEditingView.value.name}\"吗？`,\n    '删除确认',\n    {\n      confirmButtonText: '确定',\n      cancelButtonText: '取消',\n      type: 'warning'\n    }\n  ).then(() => {\n    const index = customViews.value.findIndex(v => v.id === currentEditingView.value.id);\n    if (index !== -1) {\n      customViews.value.splice(index, 1);\n      \n      if (currentView.value === currentEditingView.value.id) {\n        currentView.value = 'all';\n      }\n      \n      ElMessage.success('视图删除成功');\n    }\n    \n    viewOptionsDialogVisible.value = false;\n  }).catch(() => {\n    // 取消删除\n  });\n};\n\n// --- 表格行选择 ---\nconst handleSelectionChange = (selection) => {\n  selectedRows.value = selection;\n};\n\n// --- 重新计算数据过滤逻辑 ---\nconst filteredBiddingsData = computed(() => {\n  let filtered = allBiddings.value;\n  \n  // 1. 应用当前视图筛选\n  if (currentView.value !== 'all' && !currentView.value.startsWith('view_')) {\n    filtered = filtered.filter(b => b.status === currentView.value);\n  } else if (currentView.value.startsWith('view_')) {\n    // 应用自定义视图\n    const view = customViews.value.find(v => v.id === currentView.value);\n    if (view) {\n      // 应用视图的过滤条件\n      if (view.filters && view.filters.length > 0) {\n        filtered = filtered.filter(item => {\n          const results = view.filters.map(filter => {\n            const { field, operator, value } = filter;\n            const itemValue = item[field];\n            \n            switch (operator) {\n              case 'eq': return itemValue === value;\n              case 'neq': return itemValue !== value;\n              case 'contains': return String(itemValue).includes(value);\n              case 'notContains': return !String(itemValue).includes(value);\n              case 'startsWith': return String(itemValue).startsWith(value);\n              case 'endsWith': return String(itemValue).endsWith(value);\n              case 'gt': return itemValue > value;\n              case 'gte': return itemValue >= value;\n              case 'lt': return itemValue < value;\n              case 'lte': return itemValue <= value;\n              case 'in': return Array.isArray(value) ? value.includes(itemValue) : false;\n              case 'notIn': return Array.isArray(value) ? !value.includes(itemValue) : true;\n              default: return true;\n            }\n          });\n          \n          return view.filterLogic === 'and' \n            ? results.every(r => r) \n            : results.some(r => r);\n        });\n      }\n      \n      // 不在计算属性中设置groupField的值，而是通过监听器来处理\n    }\n  }\n  \n  // 2. 应用表单筛选\n  filtered = filtered.filter(b => {\n    const statusMatch = filterForm.status ? b.status === filterForm.status : true;\n    const nameMatch = filterForm.name ? (b.name.includes(filterForm.name) || b.id.includes(filterForm.name)) : true;\n    const dateMatch = filterForm.dateRange && filterForm.dateRange.length === 2\n      ? (new Date(b.startTime.split(' ')[0]) >= new Date(filterForm.dateRange[0]) && new Date(b.startTime.split(' ')[0]) <= new Date(filterForm.dateRange[1]))\n      : true;\n    return statusMatch && nameMatch && dateMatch;\n  });\n  \n  // 3. 应用高级筛选\n  if (activeFilters.value && activeFilters.value.length > 0) {\n    filtered = filtered.filter(item => {\n      const results = activeFilters.value.map(filter => {\n        const { field, operator, value } = filter;\n        const itemValue = item[field];\n        \n        switch (operator) {\n          case 'eq': return itemValue === value;\n          case 'neq': return itemValue !== value;\n          case 'contains': return String(itemValue).includes(value);\n          case 'notContains': return !String(itemValue).includes(value);\n          case 'startsWith': return String(itemValue).startsWith(value);\n          case 'endsWith': return String(itemValue).endsWith(value);\n          case 'gt': return itemValue > value;\n          case 'gte': return itemValue >= value;\n          case 'lt': return itemValue < value;\n          case 'lte': return itemValue <= value;\n          case 'in': return Array.isArray(value) ? value.includes(itemValue) : false;\n          case 'notIn': return Array.isArray(value) ? !value.includes(itemValue) : true;\n          default: return true;\n        }\n      });\n      \n      return filterLogic.value === 'and' \n        ? results.every(r => r) \n        : results.some(r => r);\n    });\n  }\n  \n  return filtered;\n});\n\n// 添加对currentView的监听，当视图改变时设置对应的分组字段\nwatch(currentView, (newValue) => {\n  if (newValue.startsWith('view_')) {\n    const view = customViews.value.find(v => v.id === newValue);\n    if (view && view.groupField) {\n      groupField.value = view.groupField;\n    }\n  }\n}, { immediate: true });\n\n// --- 生命周期钩子 ---\nonMounted(() => {\n  allBiddings.value = generateMockBiddings();\n  \n  // 初始化表格列设置\n  visibleColumns.value = tableColumns.value.filter(col => col.visible !== false);\n});\n\nonUnmounted(() => {\n    stopBiddingMonitor(); // 组件销毁时停止刷新\n});\n\n// --- 筛选与分页 ---\nconst filterForm = reactive({\n  status: '',\n  name: '',\n  dateRange: [],\n});\n\nconst pagination = reactive({\n  currentPage: 1,\n  pageSize: 10,\n});\n\nconst totalBiddings = computed(() => filteredBiddingsData.value.length);\n\n// 分页逻辑\nconst filteredBiddingList = computed(() => {\n  const start = (pagination.currentPage - 1) * pagination.pageSize;\n  const end = start + pagination.pageSize;\n  // 应用我们的排序、分组处理逻辑\n  let results = [...filteredBiddingsData.value];\n  \n  // 按开始时间降序排序（默认排序）\n  return results.slice(start, end);\n});\n\n// --- 弹窗与表单 ---\nconst dialogVisible = ref(false);\nconst endEarlyDialogVisible = ref(false);\nconst dialogTitle = ref('');\nconst isCreating = ref(false);\nconst biddingFormRef = ref(null);\nconst currentBidding = ref(null);\n\n// 新竞价表单模型\nconst initialFormState = {\n  name: '',\n  serviceDescription: '',\n  details: '',\n  startTime: '',\n  endTime: '',\n  startPrice: null,\n  invitedSupplierIds: [],\n};\nconst biddingForm = reactive({ ...initialFormState });\n\n// 表单验证规则\nconst formRules = reactive({\n  name: [{ required: true, message: '请输入项目名称', trigger: 'blur' }],\n  serviceDescription: [{ required: true, message: '请输入服务类型/线路', trigger: 'blur' }],\n  details: [{ required: true, message: '请输入详细需求描述', trigger: 'blur' }],\n  startTime: [{ required: true, message: '请选择开始时间', trigger: 'change' }],\n  endTime: [{ required: true, message: '请选择结束时间', trigger: 'change' }],\n  invitedSupplierIds: [{ required: true, type: 'array', message: '请至少邀请一个供应商', trigger: 'change' }],\n});\n\n// --- 方法 ---\n// 格式化\nconst formatStatus = (status) => statusOptions[status]?.label || status;\nconst getStatusTagType = (status) => statusOptions[status]?.tag || 'info';\n\n// 搜索\nconst handleSearch = () => {\n  pagination.currentPage = 1;\n};\n\n// 创建新竞价项目\nconst handleCreateBidding = () => {\n  resetForm();\n  isCreating.value = true;\n  dialogTitle.value = '创建新竞价项目';\n  dialogVisible.value = true;\n};\n\n// 重置表单\nconst resetForm = () => {\n  Object.assign(biddingForm, initialFormState);\n  nextTick(() => {\n    biddingFormRef.value?.clearValidate();\n  });\n};\n\n// 查看详情与监控\nconst handleViewDetails = (row) => {\n  currentBidding.value = JSON.parse(JSON.stringify(row)); // 深拷贝\n  isCreating.value = false;\n  dialogTitle.value = `竞价详情 (${row.id})`;\n  dialogVisible.value = true;\n  startBiddingMonitor(); // 如果竞价中，开始模拟刷新\n};\n\n// 取消项目 (模拟)\nconst handleCancelBidding = (row) => {\n   ElMessageBox.confirm(`确定要取消竞价项目 ${row.name} (${row.id}) 吗?`, '确认取消', { type: 'warning' })\n     .then(() => {\n       console.log('取消竞价项目:', row.id);\n       const index = allBiddings.value.findIndex(b => b.id === row.id);\n       if (index !== -1 && (allBiddings.value[index].status === 'preparing' || allBiddings.value[index].status === 'bidding')) {\n         allBiddings.value[index].status = 'cancelled';\n         ElMessage.success('竞价项目已取消');\n       } else {\n           ElMessage.error('操作失败或状态已不允许取消');\n       }\n     })\n     .catch(() => ElMessage.info('取消操作'));\n};\n\n// 授标 (模拟)\nconst handleAward = (bidRow) => {\n    if (!currentBidding.value) return;\n    const bidding = currentBidding.value;\n\n     ElMessageBox.confirm(`确定将此项目授予供应商 ${bidRow.supplierName} (最终价: ${bidRow.bidPrice?.toFixed(2)} USD) 吗?`, '确认授标', { type: 'success' })\n     .then(() => {\n       console.log(`授标给: ${bidRow.supplierName} for bidding ${bidding.id}`);\n        const index = allBiddings.value.findIndex(b => b.id === bidding.id);\n        if (index !== -1 && allBiddings.value[index].status === 'ended') {\n            allBiddings.value[index].status = 'awarded';\n            allBiddings.value[index].awardedSupplierId = bidRow.supplierId;\n            allBiddings.value[index].awardedSupplierName = bidRow.supplierName;\n            allBiddings.value[index].awardedPrice = bidRow.bidPrice;\n\n            // 更新弹窗内的数据\n            currentBidding.value.status = 'awarded';\n            currentBidding.value.awardedSupplierId = bidRow.supplierId;\n            currentBidding.value.awardedSupplierName = bidRow.supplierName;\n            currentBidding.value.awardedPrice = bidRow.bidPrice;\n\n            ElMessage.success('授标成功');\n        } else {\n            ElMessage.error('授标失败: 状态不是\"已结束\"');\n        }\n     })\n     .catch(() => ElMessage.info('取消授标'));\n};\n\n// 弹窗关闭\nconst handleDialogClose = () => {\n  resetForm();\n  currentBidding.value = null;\n  stopBiddingMonitor(); // 关闭弹窗时停止刷新\n  dialogVisible.value = false;\n};\n\n// 提交新竞价项目 (模拟)\nconst handleSubmitBidding = async () => {\n  if (!biddingFormRef.value) return;\n  try {\n    await biddingFormRef.value.validate();\n    const now = new Date();\n    const newBidding = {\n      id: `BID-${String(now.getFullYear()).slice(2)}${String(Date.now()).slice(-5)}`,\n      name: biddingForm.name,\n      serviceDescription: biddingForm.serviceDescription,\n      details: biddingForm.details,\n      startTime: biddingForm.startTime,\n      endTime: biddingForm.endTime,\n      startPrice: biddingForm.startPrice,\n      invitedSupplierIds: biddingForm.invitedSupplierIds,\n      invitedCount: biddingForm.invitedSupplierIds.length,\n      status: 'preparing', // 初始状态为准备中\n      bids: [],\n      bidCount: 0,\n      currentLowestBid: null,\n      awardedSupplierId: null,\n      awardedSupplierName: null,\n      awardedPrice: null,\n    };\n    console.log('创建新竞价项目:', newBidding);\n    allBiddings.value.unshift(newBidding);\n    ElMessage.success('竞价项目创建成功，状态：准备中');\n    dialogVisible.value = false;\n  } catch (error) {\n    console.log('表单验证失败:', error);\n    ElMessage.error('请检查表单填写是否正确');\n  }\n};\n\n// 模拟竞价监控刷新\nconst startBiddingMonitor = () => {\n    stopBiddingMonitor(); // 先停止旧的\n    if (currentBidding.value && currentBidding.value.status === 'bidding') {\n        biddingRefreshTimer = setInterval(() => {\n            if (currentBidding.value && currentBidding.value.status === 'bidding') {\n                console.log('模拟刷新竞价数据...');\n                // 简单模拟：随机让一个供应商降低一点价格\n                const bids = currentBidding.value.bids;\n                if (bids && bids.length > 0) {\n                    const bidderIndex = Math.floor(Math.random() * bids.length);\n                    const bidder = bids[bidderIndex];\n                    bidder.bidPrice = Math.max(100, bidder.bidPrice - Math.random() * 50);\n                    bidder.bidCount += 1;\n                    bidder.bidTime = new Date().toLocaleString();\n                    // 重新排序\n                    bids.sort((a, b) => a.bidPrice - b.bidPrice);\n                    currentBidding.value.currentLowestBid = bids[0]?.bidPrice;\n                    currentBidding.value.bidCount += 1;\n                }\n            }\n        }, 5000); // 每 5 秒刷新一次\n    }\n};\n\nconst stopBiddingMonitor = () => {\n    if (biddingRefreshTimer) {\n        clearInterval(biddingRefreshTimer);\n        biddingRefreshTimer = null;\n    }\n};\n\n// 处理操作命令\nconst handleOperationCommand = (command, row) => {\n  switch (command) {\n    case 'monitor':\n      handleViewDetails(row);\n      break;\n    case 'endEarly':\n      handleEndEarlyBidding(row);\n      break;\n    case 'cancel':\n      handleCancelBidding(row);\n      break;\n  }\n};\n\n// 提前结束竞价\nconst handleEndEarlyBidding = (row) => {\n  currentBidding.value = JSON.parse(JSON.stringify(row)); // 深拷贝\n  endEarlyDialogVisible.value = true;\n};\n\n// 提前结束并授标\nconst handleEndEarlyAward = (bidRow) => {\n  ElMessageBox.confirm(\n    `确定要提前结束竞价并授予供应商 ${bidRow.supplierName} (最终价: ${bidRow.bidPrice?.toFixed(2)} USD) 吗?`, \n    '确认提前结束并授标', \n    { type: 'warning' }\n  ).then(() => {\n    const index = allBiddings.value.findIndex(b => b.id === currentBidding.value.id);\n    if (index !== -1 && allBiddings.value[index].status === 'bidding') {\n      // 更新竞价状态\n      allBiddings.value[index].status = 'awarded';\n      allBiddings.value[index].endTime = new Date().toLocaleString();\n      allBiddings.value[index].awardedSupplierId = bidRow.supplierId;\n      allBiddings.value[index].awardedSupplierName = bidRow.supplierName;\n      allBiddings.value[index].awardedPrice = bidRow.bidPrice;\n\n      // 更新弹窗内的数据\n      currentBidding.value.status = 'awarded';\n      currentBidding.value.awardedSupplierId = bidRow.supplierId;\n      currentBidding.value.awardedSupplierName = bidRow.supplierName;\n      currentBidding.value.awardedPrice = bidRow.bidPrice;\n\n      ElMessage.success('竞价项目已提前结束并授标');\n      endEarlyDialogVisible.value = false;\n    } else {\n      ElMessage.error('操作失败或状态已不允许提前结束');\n    }\n  }).catch(() => ElMessage.info('取消操作'));\n};\n\n// 处理竞价备注变更\nconst handleBidRemarkChange = (bidRow) => {\n  // 这里可以添加保存备注的逻辑\n  console.log('更新竞价备注:', bidRow);\n};\n\n// 在 script setup 部分添加以下方法\nconst getRatingClass = (rating) => {\n  if (rating >= 90) return 'rating-excellent';\n  if (rating >= 80) return 'rating-good';\n  if (rating >= 70) return 'rating-fair';\n  return 'rating-poor';\n};\n</script>\n\n<style scoped>\n.bidding-list-container {\n  padding: 20px;\n}\n.best-bid {\n    color: #F56C6C; /* 红色 */\n    font-weight: bold;\n}\n\n.supplier-rating {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n}\n\n.rating-count {\n  color: #909399;\n  font-size: 12px;\n}\n\n/* 其他样式与之前类似 */\n.card-header, .dialog-footer, .filter-form, .el-table, .el-divider, h4 { /* 沿用之前样式 */\n    /* ... */\n}\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n.filter-form .el-form-item {\n  margin-bottom: 10px;\n}\n.el-table {\n  margin-top: 15px;\n}\n.dialog-footer button:first-child {\n  margin-right: 10px;\n}\n.el-divider {\n    margin: 15px 0;\n}\nh4 {\n    margin-bottom: 10px;\n}\n\n/* 视图管理样式 */\n.view-management {\n  display: flex;\n  align-items: center;\n  padding: 10px 0;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin-bottom: 15px;\n}\n\n.status-view-group {\n  margin-right: auto;\n  flex-wrap: wrap;\n}\n\n/* 右键菜单 */\n.context-menu {\n  position: fixed;\n  background-color: #fff;\n  border: 1px solid #ebeef5;\n  border-radius: 4px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  z-index: 9999;\n  padding: 8px 0;\n}\n\n.context-menu-item {\n  padding: 8px 16px;\n  cursor: pointer;\n  font-size: 14px;\n}\n\n.context-menu-item:hover {\n  background-color: #f5f7fa;\n}\n\n/* 视图选项 */\n.view-options-menu {\n  padding: 10px 0;\n}\n\n.view-option-item {\n  display: flex;\n  align-items: center;\n  padding: 10px 20px;\n  cursor: pointer;\n}\n\n.view-option-item:hover {\n  background-color: #f5f7fa;\n}\n\n.view-option-item i {\n  margin-right: 10px;\n}\n\n/* 分组设置 */\n.group-settings {\n  padding: 20px 0;\n}\n\n.group-level {\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.group-level-label {\n  width: 100px;\n  text-align: right;\n  margin-right: 20px;\n}\n\n/* 排序设置 */\n.sort-settings {\n  padding: 20px 0;\n}\n\n.sort-item {\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n  gap: 10px;\n}\n\n.sort-actions {\n  margin-top: 20px;\n}\n\n/* 列设置样式 */\n.column-settings {\n  padding: 10px 0;\n}\n\n.column-settings-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.column-list {\n  max-height: 400px;\n  overflow-y: auto;\n  border: 1px solid #ebeef5;\n  border-radius: 4px;\n  padding: 10px;\n}\n\n.column-item {\n  display: flex;\n  align-items: center;\n  padding: 8px 0;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.column-item:last-child {\n  border-bottom: none;\n}\n\n.drag-handle {\n  cursor: move;\n  margin-right: 10px;\n  color: #909399;\n}\n\n.rating-excellent {\n  background-color: #f0f9eb;\n  color: #67c23a;\n  padding: 2px 8px;\n  border-radius: 4px;\n  font-weight: bold;\n  display: inline-block;\n  min-width: 60px;\n  text-align: center;\n}\n\n.rating-good {\n  background-color: #fdf6ec;\n  color: #e6a23c;\n  padding: 2px 8px;\n  border-radius: 4px;\n  font-weight: bold;\n  display: inline-block;\n  min-width: 60px;\n  text-align: center;\n}\n\n.rating-fair {\n  background-color: #f4f4f5;\n  color: #909399;\n  padding: 2px 8px;\n  border-radius: 4px;\n  font-weight: bold;\n  display: inline-block;\n  min-width: 60px;\n  text-align: center;\n}\n\n.rating-poor {\n  background-color: #fef0f0;\n  color: #f56c6c;\n  padding: 2px 8px;\n  border-radius: 4px;\n  font-weight: bold;\n  display: inline-block;\n  min-width: 60px;\n  text-align: center;\n}\n\n.rating-count {\n  color: #909399;\n  font-size: 12px;\n  margin-left: 4px;\n}\n</style> ","import script from \"./BiddingList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BiddingList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BiddingList.vue?vue&type=style&index=0&id=5b716569&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5b716569\"]])\n\nexport default __exports__"],"names":["mockSuppliers","ref","id","name","allBiddings","biddingRefreshTimer","generateMockBiddings","count","names","services","statuses","mockData","now","Date","i","status","Math","floor","random","length","createdAt","startTime","getTime","endTime","invitedCount","value","invitedSuppliers","sort","slice","bids","bidCount","currentLowestBid","awardedSupplierId","awardedSupplierName","awardedPrice","bidderCount","bidders","map","sup","supplierBids","bidTimes","currentBid","lastBidTime","min","j","push","price","time","a","b","supplierId","supplierName","bidPrice","max","bidTime","toLocaleString","remarks","rating","reduce","sum","awardedBid","String","getFullYear","serviceDescription","details","startPrice","parseFloat","toFixed","invitedSupplierIds","s","statusOptions","preparing","label","tag","bidding","ended","awarded","cancelled","defaultTableColumns","prop","width","sortable","minWidth","showOverflowTooltip","align","fixed","tableColumns","visibleColumns","selectedRows","currentView","customViews","saveViewDialogVisible","viewOptionsDialogVisible","renameViewDialogVisible","contextMenuVisible","contextMenuX","contextMenuY","groupField","viewForm","columns","currentEditingView","renameForm","filterPanelVisible","activeFilters","filterLogic","groupModalVisible","groupSettings","level1","level2","level3","groupableFields","computed","filter","col","includes","sortModalVisible","sortSettings","field","direction","sortableFields","columnSettingsVisible","columnSettingsList","allColumnsSelected","getCountByStatus","item","getGroupColumnLabel","column","find","showFilterPanel","applyFilters","filterData","filters","logic","applyCustomFilters","cancelFilters","showGroupModal","clearGroupSettings","applyGroupSettings","showSortModal","addSortField","removeSortField","index","splice","clearSortSettings","applySortSettings","validSortSettings","fieldA","fieldB","showColumnSettings","JSON","parse","stringify","every","visible","handleSelectAllColumns","val","forEach","resetColumnSettings","applyColumnSettings","handleDragEnd","handleContextMenu","event","view","preventDefault","clientX","clientY","closeContextMenu","document","removeEventListener","setTimeout","addEventListener","handleSaveView","saveView","trim","ElMessage","warning","viewId","newView","success","handleRenameView","saveRenameView","findIndex","v","handleCopyView","handleDeleteView","ElMessageBox","confirm","confirmButtonText","cancelButtonText","type","then","catch","handleSelectionChange","selection","filteredBiddingsData","filtered","startsWith","results","operator","itemValue","endsWith","Array","isArray","r","some","statusMatch","filterForm","nameMatch","dateMatch","dateRange","split","watch","newValue","immediate","onMounted","onUnmounted","stopBiddingMonitor","reactive","pagination","currentPage","pageSize","totalBiddings","filteredBiddingList","start","end","dialogVisible","endEarlyDialogVisible","dialogTitle","isCreating","biddingFormRef","currentBidding","initialFormState","biddingForm","formRules","required","message","trigger","formatStatus","getStatusTagType","handleSearch","handleCreateBidding","resetForm","Object","assign","nextTick","clearValidate","handleViewDetails","row","startBiddingMonitor","handleCancelBidding","console","log","error","info","handleAward","bidRow","handleDialogClose","handleSubmitBidding","async","validate","newBidding","unshift","setInterval","bidderIndex","bidder","clearInterval","handleOperationCommand","command","handleEndEarlyBidding","handleEndEarlyAward","handleBidRemarkChange","getRatingClass","__exports__"],"sourceRoot":""}