{"version":3,"file":"js/673.90324e6d.js","mappings":"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","sources":["webpack://vue-logistics-system/./src/views/WorkOrder/ValueAddedWorkOrderList.vue","webpack://vue-logistics-system/./src/views/WorkOrder/ValueAddedWorkOrderList.vue?2761"],"sourcesContent":["<template>\r\n  <div class=\"work-order-list-container\">\r\n    <div class=\"page-header\">\r\n      <h2 class=\"page-title\">增值服务工单</h2>\r\n      <div class=\"page-actions\">\r\n        <el-button type=\"primary\" @click=\"createWorkOrder\">请求增值服务</el-button>\r\n        <!-- 这里创建的工单类型应默认为 'value_added' -->\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 搜索和筛选区域 -->\r\n    <el-card shadow=\"never\" class=\"filter-card\">\r\n      <div class=\"search-bar\">\r\n        <el-input\r\n          v-model=\"searchQuery\"\r\n          placeholder=\"搜索增值服务工单 (工单号、主题、订单号、服务项目...)\"\r\n          class=\"search-input\"\r\n          @keyup.enter=\"handleSearch\">\r\n          <template #append>\r\n            <el-button :icon=\"Search\" @click=\"handleSearch\"></el-button>\r\n          </template>\r\n        </el-input>\r\n      </div>\r\n\r\n      <div class=\"filter-section\">\r\n        <el-form :inline=\"true\" :model=\"filters\" size=\"small\">\r\n          <el-form-item label=\"状态\">\r\n            <el-select v-model=\"filters.status\" placeholder=\"按状态筛选\" clearable>\r\n              <el-option label=\"待处理\" value=\"pending\"></el-option>\r\n              <el-option label=\"处理中\" value=\"processing\"></el-option>\r\n              <el-option label=\"待确认\" value=\"pending_confirmation\"></el-option>\r\n              <el-option label=\"已解决\" value=\"resolved\"></el-option>\r\n              <el-option label=\"已关闭\" value=\"closed\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <!-- 类型筛选已移除，固定为 'value_added' -->\r\n           <el-form-item label=\"服务项目\">\r\n                <el-input v-model=\"filters.serviceItem\" placeholder=\"按服务项目筛选\" clearable></el-input>\r\n           </el-form-item>\r\n          <el-form-item label=\"优先级\">\r\n            <el-select v-model=\"filters.priority\" placeholder=\"按优先级筛选\" clearable>\r\n              <el-option label=\"紧急\" value=\"urgent\"></el-option>\r\n              <el-option label=\"高\" value=\"high\"></el-option>\r\n              <el-option label=\"中\" value=\"medium\"></el-option>\r\n              <el-option label=\"低\" value=\"low\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"处理人\">\r\n            <el-select v-model=\"filters.assignee\" placeholder=\"按处理人筛选\" clearable filterable>\r\n              <el-option v-for=\"user in users\" :key=\"user.id\" :label=\"user.name\" :value=\"user.id\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"创建时间\">\r\n            <el-date-picker\r\n              v-model=\"filters.createdAtRange\"\r\n              type=\"daterange\"\r\n              start-placeholder=\"开始日期\"\r\n              end-placeholder=\"结束日期\"\r\n              range-separator=\"至\"\r\n              value-format=\"YYYY-MM-DD\">\r\n            </el-date-picker>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"handleSearch\">查询</el-button>\r\n            <el-button @click=\"resetFilters\">重置</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 工单列表 -->\r\n    <el-card shadow=\"never\" class=\"list-card\">\r\n      <div class=\"table-operations\" v-if=\"selectedRows.length > 0\">\r\n         <span class=\"selected-count\">已选择 {{ selectedRows.length }} 项</span>\r\n         <el-button size=\"small\" @click=\"batchProcess\">批量处理</el-button>\r\n         <el-button size=\"small\" @click=\"clearSelection\">清除选择</el-button>\r\n       </div>\r\n\r\n      <el-table\r\n        v-loading=\"loading\"\r\n        :data=\"workOrderList\"\r\n        @selection-change=\"handleSelectionChange\"\r\n        style=\"width: 100%\">\r\n        <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n        <el-table-column label=\"工单号\" prop=\"id\" width=\"150\">\r\n           <template #default=\"scope\">\r\n             <el-link type=\"primary\" @click=\"viewWorkOrder(scope.row.id)\">{{ scope.row.id }}</el-link>\r\n           </template>\r\n         </el-table-column>\r\n        <el-table-column label=\"主题\" prop=\"subject\" min-width=\"200\">\r\n           <template #default=\"scope\">\r\n             <div class=\"subject-cell\">\r\n               <span class=\"subject-text\">{{ scope.row.subject }}</span>\r\n               <el-tag v-if=\"scope.row.priority === 'urgent'\" type=\"danger\" size=\"small\" effect=\"dark\">紧急</el-tag>\r\n             </div>\r\n           </template>\r\n         </el-table-column>\r\n        <el-table-column label=\"类型\" prop=\"type\" width=\"120\">\r\n          <template #default=\"scope\">\r\n            {{ getTypeText(scope.row.type) }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"服务项目\" prop=\"serviceItem\" width=\"150\">\r\n           <template #default=\"scope\">\r\n             {{ scope.row.serviceItem || '-' }}\r\n           </template>\r\n         </el-table-column>\r\n        <el-table-column label=\"状态\" prop=\"status\" width=\"100\">\r\n           <template #default=\"scope\">\r\n             <el-tag :type=\"getStatusType(scope.row.status)\" size=\"small\">\r\n               {{ getStatusText(scope.row.status) }}\r\n             </el-tag>\r\n           </template>\r\n         </el-table-column>\r\n        <el-table-column label=\"优先级\" prop=\"priority\" width=\"80\">\r\n           <template #default=\"scope\">\r\n             <el-tag :type=\"getPriorityType(scope.row.priority)\" size=\"small\">\r\n               {{ getPriorityText(scope.row.priority) }}\r\n             </el-tag>\r\n           </template>\r\n         </el-table-column>\r\n        <el-table-column label=\"关联订单\" prop=\"orderNo\" width=\"150\">\r\n            <template #default=\"scope\">\r\n              <el-link v-if=\"scope.row.orderNo\" type=\"info\" @click=\"viewOrder(scope.row.orderNo)\">\r\n                {{ scope.row.orderNo }}\r\n              </el-link>\r\n              <span v-else>-</span>\r\n            </template>\r\n          </el-table-column>\r\n        <el-table-column label=\"创建人\" prop=\"creator\" width=\"100\"></el-table-column>\r\n        <el-table-column label=\"当前处理人\" prop=\"assignee\" width=\"100\">\r\n            <template #default=\"scope\">\r\n              {{ scope.row.assignee || '未指派' }}\r\n            </template>\r\n          </el-table-column>\r\n        <el-table-column label=\"创建时间\" prop=\"createdAt\" width=\"180\">\r\n            <template #default=\"scope\">\r\n              {{ formatDateTime(scope.row.createdAt) }}\r\n            </template>\r\n          </el-table-column>\r\n        <el-table-column label=\"更新时间\" prop=\"updatedAt\" width=\"180\">\r\n            <template #default=\"scope\">\r\n              {{ formatDateTime(scope.row.updatedAt) }}\r\n            </template>\r\n          </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"150\" fixed=\"right\">\r\n            <template #default=\"scope\">\r\n              <el-button link type=\"primary\" @click=\"viewWorkOrder(scope.row.id)\">查看</el-button>\r\n              <el-button link type=\"primary\" v-if=\"canProcess(scope.row)\" @click=\"processWorkOrder(scope.row)\">处理</el-button>\r\n            </template>\r\n          </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页 -->\r\n      <div class=\"pagination-container\">\r\n        <el-pagination\r\n          v-model:current-page=\"pagination.current\"\r\n          v-model:page-size=\"pagination.pageSize\"\r\n          :total=\"pagination.total\"\r\n          :page-sizes=\"[10, 20, 50, 100]\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\">\r\n        </el-pagination>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { Search } from '@element-plus/icons-vue';\r\nimport { ElMessage, ElMessageBox } from 'element-plus';\r\n\r\nconst router = useRouter();\r\n\r\nconst users = ref([\r\n  { id: 1, name: '张三' },\r\n  { id: 2, name: '李四' },\r\n  { id: 3, name: '客服团队' },\r\n  { id: 7, name: '增值服务组' } // Added for example\r\n]);\r\n\r\nconst loading = ref(false);\r\nconst searchQuery = ref('');\r\n\r\nconst filters = reactive({\r\n  status: '',\r\n  type: 'value_added', // 固定类型\r\n  serviceItem: '', // 新增服务项目筛选\r\n  priority: '',\r\n  assignee: null,\r\n  createdAtRange: [],\r\n});\r\n\r\n// 列表数据 (仅包含增值服务工单示例)\r\nconst workOrderList = ref([\r\n   {\r\n    id: 'WO202307250002',\r\n    subject: '请求特殊配送服务',\r\n    type: 'value_added',\r\n    status: 'processing',\r\n    priority: 'medium',\r\n    serviceItem: '特殊配送', // 服务项目\r\n    orderNo: 'ORD202307250124',\r\n    creator: '李四',\r\n    assignee: '增值服务组',\r\n    createdAt: new Date(Date.now() - 22 * 60 * 60 * 1000),\r\n    updatedAt: new Date(Date.now() - 12 * 60 * 60 * 1000),\r\n  },\r\n   {\r\n    id: 'WO202307250009',\r\n    subject: '订单礼品包装请求',\r\n    type: 'value_added',\r\n    status: 'pending',\r\n    priority: 'low',\r\n    serviceItem: '礼品包装',\r\n    orderNo: 'ORD202307250128',\r\n    creator: '张三',\r\n    assignee: '', // 未指派\r\n    createdAt: new Date(Date.now() - 5 * 60 * 60 * 1000),\r\n    updatedAt: new Date(Date.now() - 5 * 60 * 60 * 1000),\r\n  },\r\n]);\r\n\r\nconst pagination = reactive({\r\n  current: 1,\r\n  pageSize: 10,\r\n  total: 0,\r\n});\r\n\r\nconst selectedRows = ref([]);\r\n\r\n// --- 辅助函数 --- (与之前相同)\r\nconst formatDateTime = (date) => {\r\n  if (!date) return '-';\r\n  const d = new Date(date);\r\n  return `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')} ${String(d.getHours()).padStart(2, '0')}:${String(d.getMinutes()).padStart(2, '0')}`;\r\n};\r\n\r\nconst getStatusText = (status) => {\r\n  const statusMap = {\r\n    'pending': '待处理',\r\n    'processing': '处理中',\r\n    'pending_confirmation': '待确认',\r\n    'resolved': '已解决',\r\n    'closed': '已关闭'\r\n  };\r\n  return statusMap[status] || status;\r\n};\r\n\r\nconst getStatusType = (status) => {\r\n  const typeMap = {\r\n    'pending': 'warning',\r\n    'processing': 'primary',\r\n    'pending_confirmation': 'info',\r\n    'resolved': 'success',\r\n    'closed': 'info'\r\n  };\r\n  return typeMap[status] || 'info';\r\n};\r\n\r\nconst getTypeText = (type) => {\r\n  const typeMap = {\r\n    'exception': '异常订单处理',\r\n    'command': '指令执行',\r\n    'warning': '订单预警响应',\r\n    'value_added': '增值服务请求',\r\n    'other': '其他问题'\r\n  };\r\n  return typeMap[type] || type;\r\n};\r\n\r\nconst getPriorityText = (priority) => {\r\n  const priorityMap = {\r\n    'urgent': '紧急',\r\n    'high': '高',\r\n    'medium': '中',\r\n    'low': '低'\r\n  };\r\n  return priorityMap[priority] || priority;\r\n};\r\n\r\nconst getPriorityType = (priority) => {\r\n  const typeMap = {\r\n    'urgent': 'danger',\r\n    'high': 'warning',\r\n    'medium': 'info',\r\n    'low': 'success'\r\n  };\r\n  return typeMap[priority] || 'info';\r\n};\r\n\r\n// 判断是否可处理\r\nconst canProcess = (workOrder) => {\r\n  return ['pending', 'processing'].includes(workOrder.status);\r\n};\r\n\r\n// --- 事件处理函数 ---\r\nconst handleSearch = () => {\r\n  pagination.current = 1;\r\n  fetchWorkOrders();\r\n};\r\n\r\nconst resetFilters = () => {\r\n  filters.status = '';\r\n  filters.serviceItem = '';\r\n  filters.priority = '';\r\n  filters.assignee = null;\r\n  filters.createdAtRange = [];\r\n  searchQuery.value = '';\r\n  handleSearch();\r\n};\r\n\r\nconst handleSelectionChange = (selection) => {\r\n  selectedRows.value = selection;\r\n};\r\n\r\nconst clearSelection = () => {\r\n  selectedRows.value = [];\r\n};\r\n\r\nconst handleSizeChange = (size) => {\r\n  pagination.pageSize = size;\r\n  fetchWorkOrders();\r\n};\r\n\r\nconst handleCurrentChange = (page) => {\r\n  pagination.current = page;\r\n  fetchWorkOrders();\r\n};\r\n\r\n// --- 操作函数 ---\r\nconst createWorkOrder = () => {\r\n  router.push({ path: '/work-order/create', query: { defaultType: 'value_added' } });\r\n};\r\n\r\nconst viewWorkOrder = (id) => {\r\n  router.push(`/work-order/detail/${id}`);\r\n};\r\n\r\nconst viewOrder = (orderNo) => {\r\n  if (orderNo) {\r\n    ElMessage.info(`跳转到订单 ${orderNo} 的详情页 (功能待实现)`);\r\n    // router.push(`/order/detail/${orderNo}`);\r\n  }\r\n};\r\n\r\nconst processWorkOrder = (workOrder) => {\r\n   // 与之前相同逻辑\r\n   ElMessageBox.confirm(/* ... */).then(() => {\r\n     /* ... */\r\n     router.push(`/work-order/detail/${workOrder.id}`);\r\n   }).catch(() => {});\r\n};\r\n\r\nconst batchProcess = () => {\r\n   // 与之前相同逻辑\r\n   /* ... */\r\n};\r\n\r\n// 获取工单列表数据\r\nconst fetchWorkOrders = async () => {\r\n  loading.value = true;\r\n  try {\r\n    const params = {\r\n      page: pagination.current,\r\n      pageSize: pagination.pageSize,\r\n      search: searchQuery.value,\r\n      type: filters.type, // 固定为 value_added\r\n      status: filters.status,\r\n      serviceItem: filters.serviceItem,\r\n      priority: filters.priority,\r\n      assigneeId: filters.assignee,\r\n      createdAtStart: filters.createdAtRange ? filters.createdAtRange[0] : null,\r\n      createdAtEnd: filters.createdAtRange ? filters.createdAtRange[1] : null,\r\n    };\r\n    console.log(\"Fetching Value Added Work Orders with params:\", params);\r\n    // const res = await api.getWorkOrders(params);\r\n    // workOrderList.value = res.data.records;\r\n    // pagination.total = res.data.total;\r\n\r\n    // 模拟API请求延迟和过滤\r\n    setTimeout(() => {\r\n       let filteredData = [...workOrderList.value]; // Start with full mock data for demo\r\n\r\n        // Apply filters (client-side simulation for demo)\r\n       if (params.search) { /* ... search logic ... */ }\r\n       if (params.status) { /* ... status filter ... */ }\r\n       if (params.serviceItem) {\r\n            filteredData = filteredData.filter(wo => wo.serviceItem && wo.serviceItem.toLowerCase().includes(params.serviceItem.toLowerCase()));\r\n       }\r\n       if (params.priority) { /* ... priority filter ... */ }\r\n       if (params.assigneeId) { /* ... assignee filter ... */ }\r\n       // createdAtRange filter simulation\r\n       // ...\r\n\r\n       // Apply pagination (simulation)\r\n       const start = (params.page - 1) * params.pageSize;\r\n       const end = start + params.pageSize;\r\n       const paginatedData = filteredData.slice(start, end);\r\n\r\n       workOrderList.value = paginatedData;\r\n       pagination.total = filteredData.length;\r\n       loading.value = false;\r\n    }, 500);\r\n  } catch (error) {\r\n    console.error('Failed to fetch value added work orders:', error);\r\n    ElMessage.error('获取增值服务工单列表失败');\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\nonMounted(() => {\r\n  fetchWorkOrders();\r\n});\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* 样式与其他列表页相同 */\r\n.work-order-list-container { padding: 20px; }\r\n.page-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px; }\r\n.page-title { margin: 0; font-size: 22px; font-weight: bold; }\r\n.filter-card { margin-bottom: 20px; }\r\n.search-bar { margin-bottom: 15px; }\r\n.search-input { width: 100%; max-width: 500px; }\r\n.list-card { margin-bottom: 20px; }\r\n.table-operations { margin-bottom: 16px; display: flex; align-items: center; }\r\n.selected-count { margin-right: 16px; color: #606266; }\r\n.subject-cell { display: flex; align-items: center; }\r\n.subject-text { margin-right: 8px; }\r\n.pagination-container { margin-top: 20px; display: flex; justify-content: flex-end; }\r\n</style> ","import script from \"./ValueAddedWorkOrderList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValueAddedWorkOrderList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ValueAddedWorkOrderList.vue?vue&type=style&index=0&id=c68caee6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c68caee6\"]])\n\nexport default __exports__"],"names":["router","useRouter","users","ref","id","name","loading","searchQuery","filters","reactive","status","type","serviceItem","priority","assignee","createdAtRange","workOrderList","subject","orderNo","creator","createdAt","Date","now","updatedAt","pagination","current","pageSize","total","selectedRows","formatDateTime","date","d","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","getStatusText","statusMap","getStatusType","typeMap","getTypeText","getPriorityText","priorityMap","getPriorityType","canProcess","workOrder","includes","handleSearch","fetchWorkOrders","resetFilters","value","handleSelectionChange","selection","clearSelection","handleSizeChange","size","handleCurrentChange","page","createWorkOrder","push","path","query","defaultType","viewWorkOrder","viewOrder","ElMessage","info","processWorkOrder","ElMessageBox","confirm","then","catch","batchProcess","async","params","search","assigneeId","createdAtStart","createdAtEnd","console","log","setTimeout","filteredData","filter","wo","toLowerCase","start","end","paginatedData","slice","length","error","onMounted","__exports__"],"sourceRoot":""}