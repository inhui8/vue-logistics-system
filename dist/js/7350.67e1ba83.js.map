{"version":3,"file":"js/7350.67e1ba83.js","mappings":"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","sources":["webpack://vue-logistics-system/./src/views/MessageCenter/EmailManagement/EmailAccount.vue","webpack://vue-logistics-system/./src/views/MessageCenter/EmailManagement/EmailAccount.vue?c0f8"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-card shadow=\"never\">\r\n      <!-- 操作区域 -->\r\n      <div class=\"flex justify-between mb-4\">\r\n        <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"handleAdd\">新增账号</el-button>\r\n        <div>\r\n          <!-- 可以在这里添加搜索等 -->\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 表格区域 -->\r\n      <el-table v-loading=\"loading\" :data=\"accountList\">\r\n        <el-table-column label=\"邮箱地址\" align=\"center\" prop=\"mail\" />\r\n        <el-table-column label=\"SMTP服务器\" align=\"center\" prop=\"host\" width=\"180\"/>\r\n        <el-table-column label=\"端口\" align=\"center\" prop=\"port\" width=\"80\"/>\r\n        <el-table-column label=\"用户名\" align=\"center\" prop=\"username\" />\r\n        <el-table-column label=\"启用SSL\" align=\"center\" prop=\"enableSsl\" width=\"100\">\r\n          <template #default=\"scope\">\r\n            <el-tag :type=\"scope.row.enableSsl ? 'success' : 'danger'\">\r\n              {{ scope.row.enableSsl ? '是' : '否' }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n         <el-table-column label=\"是否默认\" align=\"center\" prop=\"isDefault\" width=\"100\">\r\n          <template #default=\"scope\">\r\n            <el-tag :type=\"scope.row.isDefault ? 'success' : 'info'\">\r\n               {{ scope.row.isDefault ? '是' : '否' }}\r\n             </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" align=\"center\" width=\"240\" class-name=\"small-padding fixed-width\">\r\n          <template #default=\"scope\">\r\n            <el-button link type=\"primary\" icon=\"el-icon-edit\" @click=\"handleUpdate(scope.row)\">修改</el-button>\r\n            <el-button link type=\"primary\" icon=\"el-icon-delete\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n             <el-button link type=\"primary\" icon=\"el-icon-connection\" @click=\"handleTestConnection(scope.row)\">测试连接</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页 -->\r\n      <el-pagination\r\n        v-show=\"total > 0\"\r\n        v-model:current-page=\"queryParams.pageNo\"\r\n        v-model:page-size=\"queryParams.pageSize\"\r\n        :total=\"total\"\r\n        :page-sizes=\"[10, 20, 30, 50]\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        @size-change=\"getList\"\r\n        @current-change=\"getList\"\r\n        class=\"mt-4 justify-end\"\r\n      />\r\n    </el-card>\r\n\r\n    <!-- 添加或修改邮箱账号对话框 -->\r\n    <el-dialog :title=\"dialogTitle\" v-model=\"dialogVisible\" width=\"600px\" append-to-body>\r\n      <el-form ref=\"formRef\" :model=\"form\" :rules=\"rules\" label-width=\"120px\">\r\n        <el-form-item label=\"邮箱地址\" prop=\"mail\">\r\n          <el-input v-model=\"form.mail\" placeholder=\"请输入邮箱地址\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"form.username\" placeholder=\"请输入用户名\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"密码/授权码\" prop=\"password\">\r\n          <el-input v-model=\"form.password\" type=\"password\" show-password placeholder=\"请输入密码或授权码\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"SMTP服务器地址\" prop=\"host\">\r\n          <el-input v-model=\"form.host\" placeholder=\"请输入 SMTP 服务器地址\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"SMTP服务器端口\" prop=\"port\">\r\n          <el-input-number v-model=\"form.port\" controls-position=\"right\" :min=\"0\" placeholder=\"请输入 SMTP 服务器端口\" style=\"width: 100%\"/>\r\n        </el-form-item>\r\n        <el-form-item label=\"启用SSL\" prop=\"enableSsl\">\r\n           <el-switch v-model=\"form.enableSsl\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"是否默认\" prop=\"isDefault\">\r\n           <el-switch v-model=\"form.isDefault\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <div class=\"dialog-footer\">\r\n          <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\r\n          <el-button @click=\"cancel\">取 消</el-button>\r\n        </div>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted } from 'vue';\r\nimport { ElMessage, ElMessageBox } from 'element-plus'; // Assuming Element Plus is used\r\n\r\n// --- 数据定义 ---\r\nconst loading = ref(true); // 列表加载状态\r\nconst accountList = ref([]); // 账号列表\r\nconst total = ref(0); // 总条数\r\nconst dialogVisible = ref(false); // 弹窗可见性\r\nconst dialogTitle = ref(''); // 弹窗标题\r\nconst formRef = ref(null); // 表单引用\r\n\r\n// 查询参数\r\nconst queryParams = reactive({\r\n  pageNo: 1,\r\n  pageSize: 10,\r\n  // 其他查询参数可以加在这里\r\n});\r\n\r\n// 表单数据模型\r\nconst form = ref({\r\n  id: undefined,\r\n  mail: '',\r\n  username: '',\r\n  password: '',\r\n  host: '',\r\n  port: 465, // Default SSL port\r\n  enableSsl: true,\r\n  isDefault: false,\r\n});\r\n\r\n// 表单校验规则\r\nconst rules = reactive({\r\n  mail: [\r\n    { required: true, message: '邮箱地址不能为空', trigger: 'blur' },\r\n    { type: 'email', message: '请输入正确的邮箱地址', trigger: ['blur', 'change'] }\r\n  ],\r\n  username: [\r\n    { required: true, message: '用户名不能为空', trigger: 'blur' }\r\n  ],\r\n  password: [\r\n    { required: true, message: '密码/授权码不能为空', trigger: 'blur' } // Might adjust validation later if editing\r\n  ],\r\n  host: [\r\n    { required: true, message: 'SMTP服务器地址不能为空', trigger: 'blur' }\r\n  ],\r\n  port: [\r\n    { required: true, message: 'SMTP服务器端口不能为空', trigger: 'blur' }\r\n  ],\r\n});\r\n\r\n// --- 方法定义 ---\r\n\r\n// 获取账号列表 (模拟)\r\nconst getList = () => {\r\n  loading.value = true;\r\n  console.log('Fetching list with params:', queryParams);\r\n  // --- 模拟 API 调用 ---\r\n  setTimeout(() => {\r\n    const mockData = [\r\n      { id: 1, mail: 'sender1@example.com', host: 'smtp.example.com', port: 465, username: 'sender1', password: '***', enableSsl: true, isDefault: true },\r\n      { id: 2, mail: 'sender2@example.com', host: 'smtp.gmail.com', port: 587, username: 'sender2@gmail.com', password: '***', enableSsl: true, isDefault: false },\r\n      { id: 3, mail: 'no-ssl@example.com', host: 'smtp.office365.com', port: 587, username: 'no-ssl', password: '***', enableSsl: true, isDefault: false }, // Note: Office365 typically uses STARTTLS on 587\r\n      { id: 4, mail: 'another@domain.net', host: 'mail.domain.net', port: 25, username: 'another', password: '***', enableSsl: false, isDefault: false },\r\n    ];\r\n    // Simulate pagination\r\n    const start = (queryParams.pageNo - 1) * queryParams.pageSize;\r\n    const end = start + queryParams.pageSize;\r\n    accountList.value = mockData.slice(start, end);\r\n    total.value = mockData.length;\r\n    loading.value = false;\r\n  }, 500);\r\n  // --- 模拟结束 ---\r\n  // 实际应用中:\r\n  // try {\r\n  //   const response = await emailAccountApi.getPage(queryParams);\r\n  //   accountList.value = response.data.list;\r\n  //   total.value = response.data.total;\r\n  // } finally {\r\n  //   loading.value = false;\r\n  // }\r\n};\r\n\r\n// 重置表单\r\nconst resetForm = () => {\r\n  form.value = {\r\n    id: undefined,\r\n    mail: '',\r\n    username: '',\r\n    password: '',\r\n    host: '',\r\n    port: 465,\r\n    enableSsl: true,\r\n    isDefault: false,\r\n  };\r\n  formRef.value?.resetFields(); // Reset validation state\r\n};\r\n\r\n// 打开新增弹窗\r\nconst handleAdd = () => {\r\n  resetForm();\r\n  dialogTitle.value = '新增邮箱账号';\r\n  dialogVisible.value = true;\r\n};\r\n\r\n// 打开修改弹窗\r\nconst handleUpdate = (row) => {\r\n  resetForm();\r\n   // Create a copy to avoid modifying the original list data directly\r\n  form.value = { ...row };\r\n   // Password field might not be sent from backend list, handle accordingly\r\n  form.value.password = ''; // Clear password for editing, prompt user to re-enter if changing\r\n  dialogTitle.value = '修改邮箱账号';\r\n  dialogVisible.value = true;\r\n  // Adjust password validation if needed for update (e.g., make it optional unless changed)\r\n};\r\n\r\n// 取消弹窗\r\nconst cancel = () => {\r\n  dialogVisible.value = false;\r\n  resetForm();\r\n};\r\n\r\n// 提交表单 (模拟)\r\nconst submitForm = () => {\r\n  formRef.value?.validate(async (valid) => {\r\n    if (valid) {\r\n      // --- 模拟 API 调用 ---\r\n      console.log('Submitting form:', form.value);\r\n      const isUpdate = !!form.value.id;\r\n      ElMessage.success(isUpdate ? '修改成功' : '新增成功');\r\n      dialogVisible.value = false;\r\n      getList(); // Refresh list after success\r\n      // --- 模拟结束 ---\r\n\r\n      // 实际应用中:\r\n      // try {\r\n      //   if (form.value.id) {\r\n      //     await emailAccountApi.update(form.value);\r\n      //     ElMessage.success('修改成功');\r\n      //   } else {\r\n      //     await emailAccountApi.create(form.value);\r\n      //     ElMessage.success('新增成功');\r\n      //   }\r\n      //   dialogVisible.value = false;\r\n      //   getList();\r\n      // } catch (error) {\r\n      //   console.error('Form submission error:', error);\r\n      //   // Handle error display\r\n      // }\r\n    } else {\r\n      console.log('Form validation failed');\r\n    }\r\n  });\r\n};\r\n\r\n// 删除账号 (模拟)\r\nconst handleDelete = (row) => {\r\n  ElMessageBox.confirm(\r\n    `确定要删除邮箱账号 \"${row.mail}\" 吗？`,\r\n    '提示',\r\n    {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    }\r\n  ).then(() => {\r\n    // --- 模拟 API 调用 ---\r\n    console.log('Deleting account:', row.id);\r\n    ElMessage.success('删除成功');\r\n    getList(); // Refresh list\r\n    // --- 模拟结束 ---\r\n    // 实际应用中:\r\n    // await emailAccountApi.delete(row.id);\r\n    // ElMessage.success('删除成功');\r\n    // getList();\r\n  }).catch(() => {\r\n    // User cancelled\r\n  });\r\n};\r\n\r\n// 测试连接 (模拟)\r\nconst handleTestConnection = (row) => {\r\n  console.log('Testing connection for:', row.mail);\r\n  // --- 模拟 API 调用 ---\r\n   ElMessage.info(`正在测试账号 ${row.mail}...`);\r\n   setTimeout(() => {\r\n     // Simulate success/failure based on some condition maybe\r\n     const success = Math.random() > 0.3; // Simulate 70% success rate\r\n     if (success) {\r\n        ElMessage.success(`账号 ${row.mail} 连接测试成功！`);\r\n     } else {\r\n       ElMessage.error(`账号 ${row.mail} 连接测试失败，请检查配置和网络。`);\r\n     }\r\n   }, 1500);\r\n  // --- 模拟结束 ---\r\n  // 实际应用中:\r\n  // try {\r\n  //   ElMessage.info(`正在测试账号 ${row.mail}...`);\r\n  //   await emailAccountApi.testConnection(row.id);\r\n  //   ElMessage.success(`账号 ${row.mail} 连接测试成功！`);\r\n  // } catch (error) {\r\n  //    ElMessage.error(`账号 ${row.mail} 连接测试失败: ${error.message || '请检查配置和网络。'}`);\r\n  // }\r\n};\r\n\r\n\r\n// --- 生命周期钩子 ---\r\nonMounted(() => {\r\n  getList();\r\n});\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* Add custom styles if needed */\r\n.app-container {\r\n  padding: 20px;\r\n}\r\n.flex {\r\n  display: flex;\r\n}\r\n.justify-between {\r\n  justify-content: space-between;\r\n}\r\n.justify-end {\r\n  justify-content: flex-end;\r\n}\r\n.mb-4 {\r\n  margin-bottom: 16px; /* Adjust spacing */\r\n}\r\n.mt-4 {\r\n  margin-top: 16px; /* Adjust spacing */\r\n}\r\n/* Ensure action buttons in table don't wrap unnecessarily */\r\n.el-table .cell .el-button {\r\n  margin-left: 5px;\r\n}\r\n.el-table .cell .el-button + .el-button {\r\n  margin-left: 5px;\r\n}\r\n</style> ","import script from \"./EmailAccount.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EmailAccount.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./EmailAccount.vue?vue&type=style&index=0&id=4c5a1a5d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4c5a1a5d\"]])\n\nexport default __exports__"],"names":["loading","ref","accountList","total","dialogVisible","dialogTitle","formRef","queryParams","reactive","pageNo","pageSize","form","id","undefined","mail","username","password","host","port","enableSsl","isDefault","rules","required","message","trigger","type","getList","value","console","log","setTimeout","mockData","start","end","slice","length","resetForm","resetFields","handleAdd","handleUpdate","row","cancel","submitForm","validate","async","valid","isUpdate","ElMessage","success","handleDelete","ElMessageBox","confirm","confirmButtonText","cancelButtonText","then","catch","handleTestConnection","info","Math","random","error","onMounted","__exports__"],"sourceRoot":""}