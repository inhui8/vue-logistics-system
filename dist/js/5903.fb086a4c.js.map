{"version":3,"file":"js/5903.fb086a4c.js","mappings":"gQAyEA,MAAMA,GAAUC,EAAAA,EAAAA,IAAI,IAEdC,EAAmBA,CAACC,EAAQ,OAChC,MAAMC,EAAU,CACd,CAAEC,IAAK,WAAYC,MAAO,SAC1B,CAAED,IAAK,OAAQC,MAAO,QACtB,CAAED,IAAK,QAASC,MAAO,QACvB,CAAED,IAAK,QAASC,MAAO,QACvB,CAAED,IAAK,QAASC,MAAO,UAEnBC,EAAU,CAAC,KAAM,KAAM,KAAM,KAAM,OAAQ,OAAQ,KAAM,KAAM,MAC/DC,EAAY,CAAC,OAAQ,QAAS,OAAQ,SACtCC,EAAW,GACXC,EAAMC,KAAKD,MAEjB,IAAK,IAAIE,EAAI,EAAGA,EAAIT,EAAOS,IAAK,CAC9B,MAAMC,EAAYH,EAAMI,KAAKC,MAAsB,GAAhBD,KAAKE,SAAgB,GAAK,GAAK,GAAK,KACjEC,EAASb,EAAQU,KAAKC,MAAMD,KAAKE,SAAWZ,EAAQc,SACpDC,EAASZ,EAAQO,KAAKC,MAAMD,KAAKE,SAAWT,EAAQW,SACpDE,EAAWZ,EAAUM,KAAKC,MAAMD,KAAKE,SAAWR,EAAUU,SAChET,EAASY,KAAK,CACZC,GAAI,QAAOZ,EAAME,GACjBC,UAAW,IAAIF,KAAKE,GAAWU,eAAe,SAC9CH,SAAUA,EACVH,OAAQA,EAAOZ,IACfc,OAAQA,EACRK,QAAS,GAAGL,MAAWF,EAAOX,kBAAkBQ,KAAKC,MAAsB,IAAhBD,KAAKE,YAChES,UAAW,WAAWX,KAAKC,MAAsB,IAAhBD,KAAKE,aAAmBF,KAAKC,MAAsB,IAAhBD,KAAKE,aAE7E,CACA,OAAOP,EAASiB,MAAK,CAACC,EAAGC,IAAM,IAAIjB,KAAKiB,EAAEf,WAAa,IAAIF,KAAKgB,EAAEd,YAAW,EAIzEgB,GAAaC,EAAAA,EAAAA,IAAS,CAC1BV,SAAU,GACVH,OAAQ,GACRc,UAAW,KAGPC,GAAaF,EAAAA,EAAAA,IAAS,CAC1BG,YAAa,EACbC,SAAU,KAGNC,GAAYC,EAAAA,EAAAA,KAAS,IAAMC,EAAiBC,MAAMpB,SAGlDmB,GAAmBD,EAAAA,EAAAA,KAAS,IACzBpC,EAAQsC,MAAMC,QAAOC,IAC1B,MAAMC,GAAgBZ,EAAWT,UAAWoB,EAAIpB,SAASsB,SAASb,EAAWT,UACvEuB,GAAcd,EAAWZ,QAASuB,EAAIvB,SAAWY,EAAWZ,OAC5D2B,GAAYf,EAAWE,WAA6C,IAAhCF,EAAWE,UAAUb,QAC1D,IAAIP,KAAK6B,EAAI3B,YAAc,IAAIF,KAAKkB,EAAWE,UAAU,KAAO,IAAIpB,KAAK6B,EAAI3B,YAAc,IAAIF,KAAKkB,EAAWE,UAAU,IAE9H,OAAOU,GAAiBE,GAAeC,CAAS,MAK9CC,GAAkBT,EAAAA,EAAAA,KAAS,KAC/B,MAAMU,GAASd,EAAWC,YAAc,GAAKD,EAAWE,SAClDa,EAAMD,EAAQd,EAAWE,SAC/B,OAAOG,EAAiBC,MAAMU,MAAMF,EAAOC,EAAI,IAI3CE,EAAgBC,IAClB,MAAM9C,EAAU,CACd+C,SAAU,QACVC,KAAM,OACNC,MAAO,OACPC,MAAO,OACPC,MAAO,SAET,OAAOnD,EAAQ8C,IAAcA,CAAS,EAGpCM,EAAeA,KACnBxB,EAAWC,YAAc,CAAC,EAItBwB,EAAoBC,IACxB1B,EAAWE,SAAWwB,EACtB1B,EAAWC,YAAc,CAAC,EAGtB0B,EAAuBC,IAC3B5B,EAAWC,YAAc2B,CAAO,E,OAIlCC,EAAAA,EAAAA,KAAU,KACR7D,EAAQsC,MAAQpC,GAAkB,I,05ECjKpC,MAAM4D,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,G","sources":["webpack://vue-logistics-system/./src/views/Admin/OperationLog/LogList.vue","webpack://vue-logistics-system/./src/views/Admin/OperationLog/LogList.vue?abb4"],"sourcesContent":["<template>\r\n  <div class=\"log-list-container\">\r\n    <el-card>\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>操作日志</span>\r\n        </div>\r\n      </template>\r\n\r\n      <!-- 筛选区域 -->\r\n      <el-form :inline=\"true\" :model=\"filterForm\" class=\"filter-form\">\r\n        <el-form-item label=\"操作人\">\r\n          <el-input v-model=\"filterForm.operator\" placeholder=\"输入操作人名称\" clearable />\r\n        </el-form-item>\r\n        <el-form-item label=\"操作模块\">\r\n          <el-select v-model=\"filterForm.module\" placeholder=\"选择模块\" clearable>\r\n             <el-option label=\"供应商管理\" value=\"supplier\" />\r\n             <el-option label=\"角色管理\" value=\"role\" />\r\n             <el-option label=\"订单管理\" value=\"order\" />\r\n             <el-option label=\"报价管理\" value=\"quote\" />\r\n             <!-- 其他模块 -->\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"时间范围\">\r\n           <el-date-picker\r\n              v-model=\"filterForm.dateRange\"\r\n              type=\"datetimerange\"\r\n              range-separator=\"至\"\r\n              start-placeholder=\"开始时间\"\r\n              end-placeholder=\"结束时间\"\r\n              value-format=\"YYYY-MM-DD HH:mm:ss\" \r\n            /> <!-- 定义格式 -->\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleSearch\">查询</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <!-- 日志列表 -->\r\n      <el-table :data=\"filteredLogList\" style=\"width: 100%\" border>\r\n        <el-table-column prop=\"timestamp\" label=\"操作时间\" width=\"180\" />\r\n        <el-table-column prop=\"operator\" label=\"操作人\" width=\"120\" />\r\n        <el-table-column prop=\"module\" label=\"操作模块\" width=\"150\">\r\n            <template #default=\"scope\">\r\n              {{ formatModule(scope.row.module) }}\r\n            </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"action\" label=\"操作类型\" width=\"120\" />\r\n        <el-table-column prop=\"details\" label=\"操作详情\" show-overflow-tooltip />\r\n        <el-table-column prop=\"ipAddress\" label=\"IP 地址\" width=\"150\" />\r\n      </el-table>\r\n\r\n       <!-- 分页 -->\r\n      <el-pagination\r\n         style=\"margin-top: 20px; justify-content: flex-end;\"\r\n         background\r\n         layout=\"total, sizes, prev, pager, next, jumper\"\r\n         :total=\"totalLogs\"\r\n         :page-sizes=\"[10, 20, 50, 100]\"\r\n         :page-size=\"pagination.pageSize\"\r\n         :current-page=\"pagination.currentPage\"\r\n         @size-change=\"handleSizeChange\"\r\n         @current-change=\"handleCurrentChange\"\r\n       />\r\n\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed, onMounted } from 'vue';\r\n\r\n// --- 模拟数据 ---\r\nconst allLogs = ref([]); // 存储所有日志\r\n\r\nconst generateMockLogs = (count = 150) => {\r\n  const modules = [\r\n    { key: 'supplier', label: '供应商管理' },\r\n    { key: 'role', label: '角色管理' },\r\n    { key: 'order', label: '订单管理' },\r\n    { key: 'quote', label: '报价管理' },\r\n    { key: 'login', label: '登录/登出' },\r\n  ];\r\n  const actions = ['创建', '更新', '删除', '查看', '审批通过', '审批拒绝', '分配', '登录', '登出'];\r\n  const operators = ['管理员A', '运营专员B', '调度员C', '系统管理员'];\r\n  const mockData = [];\r\n  const now = Date.now();\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    const timestamp = now - Math.floor(Math.random() * 30 * 24 * 60 * 60 * 1000); // 过去30天内\r\n    const module = modules[Math.floor(Math.random() * modules.length)];\r\n    const action = actions[Math.floor(Math.random() * actions.length)];\r\n    const operator = operators[Math.floor(Math.random() * operators.length)];\r\n    mockData.push({\r\n      id: `log_${now - i}`,\r\n      timestamp: new Date(timestamp).toLocaleString('sv-SE'), // YYYY-MM-DD HH:MM:SS\r\n      operator: operator,\r\n      module: module.key,\r\n      action: action,\r\n      details: `${action}了 ${module.label} 中的项目 ID: ${Math.floor(Math.random() * 1000)}`, // 简化的详情\r\n      ipAddress: `192.168.${Math.floor(Math.random() * 255)}.${Math.floor(Math.random() * 255)}`,\r\n    });\r\n  }\r\n  return mockData.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)); // 按时间倒序\r\n};\r\n\r\n// --- 筛选与分页 ---\r\nconst filterForm = reactive({\r\n  operator: '',\r\n  module: '',\r\n  dateRange: [],\r\n});\r\n\r\nconst pagination = reactive({\r\n  currentPage: 1,\r\n  pageSize: 10,\r\n});\r\n\r\nconst totalLogs = computed(() => filteredLogsData.value.length);\r\n\r\n// 先过滤数据\r\nconst filteredLogsData = computed(() => {\r\n  return allLogs.value.filter(log => {\r\n    const operatorMatch = filterForm.operator ? log.operator.includes(filterForm.operator) : true;\r\n    const moduleMatch = filterForm.module ? log.module === filterForm.module : true;\r\n    const dateMatch = filterForm.dateRange && filterForm.dateRange.length === 2\r\n      ? (new Date(log.timestamp) >= new Date(filterForm.dateRange[0]) && new Date(log.timestamp) <= new Date(filterForm.dateRange[1]))\r\n      : true;\r\n    return operatorMatch && moduleMatch && dateMatch;\r\n  });\r\n});\r\n\r\n// 再对过滤后的数据进行分页\r\nconst filteredLogList = computed(() => {\r\n  const start = (pagination.currentPage - 1) * pagination.pageSize;\r\n  const end = start + pagination.pageSize;\r\n  return filteredLogsData.value.slice(start, end);\r\n});\r\n\r\n// --- 方法 ---\r\nconst formatModule = (moduleKey) => {\r\n    const modules = {\r\n      supplier: '供应商管理',\r\n      role: '角色管理',\r\n      order: '订单管理',\r\n      quote: '报价管理',\r\n      login: '登录/登出'\r\n    };\r\n    return modules[moduleKey] || moduleKey;\r\n};\r\n\r\nconst handleSearch = () => {\r\n  pagination.currentPage = 1; // 搜索时回到第一页\r\n  // 计算属性会自动更新列表\r\n};\r\n\r\nconst handleSizeChange = (newSize) => {\r\n  pagination.pageSize = newSize;\r\n  pagination.currentPage = 1; // 切换条数时回到第一页\r\n};\r\n\r\nconst handleCurrentChange = (newPage) => {\r\n  pagination.currentPage = newPage;\r\n};\r\n\r\n// --- 生命周期钩子 ---\r\nonMounted(() => {\r\n  allLogs.value = generateMockLogs(); // 页面加载时生成模拟数据\r\n});\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.log-list-container {\r\n  padding: 20px;\r\n}\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n.filter-form {\r\n  margin-bottom: 15px;\r\n}\r\n.el-table {\r\n  margin-top: 15px;\r\n}\r\n</style> ","import script from \"./LogList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./LogList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./LogList.vue?vue&type=style&index=0&id=b375c8d8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b375c8d8\"]])\n\nexport default __exports__"],"names":["allLogs","ref","generateMockLogs","count","modules","key","label","actions","operators","mockData","now","Date","i","timestamp","Math","floor","random","module","length","action","operator","push","id","toLocaleString","details","ipAddress","sort","a","b","filterForm","reactive","dateRange","pagination","currentPage","pageSize","totalLogs","computed","filteredLogsData","value","filter","log","operatorMatch","includes","moduleMatch","dateMatch","filteredLogList","start","end","slice","formatModule","moduleKey","supplier","role","order","quote","login","handleSearch","handleSizeChange","newSize","handleCurrentChange","newPage","onMounted","__exports__"],"sourceRoot":""}