{"version":3,"file":"js/56.d3c63632.js","mappings":"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","sources":["webpack://vue-logistics-system/./src/views/WorkOrder/AlertWorkOrderList.vue","webpack://vue-logistics-system/./src/views/WorkOrder/AlertWorkOrderList.vue?c824"],"sourcesContent":["<template>\r\n  <div class=\"work-order-list-container\">\r\n    <div class=\"page-header\">\r\n      <h2 class=\"page-title\">订单预警</h2>\r\n      <div class=\"page-actions\">\r\n        <el-button type=\"primary\" @click=\"createWorkOrder\">创建预警工单</el-button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 搜索和筛选区域 -->\r\n    <el-card shadow=\"never\" class=\"filter-card\">\r\n      <div class=\"search-bar\">\r\n        <el-input\r\n          v-model=\"searchQuery\"\r\n          placeholder=\"搜索预警工单 (工单号、主题、订单号...)\"\r\n          class=\"search-input\"\r\n          @keyup.enter=\"handleSearch\">\r\n          <template #append>\r\n            <el-button :icon=\"Search\" @click=\"handleSearch\"></el-button>\r\n          </template>\r\n        </el-input>\r\n      </div>\r\n\r\n      <div class=\"filter-section\">\r\n        <el-form :inline=\"true\" :model=\"filters\" size=\"small\">\r\n          <el-form-item label=\"状态\">\r\n            <el-select v-model=\"filters.status\" placeholder=\"按状态筛选\" clearable>\r\n              <el-option label=\"待处理\" value=\"pending\"></el-option>\r\n              <el-option label=\"处理中\" value=\"processing\"></el-option>\r\n              <el-option label=\"待确认\" value=\"pending_confirmation\"></el-option>\r\n              <el-option label=\"已解决\" value=\"resolved\"></el-option>\r\n              <el-option label=\"已关闭\" value=\"closed\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"预警类型\">\r\n            <el-select v-model=\"filters.alertType\" placeholder=\"按预警类型筛选\" clearable>\r\n              <el-option label=\"库存预警\" value=\"inventory\"></el-option>\r\n              <el-option label=\"时效预警\" value=\"delivery_time\"></el-option>\r\n              <el-option label=\"异常预警\" value=\"exception\"></el-option>\r\n              <el-option label=\"其他预警\" value=\"other\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"优先级\">\r\n            <el-select v-model=\"filters.priority\" placeholder=\"按优先级筛选\" clearable>\r\n              <el-option label=\"紧急\" value=\"urgent\"></el-option>\r\n              <el-option label=\"高\" value=\"high\"></el-option>\r\n              <el-option label=\"中\" value=\"medium\"></el-option>\r\n              <el-option label=\"低\" value=\"low\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"处理人\">\r\n            <el-select v-model=\"filters.assignee\" placeholder=\"按处理人筛选\" clearable filterable>\r\n              <el-option v-for=\"user in users\" :key=\"user.id\" :label=\"user.name\" :value=\"user.id\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"创建时间\">\r\n            <el-date-picker\r\n              v-model=\"filters.createdAtRange\"\r\n              type=\"daterange\"\r\n              start-placeholder=\"开始日期\"\r\n              end-placeholder=\"结束日期\"\r\n              range-separator=\"至\"\r\n              value-format=\"YYYY-MM-DD\">\r\n            </el-date-picker>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"handleSearch\">查询</el-button>\r\n            <el-button @click=\"resetFilters\">重置</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 视图选择选项卡 -->\r\n    <div class=\"view-management\">\r\n      <el-radio-group v-model=\"currentView\" size=\"small\" class=\"status-view-group\">\r\n        <el-radio-button value=\"all\">全部</el-radio-button>\r\n        <el-radio-button value=\"pending\">待处理</el-radio-button>\r\n        <el-radio-button value=\"processing\">处理中</el-radio-button>\r\n        <el-radio-button value=\"pending_confirmation\">待确认</el-radio-button>\r\n        <el-radio-button value=\"resolved\">已解决</el-radio-button>\r\n        <el-radio-button value=\"closed\">已关闭</el-radio-button>\r\n      </el-radio-group>\r\n      \r\n      <el-button type=\"text\" size=\"small\" @click=\"handleSaveView\">新增视图</el-button>\r\n      <el-button type=\"text\" size=\"small\" @click=\"showGroupModal\">高级分组</el-button>\r\n      <el-button type=\"text\" size=\"small\" @click=\"showSortModal\">高级排序</el-button>\r\n      <el-button type=\"text\" size=\"small\" @click=\"showFilterPanel\">筛选</el-button>\r\n      <el-button type=\"text\" size=\"small\" @click=\"showColumnSettings\">字段配置</el-button>\r\n    </div>\r\n\r\n    <!-- 工单列表 -->\r\n    <el-card shadow=\"never\" class=\"list-card\">\r\n      <div class=\"table-operations\" v-if=\"selectedRows.length > 0\">\r\n        <span class=\"selected-count\">已选择 {{ selectedRows.length }} 项</span>\r\n        <el-button size=\"small\" @click=\"batchProcess\">批量处理</el-button>\r\n        <el-button size=\"small\" @click=\"clearSelection\">清除选择</el-button>\r\n      </div>\r\n\r\n      <groupable-table\r\n        ref=\"mainTable\"\r\n        :data=\"workOrderList\"\r\n        row-key=\"id\"\r\n        :group-fields=\"groupField ? [groupField] : []\"\r\n        :show-selection=\"true\"\r\n        :show-group-column=\"!!groupField\"\r\n        :group-column-label=\"groupField ? getGroupColumnLabel(groupField) : '分组'\"\r\n        :default-expand-all=\"false\"\r\n        :show-pagination=\"true\"\r\n        :current-page=\"pagination.current\"\r\n        :page-size=\"pagination.pageSize\"\r\n        :page-sizes=\"[10, 20, 50, 100]\"\r\n        :total=\"pagination.total\"\r\n        v-loading=\"loading\"\r\n        @selection-change=\"handleSelectionChange\"\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        @cell-click=\"handleCellClick\"\r\n        @cell-dblclick=\"handleCellDbClick\"\r\n        style=\"width: 100%\"\r\n      >\r\n        <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n        <el-table-column label=\"工单号\" prop=\"id\" width=\"150\">\r\n          <template #default=\"scope\">\r\n            <el-link type=\"primary\" @click=\"viewWorkOrder(scope.row.id)\">{{ scope.row.id }}</el-link>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"主题\" prop=\"subject\" min-width=\"200\">\r\n          <template #default=\"scope\">\r\n            <div class=\"subject-cell\">\r\n              <span class=\"subject-text\">{{ scope.row.subject }}</span>\r\n              <el-tag v-if=\"scope.row.priority === 'urgent'\" type=\"danger\" size=\"small\" effect=\"dark\">紧急</el-tag>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"预警类型\" prop=\"alertType\" width=\"120\">\r\n          <template #default=\"scope\">\r\n            {{ getAlertTypeText(scope.row.alertType) }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"状态\" prop=\"status\" width=\"100\">\r\n          <template #default=\"scope\">\r\n            <el-tag :type=\"getStatusType(scope.row.status)\" size=\"small\">\r\n              {{ getStatusText(scope.row.status) }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"优先级\" prop=\"priority\" width=\"80\">\r\n          <template #default=\"scope\">\r\n            <el-tag :type=\"getPriorityType(scope.row.priority)\" size=\"small\">\r\n              {{ getPriorityText(scope.row.priority) }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"关联订单\" prop=\"orderNo\" width=\"150\">\r\n          <template #default=\"scope\">\r\n            <el-link v-if=\"scope.row.orderNo\" type=\"info\" @click=\"viewOrder(scope.row.orderNo)\">\r\n              {{ scope.row.orderNo }}\r\n            </el-link>\r\n            <span v-else>-</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"创建人\" prop=\"creator\" width=\"100\"></el-table-column>\r\n        <el-table-column label=\"当前处理人\" prop=\"assignee\" width=\"100\">\r\n          <template #default=\"scope\">\r\n            {{ scope.row.assignee || '未指派' }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"创建时间\" prop=\"createdAt\" width=\"180\">\r\n          <template #default=\"scope\">\r\n            {{ formatDateTime(scope.row.createdAt) }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"更新时间\" prop=\"updatedAt\" width=\"180\">\r\n          <template #default=\"scope\">\r\n            {{ formatDateTime(scope.row.updatedAt) }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"150\" fixed=\"right\">\r\n          <template #default=\"scope\">\r\n            <el-button link type=\"primary\" @click=\"viewWorkOrder(scope.row.id)\">查看</el-button>\r\n            <el-button link type=\"primary\" v-if=\"canProcess(scope.row)\" @click=\"processWorkOrder(scope.row)\">处理</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </groupable-table>\r\n    </el-card>\r\n\r\n    <!-- 筛选面板 -->\r\n    <filter-panel\r\n      v-model:visible=\"filterPanelVisible\"\r\n      :columns=\"tableColumns\"\r\n      :existing-filters=\"activeFilters\"\r\n      :existing-logic=\"filterLogic\"\r\n      @apply-filters=\"applyFilters\"\r\n      @cancel=\"cancelFilters\"\r\n    />\r\n\r\n    <!-- 保存视图对话框 -->\r\n    <el-dialog\r\n      title=\"保存视图\"\r\n      v-model=\"saveViewDialogVisible\"\r\n      width=\"500px\"\r\n    >\r\n      <el-form :model=\"viewForm\" label-width=\"100px\">\r\n        <el-form-item label=\"视图名称\" required>\r\n          <el-input v-model=\"viewForm.name\" placeholder=\"请输入视图名称\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"显示字段\">\r\n          <el-checkbox-group v-model=\"viewForm.columns\">\r\n            <el-checkbox \r\n              v-for=\"col in tableColumns\" \r\n              :key=\"col.prop\" \r\n              :label=\"col.prop\"\r\n            >\r\n              {{col.label}}\r\n            </el-checkbox>\r\n          </el-checkbox-group>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"saveViewDialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"saveView\">确定</el-button>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!-- 分组设置弹窗 -->\r\n    <el-dialog\r\n      title=\"分组设置\"\r\n      v-model=\"groupModalVisible\"\r\n      width=\"500px\"\r\n    >\r\n      <div class=\"group-settings\">\r\n        <div class=\"group-level\">\r\n          <span class=\"group-level-label\">一级分组：</span>\r\n          <el-select v-model=\"groupSettings.level1\" placeholder=\"选择字段\" style=\"width: 280px;\" clearable>\r\n            <el-option v-for=\"field in groupableFields\" :key=\"field.prop\" :label=\"field.label\" :value=\"field.prop\"></el-option>\r\n          </el-select>\r\n        </div>\r\n        <div class=\"group-level\">\r\n          <span class=\"group-level-label\">二级分组：</span>\r\n          <el-select v-model=\"groupSettings.level2\" placeholder=\"选择字段\" style=\"width: 280px;\" clearable>\r\n            <el-option v-for=\"field in groupableFields\" :key=\"field.prop\" :label=\"field.label\" :value=\"field.prop\"></el-option>\r\n          </el-select>\r\n        </div>\r\n        <div class=\"group-level\">\r\n          <span class=\"group-level-label\">三级分组：</span>\r\n          <el-select v-model=\"groupSettings.level3\" placeholder=\"选择字段\" style=\"width: 280px;\" clearable>\r\n            <el-option v-for=\"field in groupableFields\" :key=\"field.prop\" :label=\"field.label\" :value=\"field.prop\"></el-option>\r\n          </el-select>\r\n        </div>\r\n      </div>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"groupModalVisible = false\">取消</el-button>\r\n          <el-button type=\"danger\" @click=\"clearGroupSettings\">清除分组</el-button>\r\n          <el-button type=\"primary\" @click=\"applyGroupSettings\">应用</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!-- 排序设置弹窗 -->\r\n    <el-dialog\r\n      title=\"排序设置\"\r\n      v-model=\"sortModalVisible\"\r\n      width=\"500px\"\r\n    >\r\n      <div class=\"sort-settings\">\r\n        <div v-for=\"(sort, index) in sortSettings\" :key=\"index\" class=\"sort-item\">\r\n          <el-select v-model=\"sort.field\" placeholder=\"选择字段\" style=\"width: 200px;\" clearable>\r\n            <el-option \r\n              v-for=\"field in sortableFields\" \r\n              :key=\"field.prop\" \r\n              :label=\"field.label\" \r\n              :value=\"field.prop\"\r\n            ></el-option>\r\n          </el-select>\r\n          <el-select v-model=\"sort.direction\" placeholder=\"排序方向\" style=\"width: 120px;\">\r\n            <el-option label=\"升序\" value=\"asc\"></el-option>\r\n            <el-option label=\"降序\" value=\"desc\"></el-option>\r\n          </el-select>\r\n          <el-button \r\n            type=\"danger\" \r\n            size=\"small\"\r\n            @click=\"removeSortField(index)\"\r\n          >删除</el-button>\r\n        </div>\r\n        <div class=\"sort-actions\">\r\n          <el-button type=\"primary\" plain @click=\"addSortField\">添加排序字段</el-button>\r\n        </div>\r\n      </div>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"sortModalVisible = false\">取消</el-button>\r\n          <el-button type=\"danger\" @click=\"clearSortSettings\">清除排序</el-button>\r\n          <el-button type=\"primary\" @click=\"applySortSettings\">应用</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!-- 字段配置对话框 -->\r\n    <el-dialog\r\n      title=\"字段配置\"\r\n      v-model=\"columnSettingsVisible\"\r\n      width=\"600px\"\r\n    >\r\n      <div class=\"column-settings\">\r\n        <div class=\"column-settings-header\">\r\n          <el-checkbox\r\n            v-model=\"allColumnsSelected\"\r\n            @change=\"handleSelectAllColumns\"\r\n          >全选</el-checkbox>\r\n          <el-button type=\"primary\" size=\"small\" @click=\"resetColumnSettings\">重置</el-button>\r\n        </div>\r\n        <div class=\"column-list\">\r\n          <draggable\r\n            v-model=\"columnSettingsList\"\r\n            item-key=\"prop\"\r\n            handle=\".drag-handle\"\r\n            @end=\"handleDragEnd\"\r\n          >\r\n            <template #item=\"{ element }\">\r\n              <div class=\"column-item\">\r\n                <el-icon class=\"drag-handle\"><d-arrow-left /></el-icon>\r\n                <el-checkbox v-model=\"element.visible\">{{ element.label }}</el-checkbox>\r\n              </div>\r\n            </template>\r\n          </draggable>\r\n        </div>\r\n      </div>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"columnSettingsVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"applyColumnSettings\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { Search } from '@element-plus/icons-vue';\r\nimport { ElMessage, ElMessageBox } from 'element-plus';\r\nimport FilterPanel from '@/components/logistics/FilterPanel.vue';\r\nimport GroupableTable from '@/components/logistics/GroupableTable.vue';\r\nimport { DArrowLeft } from '@element-plus/icons-vue';\r\nimport draggable from 'vuedraggable';\r\n\r\n// 路由相关\r\nconst router = useRouter();\r\n\r\n// 视图管理相关\r\nconst currentView = ref('all');\r\n// TODO: 后续实现自定义视图功能\r\n// const customViews = ref([]);\r\nconst saveViewDialogVisible = ref(false);\r\n// TODO: 后续实现视图重命名功能\r\n// const renameViewDialogVisible = ref(false);\r\n// TODO: 后续实现右键菜单功能\r\n// const contextMenuVisible = ref(false);\r\n// const contextMenuX = ref(0);\r\n// const contextMenuY = ref(0);\r\nconst viewForm = ref({\r\n  name: '',\r\n  columns: []\r\n});\r\n\r\n// 筛选相关\r\nconst filterPanelVisible = ref(false);\r\nconst activeFilters = ref([]);\r\nconst filterLogic = ref('and');\r\n\r\n// 分组相关\r\nconst groupModalVisible = ref(false);\r\nconst groupSettings = ref({\r\n  level1: '',\r\n  level2: '',\r\n  level3: ''\r\n});\r\nconst groupField = ref('');\r\n\r\n// 排序相关\r\nconst sortModalVisible = ref(false);\r\nconst sortSettings = ref([\r\n  { field: '', direction: 'asc' }\r\n]);\r\n\r\n// 字段配置相关\r\nconst columnSettingsVisible = ref(false);\r\nconst columnSettingsList = ref([]);\r\nconst allColumnsSelected = ref(true);\r\n\r\n// 获取用户\r\nconst users = ref([\r\n  { id: 1, name: '张三' },\r\n  { id: 2, name: '李四' },\r\n  { id: 3, name: '客服团队' },\r\n  { id: 4, name: '仓库管理员'}\r\n]);\r\n\r\n// 列表加载状态\r\nconst loading = ref(false);\r\n\r\n// 搜索和筛选\r\nconst searchQuery = ref('');\r\nconst filters = reactive({\r\n  status: '',\r\n  type: 'warning', // 固定为预警工单类型\r\n  alertType: '', // 新增预警类型筛选\r\n  priority: '',\r\n  assignee: null,\r\n  createdAtRange: [],\r\n});\r\n\r\n// 列表数据 (预警工单示例)\r\nconst workOrderList = ref([\r\n  {\r\n    id: 'WO202307250001',\r\n    subject: '库存不足预警',\r\n    type: 'warning',\r\n    alertType: 'inventory',\r\n    status: 'pending',\r\n    priority: 'urgent',\r\n    orderNo: 'ORD202307250001',\r\n    creator: '系统',\r\n    assignee: '仓库管理员',\r\n    createdAt: new Date(Date.now() - 1 * 60 * 60 * 1000),\r\n    updatedAt: new Date(Date.now() - 1 * 60 * 60 * 1000),\r\n  },\r\n  {\r\n    id: 'WO202307250002',\r\n    subject: '配送超时预警',\r\n    type: 'warning',\r\n    alertType: 'delivery_time',\r\n    status: 'processing',\r\n    priority: 'high',\r\n    orderNo: 'ORD202307250002',\r\n    creator: '系统',\r\n    assignee: '物流团队',\r\n    createdAt: new Date(Date.now() - 2 * 60 * 60 * 1000),\r\n    updatedAt: new Date(Date.now() - 1 * 60 * 60 * 1000),\r\n  },\r\n]);\r\n\r\n// 分页\r\nconst pagination = reactive({\r\n  current: 1,\r\n  pageSize: 10,\r\n  total: 0,\r\n});\r\n\r\n// 表格选择\r\nconst selectedRows = ref([]);\r\n\r\n// 表格列配置\r\nconst tableColumns = ref([\r\n  { prop: 'id', label: '工单号', width: 150, visible: true },\r\n  { prop: 'subject', label: '主题', minWidth: 200, visible: true },\r\n  { prop: 'alertType', label: '预警类型', width: 120, visible: true },\r\n  { prop: 'status', label: '状态', width: 100, visible: true },\r\n  { prop: 'priority', label: '优先级', width: 80, visible: true },\r\n  { prop: 'orderNo', label: '关联订单', width: 150, visible: true },\r\n  { prop: 'creator', label: '创建人', width: 100, visible: true },\r\n  { prop: 'assignee', label: '当前处理人', width: 100, visible: true },\r\n  { prop: 'createdAt', label: '创建时间', width: 180, visible: true },\r\n  { prop: 'updatedAt', label: '更新时间', width: 180, visible: true }\r\n]);\r\n\r\n// 可分组字段\r\nconst groupableFields = ref([\r\n  { prop: 'status', label: '状态' },\r\n  { prop: 'alertType', label: '预警类型' },\r\n  { prop: 'priority', label: '优先级' },\r\n  { prop: 'creator', label: '创建人' },\r\n  { prop: 'assignee', label: '处理人' }\r\n]);\r\n\r\n// 可排序字段\r\nconst sortableFields = ref([\r\n  { prop: 'createdAt', label: '创建时间' },\r\n  { prop: 'updatedAt', label: '更新时间' },\r\n  { prop: 'priority', label: '优先级' },\r\n  { prop: 'status', label: '状态' }\r\n]);\r\n\r\n// 获取分组列标签\r\nconst getGroupColumnLabel = (field) => {\r\n  const fieldConfig = groupableFields.value.find(f => f.prop === field);\r\n  return fieldConfig ? fieldConfig.label : field;\r\n};\r\n\r\n// --- 辅助函数 ---\r\nconst formatDateTime = (date) => {\r\n  if (!date) return '-';\r\n  const d = new Date(date);\r\n  return `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')} ${String(d.getHours()).padStart(2, '0')}:${String(d.getMinutes()).padStart(2, '0')}`;\r\n};\r\n\r\nconst getStatusText = (status) => {\r\n  const statusMap = {\r\n    'pending': '待处理',\r\n    'processing': '处理中',\r\n    'pending_confirmation': '待确认',\r\n    'resolved': '已解决',\r\n    'closed': '已关闭'\r\n  };\r\n  return statusMap[status] || status;\r\n};\r\n\r\nconst getStatusType = (status) => {\r\n  const typeMap = {\r\n    'pending': 'warning',\r\n    'processing': 'primary',\r\n    'pending_confirmation': 'info',\r\n    'resolved': 'success',\r\n    'closed': 'info'\r\n  };\r\n  return typeMap[status] || 'info';\r\n};\r\n\r\nconst getAlertTypeText = (alertType) => {\r\n  const typeMap = {\r\n    'inventory': '库存预警',\r\n    'delivery_time': '时效预警',\r\n    'exception': '异常预警',\r\n    'other': '其他预警'\r\n  };\r\n  return typeMap[alertType] || alertType;\r\n};\r\n\r\nconst getPriorityText = (priority) => {\r\n  const priorityMap = {\r\n    'urgent': '紧急',\r\n    'high': '高',\r\n    'medium': '中',\r\n    'low': '低'\r\n  };\r\n  return priorityMap[priority] || priority;\r\n};\r\n\r\nconst getPriorityType = (priority) => {\r\n  const typeMap = {\r\n    'urgent': 'danger',\r\n    'high': 'warning',\r\n    'medium': 'info',\r\n    'low': 'success'\r\n  };\r\n  return typeMap[priority] || 'info';\r\n};\r\n\r\n// 判断是否可处理\r\nconst canProcess = (workOrder) => {\r\n  return ['pending', 'processing'].includes(workOrder.status);\r\n};\r\n\r\n// --- 事件处理函数 ---\r\nconst handleSearch = () => {\r\n  pagination.current = 1;\r\n  fetchWorkOrders();\r\n};\r\n\r\nconst resetFilters = () => {\r\n  filters.status = '';\r\n  filters.alertType = '';\r\n  filters.priority = '';\r\n  filters.assignee = null;\r\n  filters.createdAtRange = [];\r\n  searchQuery.value = '';\r\n  handleSearch();\r\n};\r\n\r\nconst handleSelectionChange = (selection) => {\r\n  selectedRows.value = selection;\r\n};\r\n\r\nconst clearSelection = () => {\r\n  selectedRows.value = [];\r\n};\r\n\r\nconst handleSizeChange = (size) => {\r\n  pagination.pageSize = size;\r\n  fetchWorkOrders();\r\n};\r\n\r\nconst handleCurrentChange = (page) => {\r\n  pagination.current = page;\r\n  fetchWorkOrders();\r\n};\r\n\r\n// --- 操作函数 ---\r\nconst createWorkOrder = () => {\r\n  router.push({ path: '/work-order/create', query: { defaultType: 'warning' } });\r\n};\r\n\r\nconst viewWorkOrder = (id) => {\r\n  router.push(`/work-order/detail/${id}`);\r\n};\r\n\r\nconst viewOrder = (orderNo) => {\r\n  router.push(`/order/detail/${orderNo}`);\r\n};\r\n\r\nconst processWorkOrder = (workOrder) => {\r\n  ElMessageBox.confirm(`确认开始处理预警工单 \"${workOrder.subject}\"?`, '操作确认', {\r\n    confirmButtonText: '确认',\r\n    cancelButtonText: '取消',\r\n    type: 'info'\r\n  }).then(() => {\r\n    const index = workOrderList.value.findIndex(item => item.id === workOrder.id);\r\n    if (index !== -1) {\r\n      workOrderList.value[index].status = 'processing';\r\n      workOrderList.value[index].updatedAt = new Date();\r\n    }\r\n    ElMessage.success('工单状态已更新为：处理中');\r\n    router.push(`/work-order/detail/${workOrder.id}`);\r\n  }).catch(() => {});\r\n};\r\n\r\nconst batchProcess = () => {\r\n  if (selectedRows.value.length === 0) {\r\n    ElMessage.warning('请先选择工单');\r\n    return;\r\n  }\r\n\r\n  const canProcessIds = selectedRows.value\r\n    .filter(row => canProcess(row))\r\n    .map(row => row.id);\r\n\r\n  if (canProcessIds.length === 0) {\r\n    ElMessage.warning('所选工单中没有可处理的工单');\r\n    return;\r\n  }\r\n\r\n  ElMessageBox.confirm(`确认批量处理 ${canProcessIds.length} 个工单?`, '操作确认', {\r\n    confirmButtonText: '确认',\r\n    cancelButtonText: '取消',\r\n    type: 'info'\r\n  }).then(() => {\r\n    canProcessIds.forEach(id => {\r\n      const index = workOrderList.value.findIndex(item => item.id === id);\r\n      if (index !== -1) {\r\n        workOrderList.value[index].status = 'processing';\r\n        workOrderList.value[index].updatedAt = new Date();\r\n      }\r\n    });\r\n    ElMessage.success(`已开始处理 ${canProcessIds.length} 个工单`);\r\n    clearSelection();\r\n    fetchWorkOrders();\r\n  }).catch(() => {});\r\n};\r\n\r\n// 获取工单列表数据\r\nconst fetchWorkOrders = async () => {\r\n  loading.value = true;\r\n  try {\r\n    const params = {\r\n      page: pagination.current,\r\n      pageSize: pagination.pageSize,\r\n      search: searchQuery.value,\r\n      type: filters.type,\r\n      alertType: filters.alertType,\r\n      status: filters.status,\r\n      priority: filters.priority,\r\n      assigneeId: filters.assignee,\r\n      createdAtStart: filters.createdAtRange ? filters.createdAtRange[0] : null,\r\n      createdAtEnd: filters.createdAtRange ? filters.createdAtRange[1] : null,\r\n    };\r\n    console.log(\"Fetching Alert Work Orders with params:\", params);\r\n    \r\n    // 模拟API请求延迟和过滤\r\n    setTimeout(() => {\r\n      let filteredData = [...workOrderList.value];\r\n      \r\n      if (params.search) {\r\n        const lowerSearch = params.search.toLowerCase();\r\n        filteredData = filteredData.filter(wo => \r\n          wo.id.toLowerCase().includes(lowerSearch) || \r\n          wo.subject.toLowerCase().includes(lowerSearch) ||\r\n          (wo.orderNo && wo.orderNo.toLowerCase().includes(lowerSearch))\r\n        );\r\n      }\r\n      if (params.status) {\r\n        filteredData = filteredData.filter(wo => wo.status === params.status);\r\n      }\r\n      if (params.alertType) {\r\n        filteredData = filteredData.filter(wo => wo.alertType === params.alertType);\r\n      }\r\n      if (params.priority) {\r\n        filteredData = filteredData.filter(wo => wo.priority === params.priority);\r\n      }\r\n      if (params.assigneeId) {\r\n        const assigneeName = users.value.find(u => u.id === params.assigneeId)?.name;\r\n        if(assigneeName) {\r\n          filteredData = filteredData.filter(wo => wo.assignee === assigneeName);\r\n        }\r\n      }\r\n\r\n      const start = (params.page - 1) * params.pageSize;\r\n      const end = start + params.pageSize;\r\n      const paginatedData = filteredData.slice(start, end);\r\n\r\n      workOrderList.value = paginatedData;\r\n      pagination.total = filteredData.length;\r\n      loading.value = false;\r\n    }, 500);\r\n  } catch (error) {\r\n    console.error('Failed to fetch alert work orders:', error);\r\n    ElMessage.error('获取预警工单列表失败');\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\n// 在组件挂载时获取工单列表\r\nonMounted(() => {\r\n  fetchWorkOrders();\r\n});\r\n\r\n// 事件处理函数\r\nconst handleCellClick = (row, column) => {\r\n  // 处理单元格点击事件\r\n  console.log('Cell clicked:', row, column);\r\n};\r\n\r\nconst handleCellDbClick = (row, column) => {\r\n  // 处理单元格双击事件\r\n  console.log('Cell double clicked:', row, column);\r\n};\r\n\r\nconst handleSaveView = () => {\r\n  saveViewDialogVisible.value = true;\r\n};\r\n\r\nconst showGroupModal = () => {\r\n  groupModalVisible.value = true;\r\n};\r\n\r\nconst showSortModal = () => {\r\n  sortModalVisible.value = true;\r\n};\r\n\r\nconst showFilterPanel = () => {\r\n  filterPanelVisible.value = true;\r\n};\r\n\r\nconst showColumnSettings = () => {\r\n  columnSettingsVisible.value = true;\r\n  columnSettingsList.value = [...tableColumns.value];\r\n};\r\n\r\nconst handleSelectAllColumns = (val) => {\r\n  columnSettingsList.value.forEach(col => col.visible = val);\r\n};\r\n\r\nconst resetColumnSettings = () => {\r\n  columnSettingsList.value = tableColumns.value.map(col => ({\r\n    ...col,\r\n    visible: true\r\n  }));\r\n  allColumnsSelected.value = true;\r\n};\r\n\r\nconst handleDragEnd = () => {\r\n  // 处理拖拽结束事件\r\n  console.log('Drag ended, new order:', columnSettingsList.value);\r\n};\r\n\r\nconst applyColumnSettings = () => {\r\n  tableColumns.value = [...columnSettingsList.value];\r\n  columnSettingsVisible.value = false;\r\n};\r\n\r\nconst saveView = () => {\r\n  if (!viewForm.value.name) {\r\n    ElMessage.warning('请输入视图名称');\r\n    return;\r\n  }\r\n  // TODO: 实现保存视图的逻辑\r\n  console.log('Saving view:', viewForm.value);\r\n  saveViewDialogVisible.value = false;\r\n};\r\n\r\nconst clearGroupSettings = () => {\r\n  groupSettings.value = {\r\n    level1: '',\r\n    level2: '',\r\n    level3: ''\r\n  };\r\n  groupField.value = '';\r\n};\r\n\r\nconst applyGroupSettings = () => {\r\n  // 应用第一个非空的分组设置\r\n  groupField.value = groupSettings.value.level1 || groupSettings.value.level2 || groupSettings.value.level3;\r\n  groupModalVisible.value = false;\r\n};\r\n\r\nconst addSortField = () => {\r\n  sortSettings.value.push({ field: '', direction: 'asc' });\r\n};\r\n\r\nconst removeSortField = (index) => {\r\n  sortSettings.value.splice(index, 1);\r\n};\r\n\r\nconst clearSortSettings = () => {\r\n  sortSettings.value = [{ field: '', direction: 'asc' }];\r\n};\r\n\r\nconst applySortSettings = () => {\r\n  // TODO: 实现排序逻辑\r\n  console.log('Applying sort settings:', sortSettings.value);\r\n  sortModalVisible.value = false;\r\n};\r\n\r\nconst applyFilters = (filters, logic) => {\r\n  activeFilters.value = filters;\r\n  filterLogic.value = logic;\r\n  filterPanelVisible.value = false;\r\n  fetchWorkOrders();\r\n};\r\n\r\nconst cancelFilters = () => {\r\n  filterPanelVisible.value = false;\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.work-order-list-container {\r\n  padding: 20px;\r\n}\r\n\r\n.page-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.page-title {\r\n  margin: 0;\r\n  font-size: 24px;\r\n  color: #303133;\r\n}\r\n\r\n.filter-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.search-bar {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.search-input {\r\n  width: 400px;\r\n}\r\n\r\n.filter-section {\r\n  margin-top: 20px;\r\n}\r\n\r\n.view-management {\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.status-view-group {\r\n  margin-right: 20px;\r\n}\r\n\r\n.list-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.table-operations {\r\n  margin-bottom: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.selected-count {\r\n  color: #606266;\r\n  margin-right: 10px;\r\n}\r\n\r\n.subject-cell {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.context-menu {\r\n  position: fixed;\r\n  background: white;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,.1);\r\n  z-index: 3000;\r\n}\r\n\r\n.context-menu-item {\r\n  padding: 8px 16px;\r\n  cursor: pointer;\r\n}\r\n\r\n.context-menu-item:hover {\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.group-settings {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n}\r\n\r\n.group-level {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.group-level-label {\r\n  width: 100px;\r\n  color: #606266;\r\n}\r\n\r\n.sort-settings {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n}\r\n\r\n.sort-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.sort-actions {\r\n  margin-top: 10px;\r\n}\r\n\r\n.column-settings {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n}\r\n\r\n.column-settings-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.column-list {\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.column-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  padding: 8px 0;\r\n}\r\n\r\n.drag-handle {\r\n  cursor: move;\r\n  color: #909399;\r\n}\r\n\r\n.dialog-footer {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n}\r\n</style>\r\n","import script from \"./AlertWorkOrderList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AlertWorkOrderList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AlertWorkOrderList.vue?vue&type=style&index=0&id=82336c08&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-82336c08\"]])\n\nexport default __exports__"],"names":["router","useRouter","currentView","ref","saveViewDialogVisible","viewForm","name","columns","filterPanelVisible","activeFilters","filterLogic","groupModalVisible","groupSettings","level1","level2","level3","groupField","sortModalVisible","sortSettings","field","direction","columnSettingsVisible","columnSettingsList","allColumnsSelected","users","id","loading","searchQuery","filters","reactive","status","type","alertType","priority","assignee","createdAtRange","workOrderList","subject","orderNo","creator","createdAt","Date","now","updatedAt","pagination","current","pageSize","total","selectedRows","tableColumns","prop","label","width","visible","minWidth","groupableFields","sortableFields","getGroupColumnLabel","fieldConfig","value","find","f","formatDateTime","date","d","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","getStatusText","statusMap","getStatusType","typeMap","getAlertTypeText","getPriorityText","priorityMap","getPriorityType","canProcess","workOrder","includes","handleSearch","fetchWorkOrders","resetFilters","handleSelectionChange","selection","clearSelection","handleSizeChange","size","handleCurrentChange","page","createWorkOrder","push","path","query","defaultType","viewWorkOrder","viewOrder","processWorkOrder","ElMessageBox","confirm","confirmButtonText","cancelButtonText","then","index","findIndex","item","ElMessage","success","catch","batchProcess","length","warning","canProcessIds","filter","row","map","forEach","async","params","search","assigneeId","createdAtStart","createdAtEnd","console","log","setTimeout","filteredData","lowerSearch","toLowerCase","wo","assigneeName","u","start","end","paginatedData","slice","error","onMounted","handleCellClick","column","handleCellDbClick","handleSaveView","showGroupModal","showSortModal","showFilterPanel","showColumnSettings","handleSelectAllColumns","val","col","resetColumnSettings","handleDragEnd","applyColumnSettings","saveView","clearGroupSettings","applyGroupSettings","addSortField","removeSortField","splice","clearSortSettings","applySortSettings","applyFilters","logic","cancelFilters","__exports__"],"sourceRoot":""}