{"version":3,"file":"js/9595.2e1e6067.js","mappings":"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","sources":["webpack://vue-logistics-system/./src/views/SMS/PhoneApp/OutboundConfirm.vue","webpack://vue-logistics-system/./src/views/SMS/PhoneApp/OutboundConfirm.vue?2fa2"],"sourcesContent":["<template>\r\n  <!-- 包裹层，用于居中显示手机模型 -->\r\n  <div class=\"outbound-view-wrapper\">\r\n    <div class=\"phone-mockup\">\r\n      <div class=\"phone-screen\">\r\n        <!-- 扫描页面 -->\r\n        <div v-if=\"!taskStarted\" class=\"scan-container\">\r\n          <el-page-header @back=\"goBack\" content=\"出库扫描\">\r\n          </el-page-header>\r\n          \r\n          <div class=\"scan-area\">\r\n            <div class=\"scan-icon\">\r\n              <el-icon><Aim /></el-icon>\r\n            </div>\r\n            <p class=\"scan-text\">请扫描出库单</p>\r\n            <div class=\"scan-input-area\">\r\n              <el-input \r\n                v-model=\"outboundCode\" \r\n                placeholder=\"请输入出库单号\"\r\n                clearable\r\n                @keyup.enter=\"handleScanOutbound\"\r\n              ></el-input>\r\n              <el-button type=\"primary\" @click=\"handleScanOutbound\">确认</el-button>\r\n            </div>\r\n            <div class=\"virtual-code-btn\">\r\n              <el-button type=\"success\" @click=\"generateVirtualCode\">生成虚拟号码</el-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 任务页面 -->\r\n        <div v-if=\"taskStarted && !outboundStarted\" class=\"outbound-container\">\r\n          <el-page-header @back=\"resetToScan\" content=\"出库任务\">\r\n          </el-page-header>\r\n\r\n          <div class=\"train-info\">\r\n            <h2>车次号: {{ trainNumber }}</h2>\r\n          </div>\r\n\r\n          <div class=\"confirm-button-container\">\r\n            <el-button type=\"primary\" @click=\"startOutbound\" style=\"width: 100%;\">确认出库开始</el-button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 出库详情页面 -->\r\n        <div v-if=\"outboundStarted\" class=\"outbound-confirm-container\">\r\n          <el-page-header @back=\"backToTask\" content=\"确认出库\">\r\n          </el-page-header>\r\n\r\n          <div class=\"train-info\">\r\n            <h2>车次号: {{ trainNumber }}</h2>\r\n          </div>\r\n\r\n          <!-- PC/卡板号维度的订单数据区域 -->\r\n          <div class=\"order-data-area\">\r\n            <p v-if=\"orderLoading\" class=\"loading\">加载订单中...</p>\r\n            <el-card \r\n              shadow=\"never\" \r\n              v-for=\"order in orderList\" \r\n              :key=\"order.palletCode\" \r\n              class=\"order-card\" \r\n              :class=\"{ 'outbound-completed': order.status === 'completed' }\"\r\n            >\r\n              <div class=\"order-details\">\r\n                <p><strong>卡板号:</strong> {{ order.palletCode }}</p>\r\n                <p><strong>PC号:</strong> {{ order.orderNumber }}</p>\r\n                <p><strong>原库位:</strong> {{ order.originalLocation }}</p>\r\n                <p><strong>状态:</strong> <span :class=\"`status-${order.status}`\">{{ getStatusText(order.status) }}</span></p>\r\n              </div>\r\n              <div class=\"scan-actions\" v-if=\"order.status === 'pending'\">\r\n                <el-button size=\"small\" type=\"primary\" @click=\"simulateScanPallet(order)\" plain>扫卡板</el-button>\r\n                <el-button size=\"small\" type=\"info\" @click=\"simulateScanLocation(order)\" :disabled=\"!order.palletScanned\" plain>扫库位</el-button>\r\n                <el-button size=\"small\" type=\"warning\" @click=\"simulateScanDock(order)\" :disabled=\"!order.palletScanned\" plain>扫Dock</el-button>\r\n              </div>\r\n              <div v-if=\"order.status === 'completed'\" class=\"completed-indicator\">\r\n                 <el-icon color=\"#67C23A\" size=\"18\"><SuccessFilled /></el-icon> 已出库\r\n              </div>\r\n            </el-card>\r\n            <p v-if=\"!orderList.length && !orderLoading\" class=\"no-data\">没有需要出库的订单</p>\r\n          </div>\r\n\r\n           <!-- 模拟扫描输入 Dialog -->\r\n          <el-dialog\r\n             v-model=\"showScanDialog\"\r\n             :title=\"`扫描${scanType === 'pallet' ? '卡板' : scanType === 'location' ? '库位' : 'Dock'}: ${scanInputLabel}`\"\r\n             width=\"90%\" \r\n             :append-to-body=\"true\"\r\n             :close-on-click-modal=\"false\"\r\n             @closed=\"clearScanDialog\" \r\n           >\r\n             <el-input\r\n               v-model=\"scannedCode\"\r\n               :placeholder=\"`请输入模拟 ${scanType === 'pallet' ? '卡板' : scanType === 'location' ? '库位' : 'Dock'} 码`\"\r\n               clearable\r\n               @keyup.enter=\"confirmScan\"\r\n               ref=\"scanInputRef\" \r\n             />\r\n             <template #footer>\r\n               <span class=\"dialog-footer\">\r\n                 <el-button @click=\"showScanDialog = false\">取消</el-button>\r\n                 <el-button type=\"primary\" @click=\"confirmScan\">确认</el-button>\r\n               </span>\r\n             </template>\r\n           </el-dialog>\r\n\r\n           <!-- 总体出库完成按钮 -->\r\n           <div class=\"footer-button-inside-phone\" v-if=\"outboundStarted\"> \r\n              <el-button type=\"success\" @click=\"completeOutbound\" style=\"width: 100%;\">出库完成</el-button>\r\n           </div>\r\n        </div>\r\n        \r\n        <!-- 拍照上传对话框 -->\r\n        <el-dialog\r\n          v-model=\"showPhotoDialog\"\r\n          title=\"上传凭证照片\"\r\n          width=\"90%\"\r\n          :append-to-body=\"true\"\r\n          :close-on-click-modal=\"false\"\r\n          :show-close=\"false\"\r\n        >\r\n          <div class=\"photo-upload-container\">\r\n            <div v-if=\"!photoList.length\" class=\"photo-placeholder\">\r\n              <el-icon><Picture /></el-icon>\r\n              <p>请上传凭证照片</p>\r\n            </div>\r\n            <div v-else class=\"photo-preview\">\r\n              <div \r\n                v-for=\"(photo, index) in photoList\" \r\n                :key=\"index\" \r\n                class=\"photo-item\"\r\n              >\r\n                <img :src=\"photo.url\" alt=\"凭证照片\" />\r\n                <div class=\"photo-delete\" @click=\"removePhoto(index)\">\r\n                  <el-icon><Delete /></el-icon>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"upload-actions\">\r\n              <el-upload\r\n                ref=\"uploadRef\"\r\n                :auto-upload=\"false\"\r\n                :show-file-list=\"false\"\r\n                :on-change=\"handlePhotoChange\"\r\n                :multiple=\"true\"\r\n                accept=\"image/*\"\r\n              >\r\n                <el-button type=\"primary\" plain>\r\n                  <el-icon><Upload /></el-icon>\r\n                  选择照片\r\n                </el-button>\r\n              </el-upload>\r\n              \r\n              <el-button type=\"success\" @click=\"takePhoto\" plain>\r\n                <el-icon><Camera /></el-icon>\r\n                拍照\r\n              </el-button>\r\n            </div>\r\n          </div>\r\n          \r\n          <template #footer>\r\n            <span class=\"dialog-footer\">\r\n              <el-button @click=\"cancelUpload\">取消</el-button>\r\n              <el-button type=\"primary\" @click=\"submitPhotos\" :disabled=\"!photoList.length\">提交</el-button>\r\n            </span>\r\n          </template>\r\n        </el-dialog>\r\n        \r\n        <!-- 拍照组件 -->\r\n        <el-dialog\r\n          v-model=\"showCameraDialog\"\r\n          title=\"拍摄凭证照片\"\r\n          width=\"90%\"\r\n          :append-to-body=\"true\"\r\n          :close-on-click-modal=\"false\"\r\n        >\r\n          <div class=\"camera-container\" v-if=\"hasCamera\">\r\n            <video ref=\"videoRef\" autoplay class=\"camera-video\"></video>\r\n            <div class=\"camera-actions\">\r\n              <el-button type=\"primary\" @click=\"capturePhoto\">拍照</el-button>\r\n              <el-button @click=\"showCameraDialog = false\">取消</el-button>\r\n            </div>\r\n          </div>\r\n          <div v-else class=\"camera-error\">\r\n            <el-icon><WarningFilled /></el-icon>\r\n            <p>无法访问摄像头，请检查权限或使用上传功能</p>\r\n          </div>\r\n        </el-dialog>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed, nextTick, onUnmounted } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { ElPageHeader, ElButton, ElCard, ElDialog, ElInput, ElIcon, ElMessage, ElUpload } from 'element-plus';\r\nimport { SuccessFilled, Aim, Picture, Upload, Camera, Delete, WarningFilled } from '@element-plus/icons-vue';\r\n\r\nconst router = useRouter();\r\n\r\n// 状态控制\r\nconst taskStarted = ref(false);\r\nconst outboundStarted = ref(false);\r\nconst orderLoading = ref(false);\r\n\r\n// 扫描页面数据\r\nconst outboundCode = ref('');\r\n\r\n// 任务页面数据\r\nconst trainNumber = ref('');\r\n\r\n// 订单列表\r\nconst orderList = reactive([]);\r\n\r\n// 扫描对话框\r\nconst showScanDialog = ref(false);\r\nconst scannedCode = ref('');\r\nconst scanType = ref(null);\r\nconst currentScanningOrder = ref(null);\r\nconst scanInputLabel = ref('');\r\nconst scanInputRef = ref(null);\r\n\r\n// 拍照上传相关\r\nconst showPhotoDialog = ref(false);\r\nconst showCameraDialog = ref(false);\r\nconst photoList = ref([]);\r\nconst hasCamera = ref(true);\r\nconst videoRef = ref(null);\r\nconst uploadRef = ref(null);\r\nlet mediaStream = null;\r\n\r\n// 随机生成虚拟号码\r\nconst generateVirtualCode = () => {\r\n  const randomNum = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r\n  const date = new Date();\r\n  const year = date.getFullYear().toString().slice(2);\r\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n  const day = date.getDate().toString().padStart(2, '0');\r\n  \r\n  outboundCode.value = `T${year}${month}${day}${randomNum}`;\r\n};\r\n\r\n// 处理扫描出库单\r\nconst handleScanOutbound = () => {\r\n  if (!outboundCode.value) {\r\n    ElMessage.warning('请输入出库单号');\r\n    return;\r\n  }\r\n  \r\n  // 模拟验证成功\r\n  ElMessage.success('出库单扫描成功');\r\n  taskStarted.value = true;\r\n  \r\n  // 设置车次号（从出库单号中提取）\r\n  trainNumber.value = outboundCode.value;\r\n};\r\n\r\n// 开始出库流程\r\nconst startOutbound = () => {\r\n  console.log(`开始为车次 ${trainNumber.value} 进行出库操作`);\r\n  outboundStarted.value = true;\r\n  orderList.length = 0;\r\n  fetchOrderData();\r\n};\r\n\r\n// 获取订单数据\r\nconst fetchOrderData = async () => {\r\n  orderLoading.value = true;\r\n  console.log('正在获取订单数据...');\r\n  try {\r\n    await new Promise(resolve => setTimeout(resolve, 500));\r\n\r\n    const mockData = [\r\n      { palletCode: 'PLT001', orderNumber: 'ORD1001', originalLocation: 'A1-01', status: 'completed' },\r\n      { palletCode: 'PLT002', orderNumber: 'ORD1002', originalLocation: 'A1-02', status: 'pending' },\r\n      { palletCode: 'PLT003', orderNumber: 'ORD1003', originalLocation: 'C3-10', status: 'pending' },\r\n      { palletCode: 'PLT004', orderNumber: 'ORD1004', originalLocation: 'C3-11', status: 'pending' },\r\n      { palletCode: 'PLT005', orderNumber: 'ORD1005', originalLocation: 'E5-20', status: 'pending' },\r\n    ];\r\n\r\n    const processedData = mockData.map(order => ({ \r\n      ...order, \r\n      palletScanned: false, \r\n      locationScanned: false,\r\n      dockScanned: false \r\n    }));\r\n    orderList.push(...processedData);\r\n  } catch (error) {\r\n    console.error('Failed to fetch order list:', error);\r\n    ElMessage.error('加载订单失败');\r\n  } finally {\r\n    orderLoading.value = false;\r\n  }\r\n};\r\n\r\n// 状态文本\r\nconst getStatusText = (status) => {\r\n  return status === 'pending' ? '待出库' : '已出库';\r\n};\r\n\r\n// 返回到扫描页面\r\nconst resetToScan = () => {\r\n  taskStarted.value = false;\r\n  outboundStarted.value = false;\r\n  outboundCode.value = '';\r\n};\r\n\r\n// 返回到任务页面\r\nconst backToTask = () => {\r\n  outboundStarted.value = false;\r\n};\r\n\r\n// 返回按钮\r\nconst goBack = () => {\r\n  router.back();\r\n};\r\n\r\n// 扫描对话框\r\nconst openScanDialog = () => {\r\n  showScanDialog.value = true;\r\n  nextTick(() => {\r\n    scanInputRef.value?.focus();\r\n  });\r\n}\r\n\r\n// 扫描卡板\r\nconst simulateScanPallet = (order) => {\r\n  scanType.value = 'pallet';\r\n  currentScanningOrder.value = order;\r\n  scanInputLabel.value = order.palletCode;\r\n  scannedCode.value = '';\r\n  openScanDialog();\r\n};\r\n\r\n// 扫描库位\r\nconst simulateScanLocation = (order) => {\r\n  if (!order.palletScanned) {\r\n    ElMessage.warning('请先扫描卡板');\r\n    return;\r\n  }\r\n  scanType.value = 'location';\r\n  currentScanningOrder.value = order;\r\n  scanInputLabel.value = order.originalLocation;\r\n  scannedCode.value = '';\r\n  openScanDialog();\r\n};\r\n\r\n// 扫描Dock\r\nconst simulateScanDock = (order) => {\r\n  if (!order.palletScanned) {\r\n    ElMessage.warning('请先扫描卡板');\r\n    return;\r\n  }\r\n  scanType.value = 'dock';\r\n  currentScanningOrder.value = order;\r\n  scanInputLabel.value = 'DOCK';\r\n  scannedCode.value = '';\r\n  openScanDialog();\r\n};\r\n\r\n// 确认扫描\r\nconst confirmScan = () => {\r\n  if (!currentScanningOrder.value || !scanType.value) return;\r\n\r\n  const order = currentScanningOrder.value;\r\n  const code = scannedCode.value.trim();\r\n\r\n  if (!code) {\r\n    ElMessage.warning('请输入扫描码');\r\n    return;\r\n  }\r\n\r\n  let success = false;\r\n  if (scanType.value === 'pallet') {\r\n    if (code === order.palletCode) {\r\n      order.palletScanned = true;\r\n      ElMessage.success('卡板扫描成功');\r\n      success = true;\r\n    } else {\r\n      ElMessage.error('卡板码不匹配');\r\n    }\r\n  } else if (scanType.value === 'location') {\r\n    if (code === order.originalLocation) {\r\n      order.locationScanned = true;\r\n      ElMessage.success('库位扫描成功');\r\n      success = true;\r\n    } else {\r\n      ElMessage.error('库位码不匹配');\r\n    }\r\n  } else if (scanType.value === 'dock') {\r\n    // 对于Dock扫描，简化验证，只要有输入就认为是正确的\r\n    if (code.toUpperCase().startsWith('DOCK')) {\r\n      order.dockScanned = true;\r\n      order.status = 'completed';\r\n      ElMessage.success('Dock扫描成功，出库完成');\r\n      success = true;\r\n    } else {\r\n      ElMessage.error('无效的Dock码，应以DOCK开头');\r\n    }\r\n  }\r\n\r\n  if (success) {\r\n    showScanDialog.value = false;\r\n  } else {\r\n    nextTick(() => {\r\n      scanInputRef.value?.select();\r\n    });\r\n  }\r\n};\r\n\r\n// 清除扫描对话框\r\nconst clearScanDialog = () => {\r\n  scannedCode.value = '';\r\n};\r\n\r\n// 计算是否所有订单都已出库\r\n// eslint-disable-next-line\r\nconst allCompleted = computed(() => {\r\n  if (orderList.length === 0) return false;\r\n  return orderList.every(order => order.status === 'completed');\r\n});\r\n\r\n// 完成出库\r\nconst completeOutbound = () => {\r\n  // 打开拍照上传对话框\r\n  showPhotoDialog.value = true;\r\n};\r\n\r\n// 处理照片选择\r\nconst handlePhotoChange = (file) => {\r\n  if (!file) return;\r\n  \r\n  // 检查文件类型\r\n  if (!file.raw.type.startsWith('image/')) {\r\n    ElMessage.error('请上传图片文件');\r\n    return;\r\n  }\r\n  \r\n  // 检查文件大小，限制为5MB\r\n  if (file.size / 1024 / 1024 > 5) {\r\n    ElMessage.error('图片大小不能超过5MB');\r\n    return;\r\n  }\r\n  \r\n  // 创建预览URL\r\n  const url = URL.createObjectURL(file.raw);\r\n  \r\n  // 添加到照片列表\r\n  photoList.value.push({\r\n    file: file.raw,\r\n    url\r\n  });\r\n};\r\n\r\n// 移除照片\r\nconst removePhoto = (index) => {\r\n  // 释放URL占用的资源\r\n  URL.revokeObjectURL(photoList.value[index].url);\r\n  // 从列表中移除\r\n  photoList.value.splice(index, 1);\r\n};\r\n\r\n// 拍照功能\r\nconst takePhoto = async () => {\r\n  showCameraDialog.value = true;\r\n  \r\n  // 延迟初始化摄像头，确保DOM已渲染\r\n  nextTick(() => {\r\n    initCamera();\r\n  });\r\n};\r\n\r\n// 初始化摄像头\r\nconst initCamera = async () => {\r\n  try {\r\n    mediaStream = await navigator.mediaDevices.getUserMedia({ \r\n      video: { facingMode: 'environment' }, // 优先使用后置摄像头\r\n      audio: false \r\n    });\r\n    \r\n    if (videoRef.value) {\r\n      videoRef.value.srcObject = mediaStream;\r\n      hasCamera.value = true;\r\n    }\r\n  } catch (error) {\r\n    console.error('无法访问摄像头:', error);\r\n    hasCamera.value = false;\r\n    ElMessage.error('无法访问摄像头，请检查浏览器权限设置');\r\n  }\r\n};\r\n\r\n// 捕获照片\r\nconst capturePhoto = () => {\r\n  if (!videoRef.value || !mediaStream) return;\r\n  \r\n  // 创建Canvas元素来捕获视频帧\r\n  const canvas = document.createElement('canvas');\r\n  const context = canvas.getContext('2d');\r\n  const video = videoRef.value;\r\n  \r\n  canvas.width = video.videoWidth;\r\n  canvas.height = video.videoHeight;\r\n  \r\n  // 在Canvas上绘制当前视频帧\r\n  context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n  \r\n  // 将Canvas转换为Blob\r\n  canvas.toBlob((blob) => {\r\n    // 创建预览URL\r\n    const url = URL.createObjectURL(blob);\r\n    \r\n    // 添加到照片列表\r\n    photoList.value.push({\r\n      file: new File([blob], `photo_${Date.now()}.jpg`, { type: 'image/jpeg' }),\r\n      url\r\n    });\r\n    \r\n    // 关闭摄像头对话框\r\n    closeCameraDialog();\r\n  }, 'image/jpeg', 0.95);\r\n};\r\n\r\n// 关闭摄像头对话框\r\nconst closeCameraDialog = () => {\r\n  showCameraDialog.value = false;\r\n  \r\n  // 停止所有视频轨道\r\n  if (mediaStream) {\r\n    mediaStream.getTracks().forEach(track => track.stop());\r\n    mediaStream = null;\r\n  }\r\n};\r\n\r\n// 提交照片\r\nconst submitPhotos = () => {\r\n  if (!photoList.value.length) {\r\n    ElMessage.warning('请至少上传一张凭证照片');\r\n    return;\r\n  }\r\n  \r\n  // 模拟上传\r\n  ElMessage.success({\r\n    message: `成功上传了 ${photoList.value.length} 张凭证照片`,\r\n    duration: 2000\r\n  });\r\n  \r\n  // 关闭对话框\r\n  setTimeout(() => {\r\n    // 清理资源\r\n    photoList.value.forEach(photo => {\r\n      URL.revokeObjectURL(photo.url);\r\n    });\r\n    photoList.value = [];\r\n    showPhotoDialog.value = false;\r\n    \r\n    // 显示完成消息\r\n    ElMessage.success({\r\n      message: `车次 ${trainNumber.value} 出库完成!`,\r\n      duration: 2000\r\n    });\r\n    \r\n    // 可以在这里添加跳转逻辑\r\n  }, 1000);\r\n};\r\n\r\n// 取消上传照片\r\nconst cancelUpload = () => {\r\n  // 清理资源\r\n  photoList.value.forEach(photo => {\r\n    URL.revokeObjectURL(photo.url);\r\n  });\r\n  photoList.value = [];\r\n  showPhotoDialog.value = false;\r\n};\r\n\r\n// 组件卸载时清理资源\r\nonUnmounted(() => {\r\n  // 关闭摄像头\r\n  if (mediaStream) {\r\n    mediaStream.getTracks().forEach(track => track.stop());\r\n  }\r\n  \r\n  // 释放所有照片URL\r\n  photoList.value.forEach(photo => {\r\n    URL.revokeObjectURL(photo.url);\r\n  });\r\n});\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n/* 外层包裹样式 */\r\n.outbound-view-wrapper {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background-color: #f0f2f5;\r\n  min-height: calc(100vh - 104px);\r\n}\r\n\r\n/* 手机外壳样式 */\r\n.phone-mockup {\r\n  width: 390px;\r\n  height: 844px;\r\n  border: 12px solid black;\r\n  border-radius: 50px;\r\n  background-color: #f9f9f9;\r\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\r\n  position: relative;\r\n  padding: 15px;\r\n  box-sizing: border-box;\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    width: 150px;\r\n    height: 25px;\r\n    background-color: black;\r\n    border-bottom-left-radius: 15px;\r\n    border-bottom-right-radius: 15px;\r\n    z-index: 2;\r\n  }\r\n}\r\n\r\n.phone-screen {\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n  border-radius: 38px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n/* 扫描页面样式 */\r\n.scan-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  border-radius: 38px;\r\n  overflow: hidden;\r\n}\r\n\r\n.scan-area {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-grow: 1;\r\n  padding: 20px;\r\n}\r\n\r\n.scan-icon {\r\n  font-size: 50px;\r\n  color: var(--el-color-primary);\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.scan-text {\r\n  font-size: 18px;\r\n  margin-bottom: 30px;\r\n  color: #606266;\r\n}\r\n\r\n.scan-input-area {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.virtual-code-btn {\r\n  margin-top: 20px;\r\n}\r\n\r\n/* 任务页面样式 */\r\n.outbound-container, .outbound-confirm-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  border-radius: 38px;\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n\r\n.el-page-header {\r\n  background-color: #fff;\r\n  padding: 10px 20px;\r\n  flex-shrink: 0;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.train-info {\r\n  background-color: #fff;\r\n  padding: 12px;\r\n  margin: 8px;\r\n  border-radius: 4px;\r\n  box-shadow: var(--el-box-shadow-light);\r\n  text-align: center;\r\n  flex-shrink: 0;\r\n\r\n  h2 {\r\n    margin: 0;\r\n    font-size: 16px;\r\n    color: #303133;\r\n  }\r\n}\r\n\r\n.confirm-button-container {\r\n  padding: 8px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.order-data-area {\r\n  flex-grow: 1;\r\n  overflow-y: auto;\r\n  padding: 8px 8px 60px 8px;\r\n}\r\n\r\n.loading, .no-data {\r\n  text-align: center;\r\n  color: #909399;\r\n  margin-top: 15px;\r\n  font-size: 13px;\r\n}\r\n\r\n.order-card {\r\n  margin-bottom: 8px;\r\n  position: relative;\r\n\r\n  &.outbound-completed {\r\n    background-color: #f0f9eb;\r\n    border-left: 4px solid var(--el-color-success);\r\n  }\r\n\r\n  :deep(.el-card__body) {\r\n    padding: 10px 12px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    gap: 8px;\r\n  }\r\n}\r\n\r\n.order-details {\r\n   flex-grow: 1;\r\n}\r\n\r\n.order-details p {\r\n  margin: 3px 0;\r\n  font-size: 13px;\r\n  color: #606266;\r\n  line-height: 1.4;\r\n\r\n  strong {\r\n    color: #303133;\r\n    min-width: 60px;\r\n    display: inline-block;\r\n  }\r\n\r\n  .status-pending {\r\n    color: var(--el-color-warning);\r\n    font-weight: bold;\r\n  }\r\n  .status-completed {\r\n    color: var(--el-color-success);\r\n    font-weight: bold;\r\n  }\r\n}\r\n\r\n.scan-actions {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 6px;\r\n  align-items: flex-end;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.completed-indicator {\r\n  display: flex;\r\n  align-items: center;\r\n  color: var(--el-color-success);\r\n  font-weight: bold;\r\n  gap: 4px;\r\n  flex-shrink: 0;\r\n  font-size: 13px;\r\n\r\n  .el-icon {\r\n    vertical-align: middle;\r\n    font-size: 16px;\r\n  }\r\n}\r\n\r\n/* 将 footer 按钮固定在手机屏幕内部的底部 */\r\n.footer-button-inside-phone {\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  padding: 8px;\r\n  background-color: #fff;\r\n  box-shadow: 0 -1px 4px rgba(0, 21, 41, 0.08);\r\n  z-index: 10; \r\n  border-bottom-left-radius: 38px;\r\n  border-bottom-right-radius: 38px;\r\n}\r\n\r\n// Dialog 样式\r\n:deep(.el-dialog__body) {\r\n    padding: 15px 20px;\r\n}\r\n\r\n:deep(.el-dialog__footer) {\r\n     padding: 10px 20px;\r\n     border-top: 1px solid var(--el-border-color-lighter);\r\n}\r\n\r\n/* 手机外壳的响应式样式 */\r\n@media (max-height: 900px) {\r\n  .phone-mockup {\r\n    transform: scale(0.9);\r\n  }\r\n}\r\n@media (max-width: 450px) {\r\n  .outbound-view-wrapper {\r\n      padding: 10px 0;\r\n  }\r\n   .phone-mockup {\r\n    width: 95%;\r\n    height: auto;\r\n    min-height: 600px;\r\n    max-height: 85vh;\r\n    padding: 10px;\r\n    border-width: 10px;\r\n    border-radius: 40px;\r\n     &::before {\r\n       width: 120px;\r\n       height: 20px;\r\n       border-bottom-left-radius: 12px;\r\n       border-bottom-right-radius: 12px;\r\n    }\r\n  }\r\n   .phone-screen {\r\n      border-radius: 30px;\r\n   }\r\n   .outbound-container, .outbound-confirm-container, .scan-container {\r\n       border-radius: 30px;\r\n   }\r\n    .footer-button-inside-phone {\r\n       border-bottom-left-radius: 30px;\r\n       border-bottom-right-radius: 30px;\r\n    }\r\n}\r\n\r\n/* 照片上传样式 */\r\n.photo-upload-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 15px;\r\n}\r\n\r\n.photo-placeholder {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 200px;\r\n  background-color: #f5f7fa;\r\n  border: 1px dashed #dcdfe6;\r\n  border-radius: 4px;\r\n  \r\n  .el-icon {\r\n    font-size: 48px;\r\n    color: #c0c4cc;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  p {\r\n    color: #909399;\r\n    font-size: 14px;\r\n  }\r\n}\r\n\r\n.photo-preview {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n  width: 100%;\r\n}\r\n\r\n.photo-item {\r\n  position: relative;\r\n  width: calc(50% - 5px);\r\n  padding-bottom: calc(50% - 5px);\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  \r\n  img {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n  \r\n  .photo-delete {\r\n    position: absolute;\r\n    top: 5px;\r\n    right: 5px;\r\n    width: 24px;\r\n    height: 24px;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    border-radius: 50%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    \r\n    .el-icon {\r\n      color: #fff;\r\n      font-size: 16px;\r\n    }\r\n  }\r\n}\r\n\r\n.upload-actions {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-top: 10px;\r\n}\r\n\r\n/* 摄像头样式 */\r\n.camera-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 15px;\r\n}\r\n\r\n.camera-video {\r\n  width: 100%;\r\n  max-height: 50vh;\r\n  background-color: #000;\r\n  border-radius: 4px;\r\n}\r\n\r\n.camera-actions {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 10px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.camera-error {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  \r\n  .el-icon {\r\n    font-size: 48px;\r\n    color: #f56c6c;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  p {\r\n    color: #606266;\r\n    text-align: center;\r\n  }\r\n}\r\n</style> ","import script from \"./OutboundConfirm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./OutboundConfirm.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./OutboundConfirm.vue?vue&type=style&index=0&id=35a4f602&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-35a4f602\"]])\n\nexport default __exports__"],"names":["router","useRouter","taskStarted","ref","outboundStarted","orderLoading","outboundCode","trainNumber","orderList","reactive","showScanDialog","scannedCode","scanType","currentScanningOrder","scanInputLabel","scanInputRef","showPhotoDialog","showCameraDialog","photoList","hasCamera","videoRef","uploadRef","mediaStream","generateVirtualCode","randomNum","Math","floor","random","toString","padStart","date","Date","year","getFullYear","slice","month","getMonth","day","getDate","value","handleScanOutbound","ElMessage","success","warning","startOutbound","console","log","length","fetchOrderData","async","Promise","resolve","setTimeout","mockData","palletCode","orderNumber","originalLocation","status","processedData","map","order","palletScanned","locationScanned","dockScanned","push","error","getStatusText","resetToScan","backToTask","goBack","back","openScanDialog","nextTick","focus","simulateScanPallet","simulateScanLocation","simulateScanDock","confirmScan","code","trim","toUpperCase","startsWith","select","clearScanDialog","completeOutbound","computed","every","handlePhotoChange","file","raw","type","size","url","URL","createObjectURL","removePhoto","index","revokeObjectURL","splice","takePhoto","initCamera","navigator","mediaDevices","getUserMedia","video","facingMode","audio","srcObject","capturePhoto","canvas","document","createElement","context","getContext","width","videoWidth","height","videoHeight","drawImage","toBlob","blob","File","now","closeCameraDialog","getTracks","forEach","track","stop","submitPhotos","message","duration","photo","cancelUpload","onUnmounted","__exports__"],"sourceRoot":""}