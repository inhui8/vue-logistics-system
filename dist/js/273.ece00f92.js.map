{"version":3,"file":"js/273.ece00f92.js","mappings":"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","sources":["webpack://vue-logistics-system/./src/views/Admin/QuoteManagement/FixedQuoteList.vue","webpack://vue-logistics-system/./src/views/Admin/QuoteManagement/FixedQuoteList.vue?ea94"],"sourcesContent":["<template>\n  <div class=\"fixed-quote-list-container\">\n    <el-card>\n      <template #header>\n        <div class=\"card-header\">\n          <span>固定报价列表 (待审核/已生效)</span>\n          <div class=\"header-actions\">\n            <!-- 视图管理 -->\n            <el-dropdown @command=\"handleViewCommand\">\n              <el-button type=\"primary\" plain>\n                视图管理\n                <el-icon class=\"el-icon--right\"><arrow-down /></el-icon>\n              </el-button>\n              <template #dropdown>\n                <el-dropdown-menu>\n                  <el-dropdown-item command=\"save\">保存当前视图</el-dropdown-item>\n                  <el-dropdown-item command=\"manage\">管理视图</el-dropdown-item>\n                </el-dropdown-menu>\n              </template>\n            </el-dropdown>\n            \n            <!-- 批量操作 -->\n            <el-dropdown @command=\"handleBatchCommand\" :disabled=\"!selectedRows.length\">\n              <el-button type=\"primary\" plain>\n                批量操作\n                <el-icon class=\"el-icon--right\"><arrow-down /></el-icon>\n              </el-button>\n              <template #dropdown>\n                <el-dropdown-menu>\n                  <el-dropdown-item command=\"export\">导出选中</el-dropdown-item>\n                  <el-dropdown-item command=\"approve\">批量通过</el-dropdown-item>\n                  <el-dropdown-item command=\"reject\">批量拒绝</el-dropdown-item>\n                </el-dropdown-menu>\n              </template>\n            </el-dropdown>\n          </div>\n        </div>\n      </template>\n\n      <!-- 视图选择器 -->\n      <div class=\"view-selector\">\n        <el-radio-group v-model=\"currentView\" @change=\"handleViewChange\">\n          <el-radio-button label=\"all\">全部</el-radio-button>\n          <el-radio-button label=\"pending\">待审核</el-radio-button>\n          <el-radio-button label=\"approved\">已通过</el-radio-button>\n          <el-radio-button label=\"rejected\">已拒绝</el-radio-button>\n          <el-radio-button label=\"active\">生效中</el-radio-button>\n          <el-radio-button label=\"expired\">已过期</el-radio-button>\n          <el-select v-model=\"selectedCustomView\" placeholder=\"自定义视图\" clearable>\n            <el-option\n              v-for=\"view in customViews\"\n              :key=\"view.id\"\n              :label=\"view.name\"\n              :value=\"view.id\"\n            />\n          </el-select>\n        </el-radio-group>\n      </div>\n\n      <!-- 筛选区域 -->\n      <el-form :inline=\"true\" :model=\"filterForm\" class=\"filter-form\">\n         <el-form-item label=\"供应商\">\n            <el-select v-model=\"filterForm.supplierId\" placeholder=\"选择供应商\" clearable filterable>\n               <el-option\n                 v-for=\"supplier in mockSuppliers\" \n                 :key=\"supplier.id\"\n                 :label=\"supplier.name\"\n                 :value=\"supplier.id\"\n               />\n            </el-select>\n         </el-form-item>\n        <el-form-item label=\"状态\">\n          <el-select v-model=\"filterForm.status\" placeholder=\"选择状态\" clearable>\n             <el-option\n                v-for=\"item in statusOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              />\n          </el-select>\n        </el-form-item>\n         <el-form-item label=\"服务描述\">\n           <el-input v-model=\"filterForm.serviceDescription\" placeholder=\"输入线路/服务关键字\" clearable />\n         </el-form-item>\n         <el-form-item label=\"有效期\">\n           <el-date-picker\n              v-model=\"filterForm.validityRange\"\n              type=\"daterange\"\n              range-separator=\"至\"\n              start-placeholder=\"生效开始\"\n              end-placeholder=\"生效结束\"\n              value-format=\"YYYY-MM-DD\"\n            />\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleSearch\">查询</el-button>\n          <el-button @click=\"showAdvancedFilter\">高级筛选</el-button>\n          <el-button @click=\"showGroupModal\">分组设置</el-button>\n          <el-button @click=\"showSortModal\">排序设置</el-button>\n          <el-button @click=\"showColumnSettings\">字段配置</el-button>\n        </el-form-item>\n      </el-form>\n\n      <!-- 高级筛选对话框 -->\n      <el-dialog v-model=\"advancedFilterVisible\" title=\"高级筛选\" width=\"800px\">\n        <div class=\"advanced-filter\">\n          <div class=\"filter-header\">\n            <el-radio-group v-model=\"filterLogic\">\n              <el-radio label=\"and\">且</el-radio>\n              <el-radio label=\"or\">或</el-radio>\n            </el-radio-group>\n            <el-button type=\"primary\" link @click=\"addFilter\">添加条件</el-button>\n          </div>\n          \n          <div class=\"filter-conditions\">\n            <div v-for=\"(filter, index) in activeFilters\" :key=\"index\" class=\"filter-item\">\n              <el-select v-model=\"filter.field\" placeholder=\"选择字段\" style=\"width: 150px\">\n                <el-option\n                  v-for=\"field in filterableFields\"\n                  :key=\"field.prop\"\n                  :label=\"field.label\"\n                  :value=\"field.prop\"\n                />\n              </el-select>\n              \n              <el-select v-model=\"filter.operator\" placeholder=\"选择操作符\" style=\"width: 120px\">\n                <el-option label=\"等于\" value=\"eq\" />\n                <el-option label=\"不等于\" value=\"ne\" />\n                <el-option label=\"包含\" value=\"contains\" />\n                <el-option label=\"不包含\" value=\"notContains\" />\n                <el-option label=\"大于\" value=\"gt\" />\n                <el-option label=\"小于\" value=\"lt\" />\n                <el-option label=\"大于等于\" value=\"ge\" />\n                <el-option label=\"小于等于\" value=\"le\" />\n                <el-option label=\"开始于\" value=\"startWith\" />\n                <el-option label=\"结束于\" value=\"endWith\" />\n              </el-select>\n              \n              <el-input v-model=\"filter.value\" placeholder=\"输入值\" style=\"width: 200px\" />\n              \n              <el-button type=\"danger\" link @click=\"removeFilter(index)\">删除</el-button>\n            </div>\n          </div>\n        </div>\n        <template #footer>\n          <span class=\"dialog-footer\">\n            <el-button @click=\"advancedFilterVisible = false\">取消</el-button>\n            <el-button type=\"primary\" @click=\"applyAdvancedFilter\">确定</el-button>\n          </span>\n        </template>\n      </el-dialog>\n\n      <!-- 分组设置对话框 -->\n      <el-dialog v-model=\"groupModalVisible\" title=\"分组设置\" width=\"600px\">\n        <div class=\"group-settings\">\n          <div class=\"group-levels\">\n            <div class=\"group-level\">\n              <span class=\"level-label\">一级分组：</span>\n              <el-select v-model=\"groupSettings.level1\" placeholder=\"选择分组字段\" clearable>\n                <el-option\n                  v-for=\"field in groupableFields\"\n                  :key=\"field.prop\"\n                  :label=\"field.label\"\n                  :value=\"field.prop\"\n                />\n              </el-select>\n            </div>\n            <div class=\"group-level\">\n              <span class=\"level-label\">二级分组：</span>\n              <el-select v-model=\"groupSettings.level2\" placeholder=\"选择分组字段\" clearable>\n                <el-option\n                  v-for=\"field in groupableFields\"\n                  :key=\"field.prop\"\n                  :label=\"field.label\"\n                  :value=\"field.prop\"\n                />\n              </el-select>\n            </div>\n            <div class=\"group-level\">\n              <span class=\"level-label\">三级分组：</span>\n              <el-select v-model=\"groupSettings.level3\" placeholder=\"选择分组字段\" clearable>\n                <el-option\n                  v-for=\"field in groupableFields\"\n                  :key=\"field.prop\"\n                  :label=\"field.label\"\n                  :value=\"field.prop\"\n                />\n              </el-select>\n            </div>\n          </div>\n        </div>\n        <template #footer>\n          <span class=\"dialog-footer\">\n            <el-button @click=\"clearGroupSettings\">清除分组</el-button>\n            <el-button type=\"primary\" @click=\"applyGroupSettings\">确定</el-button>\n          </span>\n        </template>\n      </el-dialog>\n\n      <!-- 排序设置对话框 -->\n      <el-dialog v-model=\"sortModalVisible\" title=\"排序设置\" width=\"600px\">\n        <div class=\"sort-settings\">\n          <div v-for=\"(sort, index) in sortSettings\" :key=\"index\" class=\"sort-item\">\n            <el-select v-model=\"sort.field\" placeholder=\"选择排序字段\" style=\"width: 200px\">\n              <el-option\n                v-for=\"field in sortableFields\"\n                :key=\"field.prop\"\n                :label=\"field.label\"\n                :value=\"field.prop\"\n              />\n            </el-select>\n            \n            <el-select v-model=\"sort.direction\" placeholder=\"排序方向\" style=\"width: 120px\">\n              <el-option label=\"升序\" value=\"asc\" />\n              <el-option label=\"降序\" value=\"desc\" />\n            </el-select>\n            \n            <el-button type=\"danger\" link @click=\"removeSortField(index)\">删除</el-button>\n          </div>\n          \n          <el-button type=\"primary\" link @click=\"addSortField\">添加排序</el-button>\n        </div>\n        <template #footer>\n          <span class=\"dialog-footer\">\n            <el-button @click=\"clearSortSettings\">清除排序</el-button>\n            <el-button type=\"primary\" @click=\"applySortSettings\">确定</el-button>\n          </span>\n        </template>\n      </el-dialog>\n\n      <!-- 字段配置对话框 -->\n      <el-dialog v-model=\"columnSettingsVisible\" title=\"字段配置\" width=\"800px\">\n        <div class=\"column-settings\">\n          <div class=\"settings-header\">\n            <el-checkbox v-model=\"allColumnsSelected\" @change=\"handleSelectAllColumns\">\n              全选/取消全选\n            </el-checkbox>\n            <el-button type=\"primary\" link @click=\"resetColumnSettings\">重置</el-button>\n          </div>\n          \n          <draggable\n            v-model=\"columnSettingsList\"\n            item-key=\"prop\"\n            handle=\".drag-handle\"\n            @end=\"handleDragEnd\"\n          >\n            <template #item=\"{ element }\">\n              <div class=\"column-item\">\n                <el-icon class=\"drag-handle\"><rank /></el-icon>\n                <el-checkbox v-model=\"element.visible\">\n                  {{ element.label }}\n                </el-checkbox>\n                <el-input-number\n                  v-if=\"element.visible\"\n                  v-model=\"element.width\"\n                  :min=\"80\"\n                  :max=\"500\"\n                  size=\"small\"\n                  style=\"width: 100px\"\n                  placeholder=\"宽度\"\n                />\n              </div>\n            </template>\n          </draggable>\n        </div>\n        <template #footer>\n          <span class=\"dialog-footer\">\n            <el-button @click=\"columnSettingsVisible = false\">取消</el-button>\n            <el-button type=\"primary\" @click=\"applyColumnSettings\">确定</el-button>\n          </span>\n        </template>\n      </el-dialog>\n\n      <!-- 报价列表 -->\n      <el-table \n        :data=\"filteredQuoteList\" \n        style=\"width: 100%\" \n        border\n        @selection-change=\"handleSelectionChange\"\n      >\n        <el-table-column type=\"selection\" width=\"55\" />\n        <el-table-column prop=\"supplierName\" label=\"供应商\" width=\"200\" show-overflow-tooltip />\n        <el-table-column prop=\"serviceDescription\" label=\"服务/线路描述\" minWidth=\"250\" show-overflow-tooltip/>\n        <el-table-column prop=\"quoteType\" label=\"报价类型\" width=\"100\">\n          <template #default=\"scope\">\n            <el-tag :type=\"scope.row.quoteType === 'FBA' ? 'success' : 'warning'\">\n              {{ scope.row.quoteType }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"serviceWarehouse\" label=\"服务仓库\" width=\"120\">\n          <template #default=\"scope\">\n            {{ scope.row.serviceWarehouse ? serviceWarehouseOptions.find(w => w.value === scope.row.serviceWarehouse).label : '-' }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"price\" label=\"报价 (USD)\" width=\"120\">\n           <template #default=\"scope\">\n             {{ scope.row.price ? scope.row.price.toFixed(2) : '-' }}\n           </template>\n        </el-table-column>\n         <el-table-column prop=\"validFrom\" label=\"生效开始日期\" width=\"130\" />\n         <el-table-column prop=\"validTo\" label=\"生效结束日期\" width=\"130\" />\n         <el-table-column prop=\"submittedAt\" label=\"提交时间\" width=\"160\" />\n         <el-table-column prop=\"status\" label=\"状态\" width=\"120\">\n            <template #default=\"scope\">\n               <el-tag :type=\"getStatusTagType(scope.row.status)\">\n                 {{ formatStatus(scope.row.status) }}\n               </el-tag>\n            </template>\n         </el-table-column>\n         <el-table-column label=\"审批进度\" width=\"150\">\n             <template #default=\"scope\">\n                <el-tooltip placement=\"top\">\n                   <template #content>\n                      <div v-if=\"scope.row.approvalHistory && scope.row.approvalHistory.length > 0\">\n                        <div v-for=\"(item, index) in scope.row.approvalHistory\" :key=\"index\">\n                            {{ item.timestamp }}: {{ item.approver }} {{ item.action }} {{ item.comment ? '- ' + item.comment : '' }}\n                        </div>\n                      </div>\n                      <div v-else>暂无审批记录</div>\n                   </template>\n                   <span>{{ getCurrentApprovalStep(scope.row.status) }}</span>\n                 </el-tooltip>\n             </template>\n         </el-table-column>\n        <el-table-column label=\"操作\" fixed=\"right\" width=\"220\">\n          <template #default=\"scope\">\n            <el-button text type=\"primary\" size=\"small\" @click=\"handleViewDetails(scope.row)\">详情</el-button>\n            <el-dropdown size=\"small\" @command=\"command => handleCommand(command, scope.row)\">\n              <el-button text type=\"primary\" size=\"small\">\n                更多<i class=\"el-icon-arrow-down el-icon--right\"></i>\n              </el-button>\n              <template #dropdown>\n                <el-dropdown-menu>\n             <!-- 根据状态显示不同审批按钮 -->\n             <template v-if=\"canApprove(scope.row, 'first_approve')\">\n                    <el-dropdown-item command=\"first_approve\" divided>初审通过</el-dropdown-item>\n                    <el-dropdown-item command=\"first_reject\">初审拒绝</el-dropdown-item>\n             </template>\n             <template v-else-if=\"canApprove(scope.row, 'final_approve')\">\n                    <el-dropdown-item command=\"final_approve\" divided>最终批准</el-dropdown-item>\n                    <el-dropdown-item command=\"final_reject\">最终拒绝</el-dropdown-item>\n             </template>\n                  <el-dropdown-item command=\"history\">查看历史</el-dropdown-item>\n                  <el-dropdown-item command=\"followUp\">跟进记录</el-dropdown-item>\n                  <el-dropdown-item command=\"memo\">备注</el-dropdown-item>\n                  <el-dropdown-item command=\"export\">导出</el-dropdown-item>\n                  <el-dropdown-item command=\"seeQuote\">查看报价</el-dropdown-item>\n                </el-dropdown-menu>\n              </template>\n            </el-dropdown>\n          </template>\n        </el-table-column>\n      </el-table>\n\n       <!-- 分页 -->\n      <el-pagination\n         style=\"margin-top: 20px; justify-content: flex-end;\"\n         background\n         layout=\"total, sizes, prev, pager, next, jumper\"\n         :total=\"totalQuotes\"\n         :page-sizes=\"[10, 20, 50, 100]\"\n         :page-size=\"pagination.pageSize\"\n         :current-page=\"pagination.currentPage\"\n         @size-change=\"handleSizeChange\"\n         @current-change=\"handleCurrentChange\"\n       />\n\n       <!-- 详情/审批意见弹窗 (复用或新建) -->\n       <el-dialog\n         v-model=\"detailDialogVisible\"\n         title=\"报价详情\"\n         width=\"80%\"\n         :close-on-click-modal=\"false\"\n       >\n         <div v-if=\"currentQuote\" class=\"quote-details\">\n           <el-descriptions :column=\"2\" border>\n             <el-descriptions-item label=\"供应商\">{{ currentQuote.supplierName }}</el-descriptions-item>\n             <el-descriptions-item label=\"服务描述\">{{ currentQuote.serviceDescription }}</el-descriptions-item>\n             <el-descriptions-item label=\"报价类型\">{{ currentQuote.quoteType }}</el-descriptions-item>\n             <el-descriptions-item label=\"服务仓库\">\n               {{ currentQuote.serviceWarehouse ? serviceWarehouseOptions.find(w => w.value === currentQuote.serviceWarehouse).label : '-' }}\n             </el-descriptions-item>\n             <el-descriptions-item label=\"价格\">{{ currentQuote.price }} USD</el-descriptions-item>\n             <el-descriptions-item label=\"有效期\">{{ currentQuote.validFrom }} 至 {{ currentQuote.validTo }}</el-descriptions-item>\n             <el-descriptions-item label=\"提交时间\">{{ currentQuote.submittedAt }}</el-descriptions-item>\n             <el-descriptions-item label=\"状态\" :span=\"2\">\n               <el-tag :type=\"getStatusType(currentQuote.status)\">\n                 {{ formatStatus(currentQuote.status) }}\n               </el-tag>\n             </el-descriptions-item>\n           </el-descriptions>\n\n           <!-- FBA报价的仓库信息 -->\n           <div v-if=\"currentQuote.quoteType === 'FBA' && currentQuote.warehouseQuotes\" class=\"warehouse-details\">\n             <h3>仓库报价详情</h3>\n             <el-table :data=\"currentQuote.warehouseQuotes\" border style=\"width: 100%\">\n               <el-table-column prop=\"warehouseCode\" label=\"仓库代码\" width=\"120\" />\n               <el-table-column prop=\"warehouseName\" label=\"仓库名称\" width=\"180\" />\n               <el-table-column prop=\"state\" label=\"州\" width=\"100\" />\n               <el-table-column prop=\"zipcode\" label=\"邮编\" width=\"100\" />\n               <el-table-column prop=\"address\" label=\"详细地址\" />\n               <el-table-column prop=\"price\" label=\"价格\" width=\"120\">\n                 <template #default=\"{ row }\">\n                   {{ row.price }} USD\n                 </template>\n               </el-table-column>\n             </el-table>\n             <div class=\"warehouse-summary\" style=\"margin-top: 15px; text-align: right;\">\n               <span>平均价格：{{ (currentQuote.warehouseQuotes.reduce((sum, wq) => sum + wq.price, 0) / currentQuote.warehouseQuotes.length).toFixed(2) }} USD</span>\n               <span style=\"margin-left: 20px;\">仓库数量：{{ currentQuote.warehouseQuotes.length }}</span>\n             </div>\n           </div>\n\n           <!-- 审批历史 -->\n           <div class=\"approval-history\" style=\"margin-top: 20px;\">\n             <h3>审批历史</h3>\n             <el-timeline>\n            <el-timeline-item \n                 v-for=\"(record, index) in currentQuote.approvalHistory\"\n              :key=\"index\"\n                 :timestamp=\"record.timestamp\"\n                 :type=\"record.approved ? 'success' : 'danger'\"\n               >\n                 <h4>{{ record.approver }} - {{ record.action }}</h4>\n                 <p>{{ record.approved ? '通过' : '拒绝' }}</p>\n                 <p v-if=\"record.comment\" style=\"color: #666;\">备注：{{ record.comment }}</p>\n             </el-timeline-item>\n          </el-timeline>\n           </div>\n         </div>\n         <template #footer>\n           <div class=\"dialog-footer\">\n             <el-button @click=\"detailDialogVisible = false\">关闭</el-button>\n           </div>\n         </template>\n       </el-dialog>\n\n       <!-- 保存视图对话框 -->\n       <el-dialog v-model=\"saveViewDialogVisible\" title=\"保存视图\" width=\"500px\">\n         <el-form :model=\"viewForm\" label-width=\"80px\">\n           <el-form-item label=\"视图名称\">\n             <el-input v-model=\"viewForm.name\" placeholder=\"请输入视图名称\" />\n                </el-form-item>\n         </el-form>\n         <template #footer>\n           <span class=\"dialog-footer\">\n             <el-button @click=\"saveViewDialogVisible = false\">取消</el-button>\n             <el-button type=\"primary\" @click=\"saveView\">确定</el-button>\n           </span>\n         </template>\n       </el-dialog>\n\n       <!-- 管理视图对话框 -->\n       <el-dialog v-model=\"viewOptionsDialogVisible\" title=\"管理视图\" width=\"600px\">\n         <div class=\"view-list\">\n           <el-table :data=\"customViews\" style=\"width: 100%\">\n             <el-table-column prop=\"name\" label=\"视图名称\" />\n             <el-table-column label=\"操作\" width=\"200\">\n               <template #default=\"scope\">\n                 <el-button text type=\"primary\" @click=\"handleViewOptions(scope.row, 'edit')\">编辑</el-button>\n                 <el-button text type=\"primary\" @click=\"handleViewOptions(scope.row, 'copy')\">复制</el-button>\n                 <el-button text type=\"danger\" @click=\"handleViewOptions(scope.row, 'delete')\">删除</el-button>\n               </template>\n             </el-table-column>\n           </el-table>\n         </div>\n         <template #footer>\n           <span class=\"dialog-footer\">\n             <el-button @click=\"viewOptionsDialogVisible = false\">关闭</el-button>\n           </span>\n         </template>\n       </el-dialog>\n\n       <!-- 跟进记录对话框 -->\n       <el-dialog v-model=\"followUpDialogVisible\" title=\"跟进记录\" width=\"800px\">\n         <div class=\"follow-up-container\">\n           <div class=\"follow-up-form\">\n             <el-form :model=\"followUpForm\" label-width=\"80px\">\n               <el-form-item label=\"跟进内容\">\n                 <el-input\n                   v-model=\"followUpForm.content\"\n                   type=\"textarea\"\n                   :rows=\"4\"\n                   placeholder=\"请输入跟进内容\"\n                 ></el-input>\n               </el-form-item>\n               <el-form-item label=\"跟进类型\">\n                 <el-select v-model=\"followUpForm.type\" placeholder=\"请选择跟进类型\" style=\"width: 100%\">\n                   <el-option label=\"常规跟进\" value=\"primary\"></el-option>\n                   <el-option label=\"重要跟进\" value=\"warning\"></el-option>\n                   <el-option label=\"紧急跟进\" value=\"danger\"></el-option>\n                 </el-select>\n                </el-form-item>\n             </el-form>\n             <div class=\"form-footer\">\n               <el-button type=\"primary\" @click=\"saveFollowUp\">添加跟进</el-button>\n             </div>\n         </div>\n\n           <div class=\"follow-up-history\">\n             <el-timeline>\n               <el-timeline-item\n                 v-for=\"(item, index) in followUpHistory\"\n                 :key=\"index\"\n                 :timestamp=\"item.timestamp\"\n                 :type=\"item.type\"\n               >\n                 {{ item.content }}\n               </el-timeline-item>\n             </el-timeline>\n           </div>\n         </div>\n       </el-dialog>\n\n       <!-- 备注对话框 -->\n       <el-dialog v-model=\"memoDialogVisible\" title=\"备注\" width=\"600px\">\n         <el-form :model=\"memoForm\" label-width=\"80px\">\n           <el-form-item label=\"备注内容\">\n             <el-input\n               v-model=\"memoForm.content\"\n               type=\"textarea\"\n               :rows=\"4\"\n               placeholder=\"请输入备注内容\"\n             ></el-input>\n           </el-form-item>\n         </el-form>\n         <template #footer>\n           <span class=\"dialog-footer\">\n             <el-button @click=\"memoDialogVisible = false\">取消</el-button>\n             <el-button type=\"primary\" @click=\"saveMemo\">确定</el-button>\n           </span>\n         </template>\n       </el-dialog>\n\n       <!-- 报价详情对话框 -->\n       <el-dialog v-model=\"quoteDetailsDialogVisible\" title=\"FBA报价详情\" width=\"90%\">\n         <div v-if=\"currentQuoteDetails\" class=\"quote-details\">\n           <el-descriptions :column=\"2\" border>\n             <el-descriptions-item label=\"供应商\">{{ currentQuoteDetails.supplierName }}</el-descriptions-item>\n             <el-descriptions-item label=\"报价类型\">{{ currentQuoteDetails.quoteType }}</el-descriptions-item>\n             <el-descriptions-item label=\"服务描述\">{{ currentQuoteDetails.serviceDescription }}</el-descriptions-item>\n             <el-descriptions-item label=\"服务仓库\">\n               {{ currentQuoteDetails.serviceWarehouse ? serviceWarehouseOptions.find(w => w.value === currentQuoteDetails.serviceWarehouse).label : '-' }}\n             </el-descriptions-item>\n             <el-descriptions-item label=\"生效日期\">{{ currentQuoteDetails.validFrom }} 至 {{ currentQuoteDetails.validTo }}</el-descriptions-item>\n           </el-descriptions>\n\n           <div class=\"warehouse-quotes-table\">\n             <h3>仓库报价明细</h3>\n             <el-table :data=\"currentQuoteDetails.warehouseQuotes\" border style=\"width: 100%; margin-top: 15px;\">\n               <el-table-column prop=\"platformName\" label=\"平台名称\" width=\"120\">\n                 <template #default>Amazon</template>\n               </el-table-column>\n               <el-table-column prop=\"code\" label=\"仓库代码\" width=\"120\" />\n               <el-table-column prop=\"country\" label=\"国家\" width=\"100\">\n                 <template #default>US</template>\n               </el-table-column>\n               <el-table-column prop=\"state\" label=\"省/州\" width=\"100\" />\n               <el-table-column prop=\"city\" label=\"城市\" width=\"120\" />\n               <el-table-column prop=\"address\" label=\"详细地址\" min-width=\"250\" show-overflow-tooltip />\n               <el-table-column prop=\"zipcode\" label=\"邮编\" width=\"100\" />\n               <el-table-column prop=\"price\" label=\"报价 (USD)\" width=\"120\">\n                 <template #default=\"{ row }\">\n                   {{ row.price.toFixed(2) }}\n                 </template>\n               </el-table-column>\n               <el-table-column prop=\"palletRules.maxHeight\" label=\"打板规则\" width=\"120\">\n                 <template #default=\"{ row }\">\n                   {{ row.palletRules.maxHeight }}\n                 </template>\n               </el-table-column>\n             </el-table>\n             \n             <div class=\"quote-summary\" style=\"margin-top: 15px; text-align: right;\">\n               <span>仓库数量：{{ currentQuoteDetails.warehouseQuotes.length }}</span>\n               <span style=\"margin-left: 20px;\">平均价格：{{ (currentQuoteDetails.warehouseQuotes.reduce((sum, wq) => sum + wq.price, 0) / currentQuoteDetails.warehouseQuotes.length).toFixed(2) }} USD</span>\n             </div>\n           </div>\n         </div>\n       </el-dialog>\n\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, computed, onMounted } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { ArrowDown, Rank } from '@element-plus/icons-vue';\nimport draggable from 'vuedraggable';\n\n// --- 模拟数据 ---\nconst mockSuppliers = ref([\n  { id: 'supplier_1', name: '测试供应商A - 专做提框服务' },\n  { id: 'supplier_2', name: '测试供应商B - FBA派送专家' },\n  { id: 'supplier_3', name: '测试供应商C - 全能型选手' },\n]);\n\nconst mockAmazonWarehouses = ref([\n  { code: 'ONT9', name: 'Redlands', state: 'CA', city: 'Redlands', zipcode: '92374', address: '2125 W. San Bernardino Ave' },\n  { code: 'HOU2', name: 'Houston', state: 'TX', city: 'Houston', zipcode: '77038', address: '10550 Ella Blvd.' },\n  { code: 'HOU3', name: 'Brookshire', state: 'TX', city: 'Brookshire', zipcode: '77423', address: '31555 Highway 90 E' },\n  { code: 'XUS8', name: 'Dallas', state: 'TX', city: 'Dallas', zipcode: '76155', address: '14900 Frye Rd.Fort Worth, Tarrant' },\n  { code: 'FTW1', name: 'Dallas', state: 'TX', city: 'Dallas', zipcode: '75241', address: '33333 LBJ FWY' },\n  { code: 'FTW2', name: 'Dallas', state: 'TX', city: 'Dallas', zipcode: '75261', address: '2701 West Bethel Road' },\n  { code: 'RIC1', name: 'Petersburg', state: 'VA', city: 'Petersburg', zipcode: '23803', address: '5000 Commerce Way' },\n  { code: 'RIC2', name: 'Chester', state: 'VA', city: 'Chester', zipcode: '23836', address: '1901 Meadowville Technology Parkway' },\n  { code: 'RIC3', name: 'Richmond', state: 'VA', city: 'Richmond', zipcode: '23234-2207', address: '4949 Commerce Rd' },\n  { code: 'BFI1', name: 'Sumner', state: 'WA', city: 'Sumner', zipcode: '98390', address: '1800 140th Ave.E Pierce County' },\n  { code: 'BFI3', name: 'Dupont', state: 'WA', city: 'Dupont', zipcode: '98327', address: '2700 Center Drive Pierce County' },\n  { code: 'XUSD', name: 'Stockton', state: 'CA', city: 'Stockton', zipcode: '95206', address: '1909 Zephyr St' },\n  { code: 'BFI4', name: 'Kent', state: 'WA', city: 'Kent', zipcode: '98032', address: '21005 64th Ave S' },\n  { code: 'BFI5', name: 'Kent', state: 'WA', city: 'Kent', zipcode: '98032', address: '20526 59th Place South, King County' },\n  { code: 'PHX3', name: 'Phoenix', state: 'AZ', city: 'Phoenix', zipcode: '85043', address: '6835 West Buckeye Road' },\n  { code: 'BFI7', name: 'Sumner', state: 'WA', city: 'Sumner', zipcode: '98390', address: '1901 140th Ave E' },\n  { code: 'SEA6', name: 'Seattle', state: 'WA', city: 'Seattle', zipcode: '98144', address: '2646 Rainier Ave.South King Coun' },\n  { code: 'SEA8', name: 'Bellevue', state: 'WA', city: 'Bellevue', zipcode: '98005', address: '1227 124th Avenue Northeast' },\n  { code: 'MKE1', name: 'Kenosha', state: 'WI', city: 'Kenosha', zipcode: '53144', address: '3501 120th Avenue' },\n  { code: 'ATL6', name: 'East Point', state: 'GA', city: 'East Point', zipcode: '30344', address: '4200 North Commerce' },\n  { code: 'MGE3', name: 'Jefferson', state: 'GA', city: 'Jefferson', zipcode: '30549', address: '808 Hog Mountain Road' },\n  { code: 'MDW2', name: 'Joliet', state: 'IL', city: 'Joliet', zipcode: '60433', address: '250 Emerald Drive' },\n  { code: 'MDW6', name: 'Romeoville', state: 'IL', city: 'ROMEOVILLE', zipcode: '60446', address: '1125 W REMINGTON BLVD' },\n  { code: 'SNA4', name: 'Rialto', state: 'CA', city: 'Rialto', zipcode: '92376', address: '2496 W Walnut Ave' },\n  { code: 'MDW7', name: 'Monee', state: 'IL', city: 'Monee', zipcode: '60449', address: '6605 Monee Manhattan Road' },\n  { code: 'MDW8', name: 'Waukegan', state: 'IL', city: 'Waukegan', zipcode: '60085', address: '1750 Bridge Drive' },\n  { code: 'MDW9', name: 'Aurora', state: 'IL', city: 'Aurora', zipcode: '60502', address: '2865 Duke Parkway' }\n]);\n\nconst allQuotes = ref([]);\n\nconst generatePalletRules = (warehouseCode) => {\n  const heightRules = ['72inch', '80inch', '96inch', '不限高'];\n  // 根据仓库代码分配固定的高度规则，这样每次生成的规则都是一样的\n  const index = warehouseCode.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0) % heightRules.length;\n  return {\n    warehouseCode,\n    maxHeight: heightRules[index]\n  };\n};\n\nconst generateMockQuotes = (count = 50) => {\n  const services = [\n    'LAX 港 - FBA 仓库提柜', \n    'LGB 港 - FBA 仓库提柜', \n    'NY/NJ 港 - FBA 仓库提柜',\n  ];\n  const quoteTypes = ['FBA', 'FBX'];\n  const statuses = ['pending', 'first_approved', 'final_approved', 'rejected', 'active', 'expired'];\n  const mockData = [];\n  const now = Date.now();\n\n  for (let i = 0; i < count; i++) {\n    const supplier = mockSuppliers.value[Math.floor(Math.random() * mockSuppliers.value.length)];\n    const status = statuses[Math.floor(Math.random() * statuses.length)];\n    const quoteType = quoteTypes[Math.floor(Math.random() * quoteTypes.length)];\n    const submittedAt = new Date(now - Math.floor(Math.random() * 60 * 24 * 60 * 60 * 1000));\n    const validFrom = new Date(submittedAt.getTime() + Math.floor(Math.random() * 10 * 24 * 60 * 60 * 1000));\n    const validTo = new Date(validFrom.getFullYear() + 1, validFrom.getMonth(), validFrom.getDate());\n\n    // 生成审批历史\n    let approvalHistory = [];\n    if (status === 'first_approved' || status === 'final_approved' || status === 'rejected') {\n        approvalHistory.push({ \n            timestamp: new Date(submittedAt.getTime() + 1 * 24 * 60 * 60 * 1000).toLocaleString(), \n            approver: '审批员 L1', \n            action: '初审', \n        approved: status !== 'rejected' || Math.random() > 0.5,\n            comment: status === 'rejected' && Math.random() < 0.5 ? '价格偏高' : ''\n        });\n    }\n    if (status === 'final_approved' || (status === 'rejected' && approvalHistory[0]?.approved)) {\n         approvalHistory.push({ \n            timestamp: new Date(submittedAt.getTime() + 3 * 24 * 60 * 60 * 1000).toLocaleString(), \n            approver: '审批经理 L2', \n            action: '终审', \n            approved: status === 'final_approved',\n            comment: status === 'rejected' ? '市场价格已变动' : ''\n        });\n    }\n\n    // 如果是FBA报价，生成所有仓库的报价信息\n    let warehouseQuotes = [];\n    if (quoteType === 'FBA') {\n      warehouseQuotes = mockAmazonWarehouses.value.map(warehouse => ({\n        ...warehouse,\n        price: parseFloat((Math.random() * 1000 + 200).toFixed(2)),\n        palletRules: generatePalletRules(warehouse.code)\n      }));\n    }\n\n    mockData.push({\n      id: `fq_${now - i}`,\n      supplierId: supplier.id,\n      supplierName: supplier.name,\n      quoteType: quoteType,\n      serviceDescription: services[Math.floor(Math.random() * services.length)] + (Math.random() > 0.5 ? ' (含燃油)' : ''),\n      price: quoteType === 'FBA' ? warehouseQuotes.reduce((sum, wq) => sum + wq.price, 0) / warehouseQuotes.length : parseFloat((Math.random() * 1000 + 200).toFixed(2)),\n      validFrom: validFrom.toISOString().split('T')[0],\n      validTo: validTo.toISOString().split('T')[0],\n      submittedAt: submittedAt.toLocaleString(),\n      status: status,\n      approvalHistory: approvalHistory,\n      warehouseQuotes: quoteType === 'FBA' ? warehouseQuotes : null\n    });\n  }\n  return mockData;\n};\n\n// --- 选项数据 ---\nconst statusOptions = [\n  { value: 'pending', label: '待初审', tag: 'warning' },\n  { value: 'first_approved', label: '待终审', tag: 'primary' },\n  { value: 'final_approved', label: '已批准 (待生效)', tag: 'success' },\n  { value: 'active', label: '生效中', tag: 'success' },\n  { value: 'rejected', label: '已拒绝', tag: 'danger' },\n  { value: 'expired', label: '已过期', tag: 'info' },\n];\n\n// --- 筛选与分页 ---\nconst filterForm = reactive({\n  supplierId: '',\n  status: '',\n  serviceDescription: '',\n  validityRange: [],\n});\n\nconst pagination = reactive({\n  currentPage: 1,\n  pageSize: 10,\n});\n\nconst totalQuotes = computed(() => filteredQuotesData.value.length);\n\n// 过滤逻辑\nconst filteredQuotesData = computed(() => {\n  return allQuotes.value.filter(quote => {\n    const supplierMatch = filterForm.supplierId ? quote.supplierId === filterForm.supplierId : true;\n    const statusMatch = filterForm.status ? quote.status === filterForm.status : true;\n    const descMatch = filterForm.serviceDescription ? quote.serviceDescription.includes(filterForm.serviceDescription) : true;\n    const dateMatch = filterForm.validityRange && filterForm.validityRange.length === 2\n      ? (quote.validFrom <= filterForm.validityRange[1] && quote.validTo >= filterForm.validityRange[0])\n      : true;\n    return supplierMatch && statusMatch && descMatch && dateMatch;\n  });\n});\n\n// 分页逻辑\nconst filteredQuoteList = computed(() => {\n  const start = (pagination.currentPage - 1) * pagination.pageSize;\n  const end = start + pagination.pageSize;\n  return filteredQuotesData.value.slice(start, end);\n});\n\n// --- 弹窗 ---\nconst quoteDetailsDialogVisible = ref(false);\nconst currentQuoteDetails = ref(null);\nconst detailDialogVisible = ref(false);\nconst currentQuote = ref(null);\nconst showApprovalSection = ref(false);\nconst approvalComment = ref('');\nconst approvalAction = ref({ step: '', approved: true });\nconst approvalActionText = ref('通过');\nconst rejectionActionText = ref('拒绝');\n\n// --- 方法 ---\n// 格式化\nconst formatStatus = (status) => statusOptions.find(opt => opt.value === status)?.label || status;\nconst getStatusTagType = (status) => statusOptions.find(opt => opt.value === status)?.tag || 'info';\nconst getCurrentApprovalStep = (status) => {\n    switch(status) {\n        case 'pending': return '待 L1 初审';\n        case 'first_approved': return '待 L2 终审';\n        case 'final_approved': return '审批完成 (待生效)';\n        case 'active': return '审批完成 (生效中)';\n        case 'rejected': return '审批流程已拒绝';\n        case 'expired': return '已过期';\n        default: return '未知';\n    }\n};\n\n// 判断当前用户是否有权限审批 (简单模拟，实际应基于用户角色权限)\nconst canApprove = (quote, step) => {\n  if (step === 'first_approve') {\n    return quote.status === 'pending';\n  }\n  if (step === 'final_approve') {\n    return quote.status === 'first_approved';\n  }\n  return false;\n};\n\n// 搜索\nconst handleSearch = () => {\n  pagination.currentPage = 1;\n};\n\n// 分页\nconst handleSizeChange = (newSize) => {\n  pagination.pageSize = newSize;\n  pagination.currentPage = 1;\n};\nconst handleCurrentChange = (newPage) => {\n  pagination.currentPage = newPage;\n};\n\n// 查看详情\nconst handleViewDetails = (row) => {\n  currentQuote.value = JSON.parse(JSON.stringify(row));\n  showApprovalSection.value = false;\n  detailDialogVisible.value = true;\n};\n\n// 处理审批按钮点击 (打开弹窗并设置审批信息)\nconst handleApproval = (row, step, approved) => {\n    currentQuote.value = JSON.parse(JSON.stringify(row));\n  approvalComment.value = '';\n    approvalAction.value = { step, approved };\n    showApprovalSection.value = true;\n    \n    if (step === 'first_approve') {\n        approvalActionText.value = approved ? '初审通过' : '初审拒绝';\n        rejectionActionText.value = '初审拒绝';\n    } else {\n        approvalActionText.value = approved ? '最终批准' : '最终拒绝';\n        rejectionActionText.value = '最终拒绝';\n    }\n    \n    detailDialogVisible.value = true;\n};\n\n// 查看历史 (占位)\nconst handleViewHistory = (row) => {\n    console.log('查看报价历史 for:', row.serviceDescription, 'by', row.supplierName);\n    ElMessage.info('跳转到报价历史页面 (待实现)');\n    // 实际应导航到 QuoteComparisonHistory.vue 并传入参数\n};\n\n// 视图相关\nconst currentView = ref('all');\nconst selectedCustomView = ref('');\nconst customViews = ref([]);\nconst saveViewDialogVisible = ref(false);\nconst viewOptionsDialogVisible = ref(false);\nconst viewForm = ref({\n  name: '',\n  columns: []\n});\n\n// 批量操作相关\nconst selectedRows = ref([]);\n\n// 处理视图命令\nconst handleViewCommand = (command) => {\n  switch (command) {\n    case 'save':\n      viewForm.value = {\n        name: '',\n        columns: tableColumns.value.filter(col => col.visible !== false).map(col => col.prop)\n      };\n      saveViewDialogVisible.value = true;\n      break;\n    case 'manage':\n      viewOptionsDialogVisible.value = true;\n      break;\n  }\n};\n\n// 处理批量操作命令\nconst handleBatchCommand = (command) => {\n  switch (command) {\n    case 'export':\n      handleExport();\n      break;\n    case 'approve':\n      handleBatchApprove();\n      break;\n    case 'reject':\n      handleBatchReject();\n      break;\n  }\n};\n\n// 导出功能\nconst handleExport = () => {\n  if (!selectedRows.value.length) {\n    ElMessage.warning('请先选择要导出的数据');\n    return;\n  }\n  console.log('导出选中数据:', selectedRows.value);\n  ElMessage.success('导出成功');\n};\n\n// 批量审批\nconst handleBatchApprove = () => {\n  if (!selectedRows.value.length) {\n    ElMessage.warning('请先选择要审批的数据');\n    return;\n  }\n  \n  ElMessageBox.confirm(\n    `确定要批量通过选中的 ${selectedRows.value.length} 条报价吗？`,\n    '批量审批',\n    {\n      confirmButtonText: '确定',\n      cancelButtonText: '取消',\n      type: 'warning'\n    }\n  ).then(() => {\n    console.log('批量通过:', selectedRows.value);\n    ElMessage.success('批量审批成功');\n  });\n};\n\n// 批量拒绝\nconst handleBatchReject = () => {\n  if (!selectedRows.value.length) {\n    ElMessage.warning('请先选择要拒绝的数据');\n    return;\n  }\n  \n  ElMessageBox.confirm(\n    `确定要批量拒绝选中的 ${selectedRows.value.length} 条报价吗？`,\n    '批量拒绝',\n    {\n      confirmButtonText: '确定',\n      cancelButtonText: '取消',\n      type: 'warning'\n    }\n  ).then(() => {\n    console.log('批量拒绝:', selectedRows.value);\n    ElMessage.success('批量拒绝成功');\n  });\n};\n\n// 保存视图\nconst saveView = () => {\n  if (!viewForm.value.name) {\n    ElMessage.warning('请输入视图名称');\n    return;\n  }\n  \n  const newView = {\n    id: Date.now().toString(),\n    name: viewForm.value.name,\n    columns: viewForm.value.columns,\n    filters: activeFilters.value,\n    sortSettings: sortSettings.value\n  };\n  \n  customViews.value.push(newView);\n  saveViewsToStorage();\n  saveViewDialogVisible.value = false;\n  ElMessage.success('视图保存成功');\n};\n\n// 管理视图选项\nconst handleViewOptions = (view, action) => {\n  switch (action) {\n    case 'edit':\n      // 实现编辑视图逻辑\n      break;\n    case 'copy':\n      // 实现复制视图逻辑\n      break;\n    case 'delete':\n      ElMessageBox.confirm(\n        '确定要删除该视图吗？',\n        '删除视图',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      ).then(() => {\n        const index = customViews.value.findIndex(v => v.id === view.id);\n        if (index > -1) {\n          customViews.value.splice(index, 1);\n          saveViewsToStorage();\n          ElMessage.success('视图删除成功');\n        }\n      });\n      break;\n  }\n};\n\n// 保存视图到本地存储\nconst saveViewsToStorage = () => {\n  localStorage.setItem('fixedQuoteViews', JSON.stringify(customViews.value));\n};\n\n// 加载保存的视图\nconst loadSavedViews = () => {\n  const savedViews = localStorage.getItem('fixedQuoteViews');\n  if (savedViews) {\n    customViews.value = JSON.parse(savedViews);\n  }\n};\n\n// 处理视图变化\nconst handleViewChange = (view) => {\n  if (view === 'all') {\n    filterForm.supplierId = '';\n    filterForm.status = '';\n    filterForm.serviceDescription = '';\n    filterForm.validityRange = [];\n    } else {\n    filterForm.status = view;\n  }\n  handleSearch();\n};\n\n// 处理表格选择变化\nconst handleSelectionChange = (rows) => {\n  selectedRows.value = rows;\n};\n\n// 高级筛选相关\nconst advancedFilterVisible = ref(false);\nconst filterLogic = ref('and');\nconst activeFilters = ref([]);\nconst filterableFields = computed(() => [\n  { prop: 'supplierName', label: '供应商' },\n  { prop: 'serviceDescription', label: '服务描述' },\n  { prop: 'price', label: '报价' },\n  { prop: 'status', label: '状态' },\n  { prop: 'validFrom', label: '生效开始日期' },\n  { prop: 'validTo', label: '生效结束日期' },\n  { prop: 'submittedAt', label: '提交时间' }\n]);\n\n// 分组相关\nconst groupModalVisible = ref(false);\nconst groupSettings = ref({\n  level1: '',\n  level2: '',\n  level3: ''\n});\nconst groupableFields = computed(() => \n  filterableFields.value.filter(field => field.prop !== 'operation')\n);\n\n// 排序相关\nconst sortModalVisible = ref(false);\nconst sortSettings = ref([\n  { field: '', direction: 'asc' }\n]);\nconst sortableFields = computed(() => \n  filterableFields.value.filter(field => field.prop !== 'operation')\n);\n\n// 显示高级筛选\nconst showAdvancedFilter = () => {\n  advancedFilterVisible.value = true;\n};\n\n// 添加筛选条件\nconst addFilter = () => {\n  activeFilters.value.push({\n    field: '',\n    operator: 'eq',\n    value: ''\n  });\n};\n\n// 移除筛选条件\nconst removeFilter = (index) => {\n  activeFilters.value.splice(index, 1);\n};\n\n// 应用高级筛选\nconst applyAdvancedFilter = () => {\n  handleSearch();\n  advancedFilterVisible.value = false;\n};\n\n// 显示分组设置\nconst showGroupModal = () => {\n  groupModalVisible.value = true;\n};\n\n// 清除分组设置\nconst clearGroupSettings = () => {\n  groupSettings.value = {\n    level1: '',\n    level2: '',\n    level3: ''\n  };\n};\n\n// 应用分组设置\nconst applyGroupSettings = () => {\n  const levels = [groupSettings.value.level1, groupSettings.value.level2, groupSettings.value.level3]\n    .filter(Boolean);\n  \n  if (levels.length > 0) {\n    console.log('应用分组:', levels);\n    handleSearch();\n  }\n  \n  groupModalVisible.value = false;\n};\n\n// 显示排序设置\nconst showSortModal = () => {\n  sortModalVisible.value = true;\n};\n\n// 添加排序字段\nconst addSortField = () => {\n  sortSettings.value.push({ field: '', direction: 'asc' });\n};\n\n// 移除排序字段\nconst removeSortField = (index) => {\n  sortSettings.value.splice(index, 1);\n  if (sortSettings.value.length === 0) {\n    sortSettings.value.push({ field: '', direction: 'asc' });\n  }\n};\n\n// 清除排序设置\nconst clearSortSettings = () => {\n  sortSettings.value = [{ field: '', direction: 'asc' }];\n};\n\n// 应用排序设置\nconst applySortSettings = () => {\n  const validSorts = sortSettings.value.filter(sort => sort.field);\n  if (validSorts.length > 0) {\n    console.log('应用排序:', validSorts);\n    handleSearch();\n  }\n  \n  sortModalVisible.value = false;\n};\n\n// 字段配置相关\nconst columnSettingsVisible = ref(false);\nconst columnSettingsList = ref([]);\nconst allColumnsSelected = computed({\n  get: () => columnSettingsList.value.length > 0 && columnSettingsList.value.every(col => col.visible),\n  set: (value) => {\n    columnSettingsList.value.forEach(col => {\n      col.visible = value;\n    });\n  }\n});\n\n// 显示字段配置\nconst showColumnSettings = () => {\n  columnSettingsList.value = tableColumns.value.map(col => ({\n    prop: col.prop,\n    label: col.label,\n    visible: col.visible !== false,\n    width: col.width || 120\n  }));\n  columnSettingsVisible.value = true;\n};\n\n// 处理全选/取消全选\nconst handleSelectAllColumns = (value) => {\n  columnSettingsList.value.forEach(col => {\n    col.visible = value;\n  });\n};\n\n// 重置列配置\nconst resetColumnSettings = () => {\n  columnSettingsList.value = tableColumns.value.map(col => ({\n    prop: col.prop,\n    label: col.label,\n    visible: true,\n    width: col.width || 120\n  }));\n};\n\n// 处理拖拽结束\nconst handleDragEnd = () => {\n  tableColumns.value = columnSettingsList.value.map(col => ({\n    ...tableColumns.value.find(c => c.prop === col.prop),\n    visible: col.visible,\n    width: col.width\n  }));\n};\n\n// 应用列配置\nconst applyColumnSettings = () => {\n  tableColumns.value = columnSettingsList.value.map(col => ({\n    ...tableColumns.value.find(c => c.prop === col.prop),\n    visible: col.visible,\n    width: col.width\n  }));\n  \n  if (selectedCustomView.value) {\n    updateViewConfig(selectedCustomView.value);\n  }\n  \n  columnSettingsVisible.value = false;\n  ElMessage.success('字段配置已更新');\n};\n\n// 跟进记录相关\nconst followUpDialogVisible = ref(false);\nconst followUpForm = ref({\n  content: '',\n  type: 'primary'\n});\nconst followUpHistory = ref([]);\nconst currentEditingQuote = ref(null);\n\n// 备注相关\nconst memoDialogVisible = ref(false);\nconst memoForm = ref({\n  content: ''\n});\n\n// 处理下拉菜单命令\nconst handleCommand = (command, row) => {\n  switch (command) {\n    case 'first_approve':\n      handleApproval(row, 'first_approve', true);\n      break;\n    case 'first_reject':\n      handleApproval(row, 'first_approve', false);\n      break;\n    case 'final_approve':\n      handleApproval(row, 'final_approve', true);\n      break;\n    case 'final_reject':\n      handleApproval(row, 'final_approve', false);\n      break;\n    case 'history':\n      handleViewHistory(row);\n      break;\n    case 'followUp':\n      handleFollowUp(row);\n      break;\n    case 'memo':\n      handleMemo(row);\n      break;\n    case 'export':\n      handleExport([row]);\n      break;\n    case 'seeQuote':\n      handleSeeQuote(row);\n      break;\n  }\n};\n\n// 处理跟进记录\nconst handleFollowUp = (row) => {\n  currentEditingQuote.value = row;\n  followUpForm.value = {\n    content: '',\n    type: 'primary'\n  };\n  followUpHistory.value = [\n    {\n      timestamp: '2024-01-01 10:00:00',\n      content: '报价已提交，等待初审',\n      type: 'primary'\n    },\n    {\n      timestamp: '2024-01-02 14:30:00',\n      content: '初审通过，等待终审',\n      type: 'success'\n    }\n  ];\n  followUpDialogVisible.value = true;\n};\n\n// 保存跟进记录\nconst saveFollowUp = () => {\n  if (!followUpForm.value.content) {\n    ElMessage.warning('请输入跟进内容');\n    return;\n  }\n  \n  followUpHistory.value.unshift({\n    timestamp: new Date().toLocaleString(),\n    content: followUpForm.value.content,\n    type: followUpForm.value.type\n  });\n  \n  followUpForm.value.content = '';\n  ElMessage.success('跟进记录已添加');\n};\n\n// 处理备注\nconst handleMemo = (row) => {\n  currentEditingQuote.value = row;\n  memoForm.value = {\n    content: row.memo || ''\n  };\n  memoDialogVisible.value = true;\n};\n\n// 保存备注\nconst saveMemo = () => {\n  if (!currentEditingQuote.value) return;\n  \n  currentEditingQuote.value.memo = memoForm.value.content;\n  memoDialogVisible.value = false;\n  ElMessage.success('备注已保存');\n};\n\n// 添加查看报价处理函数\nconst handleSeeQuote = (row) => {\n  if (row.quoteType === 'FBA') {\n    currentQuoteDetails.value = {\n      ...row,\n      warehouseDetails: mockAmazonWarehouses.value.find(w => \n        row.serviceDescription.includes(w.code)\n      )\n    };\n    quoteDetailsDialogVisible.value = true;\n  } else {\n    ElMessage.info('FBX报价详情查看功能开发中');\n  }\n};\n\n// --- 表格列配置 ---\nconst tableColumns = ref([\n  { prop: 'supplierName', label: '供应商', width: 200, visible: true },\n  { prop: 'serviceDescription', label: '服务/线路描述', minWidth: 250, visible: true },\n  { prop: 'quoteType', label: '报价类型', width: 100, visible: true },\n  { prop: 'serviceWarehouse', label: '服务仓库', width: 120, visible: true },\n  { prop: 'price', label: '报价 (USD)', width: 120, visible: true },\n  { prop: 'validFrom', label: '生效开始日期', width: 130, visible: true },\n  { prop: 'validTo', label: '生效结束日期', width: 130, visible: true },\n  { prop: 'submittedAt', label: '提交时间', width: 160, visible: true },\n  { prop: 'status', label: '状态', width: 120, visible: true },\n  { prop: 'approvalProgress', label: '审批进度', width: 150, visible: true },\n  { prop: 'operation', label: '操作', width: 220, fixed: 'right', visible: true }\n]);\n\n// 服务仓库选项\nconst serviceWarehouseOptions = [\n  { value: 'west1', label: '美西一号仓' },\n  { value: 'west2', label: '美西二号仓' },\n  { value: 'east', label: '美东仓' }\n];\n\n// 更新视图配置\nconst updateViewConfig = (viewId) => {\n  const view = customViews.value.find(v => v.id === viewId);\n  if (view) {\n    view.columns = tableColumns.value.map(col => ({\n      prop: col.prop,\n      visible: col.visible,\n      width: col.width\n    }));\n    saveViewsToStorage();\n  }\n};\n\n// --- 生命周期 ---\nonMounted(() => {\n  allQuotes.value = generateMockQuotes();\n  loadSavedViews();\n});\n\n</script>\n\n<style scoped>\n.fixed-quote-list-container {\n  padding: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.header-actions {\n  display: flex;\n  gap: 10px;\n}\n\n.filter-form {\n  margin-bottom: 20px;\n}\n\n.filter-form .el-form-item {\n  margin-bottom: 10px;\n}\n\n.el-table {\n  margin-top: 15px;\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n}\n\n.el-timeline {\n  padding-left: 10px;\n}\n\n.view-selector {\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.view-list {\n  max-height: 400px;\n  overflow-y: auto;\n}\n\n.advanced-filter {\n  padding: 20px;\n}\n\n.filter-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.filter-conditions {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.filter-item {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.group-settings {\n  padding: 20px;\n}\n\n.group-levels {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n\n.group-level {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.level-label {\n  width: 80px;\n  text-align: right;\n}\n\n.sort-settings {\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.sort-item {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.column-settings {\n  padding: 20px;\n}\n\n.settings-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.column-item {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 8px;\n  border-bottom: 1px solid #eee;\n}\n\n.column-item:last-child {\n  border-bottom: none;\n}\n\n.drag-handle {\n  cursor: move;\n  color: #909399;\n}\n\n.drag-handle:hover {\n  color: #409EFF;\n}\n\n.follow-up-container {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.follow-up-form {\n  border-bottom: 1px solid #eee;\n  padding-bottom: 20px;\n}\n\n.form-footer {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 20px;\n}\n\n.follow-up-history {\n  max-height: 400px;\n  overflow-y: auto;\n}\n\n.quote-details {\n  padding: 20px;\n}\n\n.warehouse-details {\n  margin-top: 20px;\n  padding-top: 20px;\n  border-top: 1px solid #eee;\n}\n\n.warehouse-details h3 {\n  margin-bottom: 15px;\n}\n</style> ","import script from \"./FixedQuoteList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FixedQuoteList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./FixedQuoteList.vue?vue&type=style&index=0&id=083f1d34&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-083f1d34\"]])\n\nexport default __exports__"],"names":["mockSuppliers","ref","id","name","mockAmazonWarehouses","code","state","city","zipcode","address","allQuotes","generatePalletRules","warehouseCode","heightRules","index","split","reduce","acc","char","charCodeAt","length","maxHeight","generateMockQuotes","count","services","quoteTypes","statuses","mockData","now","Date","i","supplier","value","Math","floor","random","status","quoteType","submittedAt","validFrom","getTime","validTo","getFullYear","getMonth","getDate","approvalHistory","push","timestamp","toLocaleString","approver","action","approved","comment","warehouseQuotes","map","warehouse","price","parseFloat","toFixed","palletRules","supplierId","supplierName","serviceDescription","sum","wq","toISOString","statusOptions","label","tag","filterForm","reactive","validityRange","pagination","currentPage","pageSize","totalQuotes","computed","filteredQuotesData","filter","quote","supplierMatch","statusMatch","descMatch","includes","dateMatch","filteredQuoteList","start","end","slice","quoteDetailsDialogVisible","currentQuoteDetails","detailDialogVisible","currentQuote","showApprovalSection","approvalComment","approvalAction","step","approvalActionText","rejectionActionText","formatStatus","find","opt","getStatusTagType","getCurrentApprovalStep","canApprove","handleSearch","handleSizeChange","newSize","handleCurrentChange","newPage","handleViewDetails","row","JSON","parse","stringify","handleApproval","handleViewHistory","console","log","ElMessage","info","currentView","selectedCustomView","customViews","saveViewDialogVisible","viewOptionsDialogVisible","viewForm","columns","selectedRows","handleViewCommand","command","tableColumns","col","visible","prop","handleBatchCommand","handleExport","handleBatchApprove","handleBatchReject","success","warning","ElMessageBox","confirm","confirmButtonText","cancelButtonText","type","then","saveView","newView","toString","filters","activeFilters","sortSettings","saveViewsToStorage","handleViewOptions","view","findIndex","v","splice","localStorage","setItem","loadSavedViews","savedViews","getItem","handleViewChange","handleSelectionChange","rows","advancedFilterVisible","filterLogic","filterableFields","groupModalVisible","groupSettings","level1","level2","level3","groupableFields","field","sortModalVisible","direction","sortableFields","showAdvancedFilter","addFilter","operator","removeFilter","applyAdvancedFilter","showGroupModal","clearGroupSettings","applyGroupSettings","levels","Boolean","showSortModal","addSortField","removeSortField","clearSortSettings","applySortSettings","validSorts","sort","columnSettingsVisible","columnSettingsList","allColumnsSelected","get","every","set","forEach","showColumnSettings","width","handleSelectAllColumns","resetColumnSettings","handleDragEnd","c","applyColumnSettings","updateViewConfig","followUpDialogVisible","followUpForm","content","followUpHistory","currentEditingQuote","memoDialogVisible","memoForm","handleCommand","handleFollowUp","handleMemo","handleSeeQuote","saveFollowUp","unshift","memo","saveMemo","warehouseDetails","w","minWidth","fixed","serviceWarehouseOptions","viewId","onMounted","__exports__"],"sourceRoot":""}