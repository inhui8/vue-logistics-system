{"version":3,"file":"js/445.67ee7c0a.js","mappings":"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","sources":["webpack://vue-logistics-system/./src/views/WorkOrder/ExceptionWorkOrderList.vue","webpack://vue-logistics-system/./src/views/WorkOrder/ExceptionWorkOrderList.vue?5885"],"sourcesContent":["<template>\r\n  <div class=\"work-order-list-container\">\r\n    <div class=\"page-header\">\r\n      <h2 class=\"page-title\">异常工单</h2>\r\n      <div class=\"page-actions\">\r\n        <el-button type=\"primary\" @click=\"createWorkOrder\">提交异常反馈</el-button>\r\n         <!-- 这里创建的工单类型应默认为 'exception' -->\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 搜索和筛选区域 -->\r\n    <el-card shadow=\"never\" class=\"filter-card\">\r\n      <div class=\"search-bar\">\r\n        <el-input\r\n          v-model=\"searchQuery\"\r\n          placeholder=\"搜索异常工单 (工单号、主题、订单号...)\"\r\n          class=\"search-input\"\r\n          @keyup.enter=\"handleSearch\">\r\n          <template #append>\r\n            <el-button :icon=\"Search\" @click=\"handleSearch\"></el-button>\r\n          </template>\r\n        </el-input>\r\n      </div>\r\n\r\n      <div class=\"filter-section\">\r\n        <el-form :inline=\"true\" :model=\"filters\" size=\"small\">\r\n          <el-form-item label=\"状态\">\r\n            <el-select v-model=\"filters.status\" placeholder=\"按状态筛选\" clearable>\r\n              <el-option label=\"待处理\" value=\"pending\"></el-option>\r\n              <el-option label=\"处理中\" value=\"processing\"></el-option>\r\n              <el-option label=\"待确认\" value=\"pending_confirmation\"></el-option>\r\n              <el-option label=\"已解决\" value=\"resolved\"></el-option>\r\n              <el-option label=\"已关闭\" value=\"closed\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n           <!-- 类型筛选已移除，固定为 'exception' -->\r\n           <el-form-item label=\"异常类型\">\r\n                <el-select v-model=\"filters.exceptionType\" placeholder=\"按异常类型筛选\" clearable>\r\n                   <el-option label=\"缺货\" value=\"out_of_stock\"></el-option>\r\n                   <el-option label=\"地址错误\" value=\"address_error\"></el-option>\r\n                   <el-option label=\"支付问题\" value=\"payment_issue\"></el-option>\r\n                   <el-option label=\"客户投诉\" value=\"customer_complaint\"></el-option>\r\n                   <el-option label=\"系统错误\" value=\"system_error\"></el-option>\r\n                   <!-- 可以添加更多类型 -->\r\n               </el-select>\r\n           </el-form-item>\r\n          <el-form-item label=\"优先级\">\r\n            <el-select v-model=\"filters.priority\" placeholder=\"按优先级筛选\" clearable>\r\n              <el-option label=\"紧急\" value=\"urgent\"></el-option>\r\n              <el-option label=\"高\" value=\"high\"></el-option>\r\n              <el-option label=\"中\" value=\"medium\"></el-option>\r\n              <el-option label=\"低\" value=\"low\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"处理人\">\r\n            <el-select v-model=\"filters.assignee\" placeholder=\"按处理人筛选\" clearable filterable>\r\n              <el-option v-for=\"user in users\" :key=\"user.id\" :label=\"user.name\" :value=\"user.id\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"创建时间\">\r\n            <el-date-picker\r\n              v-model=\"filters.createdAtRange\"\r\n              type=\"daterange\"\r\n              start-placeholder=\"开始日期\"\r\n              end-placeholder=\"结束日期\"\r\n              range-separator=\"至\"\r\n              value-format=\"YYYY-MM-DD\">\r\n            </el-date-picker>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"handleSearch\">查询</el-button>\r\n            <el-button @click=\"resetFilters\">重置</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 视图选择选项卡 -->\r\n    <div class=\"view-management\">\r\n      <el-radio-group v-model=\"currentView\" size=\"small\" class=\"status-view-group\">\r\n        <el-radio-button value=\"all\">全部</el-radio-button>\r\n        <el-radio-button value=\"pending\">待处理</el-radio-button>\r\n        <el-radio-button value=\"processing\">处理中</el-radio-button>\r\n        <el-radio-button value=\"pending_confirmation\">待确认</el-radio-button>\r\n        <el-radio-button value=\"resolved\">已解决</el-radio-button>\r\n        <el-radio-button value=\"closed\">已关闭</el-radio-button>\r\n        <!-- 动态添加自定义视图 -->\r\n        <el-radio-button \r\n          v-for=\"view in customViews\" \r\n          :key=\"view.id\" \r\n          :label=\"view.id\"\r\n          @contextmenu.prevent=\"handleContextMenu($event)\"\r\n        >\r\n          {{view.name}}\r\n        </el-radio-button>\r\n      </el-radio-group>\r\n      \r\n      <el-button type=\"text\" size=\"small\" @click=\"handleSaveView\">新增视图</el-button>\r\n      <el-button type=\"text\" size=\"small\" @click=\"showGroupModal\">高级分组</el-button>\r\n      <el-button type=\"text\" size=\"small\" @click=\"showSortModal\">高级排序</el-button>\r\n      <el-button type=\"text\" size=\"small\" @click=\"showFilterPanel\">筛选</el-button>\r\n      <el-button type=\"text\" size=\"small\" @click=\"showColumnSettings\">字段配置</el-button>\r\n    </div>\r\n\r\n    <!-- 工单列表 -->\r\n    <el-card shadow=\"never\" class=\"list-card\">\r\n       <div class=\"table-operations\" v-if=\"selectedRows.length > 0\">\r\n         <span class=\"selected-count\">已选择 {{ selectedRows.length }} 项</span>\r\n         <el-button size=\"small\" @click=\"batchProcess\">批量处理</el-button>\r\n         <el-button size=\"small\" @click=\"clearSelection\">清除选择</el-button>\r\n       </div>\r\n\r\n      <groupable-table\r\n        ref=\"mainTable\"\r\n        :data=\"workOrderList\"\r\n        row-key=\"id\"\r\n        :group-fields=\"groupField ? [groupField] : []\"\r\n        :show-selection=\"true\"\r\n        :show-group-column=\"!!groupField\"\r\n        :group-column-label=\"groupField ? getGroupColumnLabel(groupField) : '分组'\"\r\n        :default-expand-all=\"false\"\r\n        :show-pagination=\"true\"\r\n        :current-page=\"pagination.current\"\r\n        :page-size=\"pagination.pageSize\"\r\n        :page-sizes=\"[10, 20, 50, 100]\"\r\n        :total=\"pagination.total\"\r\n        v-loading=\"loading\"\r\n        @selection-change=\"handleSelectionChange\"\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        @cell-click=\"handleCellClick\"\r\n        @cell-dblclick=\"handleCellDbClick\"\r\n        style=\"width: 100%\"\r\n      >\r\n        <!-- 表格列配置 -->\r\n        <el-table-column \r\n          v-for=\"col in visibleColumns\" \r\n          :key=\"col.prop\"\r\n          :label=\"col.label\"\r\n          :prop=\"col.prop\"\r\n          :width=\"col.width\"\r\n          :min-width=\"col.minWidth\"\r\n          :fixed=\"col.fixed\"\r\n        >\r\n          <template #default=\"scope\" v-if=\"col.prop === 'id'\">\r\n            <el-link type=\"primary\" @click=\"viewWorkOrder(scope.row.id)\">{{ scope.row.id }}</el-link>\r\n          </template>\r\n          <template #default=\"scope\" v-else-if=\"col.prop === 'subject'\">\r\n            <div class=\"subject-cell\">\r\n              <span class=\"subject-text\">{{ scope.row.subject }}</span>\r\n              <el-tag v-if=\"scope.row.priority === 'urgent'\" type=\"danger\" size=\"small\" effect=\"dark\">紧急</el-tag>\r\n            </div>\r\n          </template>\r\n          <template #default=\"scope\" v-else-if=\"col.prop === 'type'\">\r\n            {{ getTypeText(scope.row.type) }}\r\n          </template>\r\n          <template #default=\"scope\" v-else-if=\"col.prop === 'status'\">\r\n            <el-tag :type=\"getStatusType(scope.row.status)\" size=\"small\">\r\n              {{ getStatusText(scope.row.status) }}\r\n            </el-tag>\r\n          </template>\r\n          <template #default=\"scope\" v-else-if=\"col.prop === 'priority'\">\r\n            <el-tag :type=\"getPriorityType(scope.row.priority)\" size=\"small\">\r\n              {{ getPriorityText(scope.row.priority) }}\r\n            </el-tag>\r\n          </template>\r\n          <template #default=\"scope\" v-else-if=\"col.prop === 'orderNo'\">\r\n            <el-link v-if=\"scope.row.orderNo\" type=\"info\" @click=\"viewOrder(scope.row.orderNo)\">\r\n              {{ scope.row.orderNo }}\r\n            </el-link>\r\n            <span v-else>-</span>\r\n          </template>\r\n          <template #default=\"scope\" v-else-if=\"col.prop === 'assignee'\">\r\n            {{ scope.row.assignee || '未指派' }}\r\n          </template>\r\n          <template #default=\"scope\" v-else-if=\"col.prop === 'createdAt' || col.prop === 'updatedAt'\">\r\n            {{ formatDateTime(scope.row[col.prop]) }}\r\n          </template>\r\n          <template #default=\"scope\" v-else-if=\"col.prop === 'operation'\">\r\n            <el-button link type=\"primary\" @click=\"viewWorkOrder(scope.row.id)\">查看</el-button>\r\n            <el-button link type=\"primary\" v-if=\"canProcess(scope.row)\" @click=\"processWorkOrder(scope.row)\">处理</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </groupable-table>\r\n\r\n      <!-- 分页 -->\r\n      <div class=\"pagination-container\">\r\n        <el-pagination\r\n          v-model:current-page=\"pagination.current\"\r\n          v-model:page-size=\"pagination.pageSize\"\r\n          :total=\"pagination.total\"\r\n          :page-sizes=\"[10, 20, 50, 100]\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\">\r\n        </el-pagination>\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 筛选面板 -->\r\n    <filter-panel\r\n      v-model:visible=\"filterPanelVisible\"\r\n      :columns=\"tableColumns\"\r\n      :existing-filters=\"activeFilters\"\r\n      :existing-logic=\"filterLogic\"\r\n      @apply-filters=\"applyFilters\"\r\n      @cancel=\"cancelFilters\"\r\n    />\r\n\r\n    <!-- 保存视图对话框 -->\r\n    <el-dialog\r\n      title=\"保存视图\"\r\n      v-model=\"saveViewDialogVisible\"\r\n      width=\"500px\"\r\n    >\r\n      <el-form :model=\"viewForm\" label-width=\"100px\">\r\n        <el-form-item label=\"视图名称\" required>\r\n          <el-input v-model=\"viewForm.name\" placeholder=\"请输入视图名称\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"显示字段\">\r\n          <el-checkbox-group v-model=\"viewForm.columns\">\r\n            <el-checkbox \r\n              v-for=\"col in tableColumns\" \r\n              :key=\"col.prop\" \r\n              :label=\"col.prop\"\r\n            >\r\n              {{col.label}}\r\n            </el-checkbox>\r\n          </el-checkbox-group>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"saveViewDialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"saveView\">确定</el-button>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!-- 分组设置弹窗 -->\r\n    <el-dialog\r\n      title=\"分组设置\"\r\n      v-model=\"groupModalVisible\"\r\n      width=\"500px\"\r\n    >\r\n      <div class=\"group-settings\">\r\n        <div class=\"group-level\">\r\n          <span class=\"group-level-label\">一级分组：</span>\r\n          <el-select v-model=\"groupSettings.level1\" placeholder=\"选择字段\" style=\"width: 280px;\" clearable>\r\n            <el-option v-for=\"field in groupableFields\" :key=\"field.prop\" :label=\"field.label\" :value=\"field.prop\"></el-option>\r\n          </el-select>\r\n        </div>\r\n        <div class=\"group-level\">\r\n          <span class=\"group-level-label\">二级分组：</span>\r\n          <el-select v-model=\"groupSettings.level2\" placeholder=\"选择字段\" style=\"width: 280px;\" clearable>\r\n            <el-option v-for=\"field in groupableFields\" :key=\"field.prop\" :label=\"field.label\" :value=\"field.prop\"></el-option>\r\n          </el-select>\r\n        </div>\r\n        <div class=\"group-level\">\r\n          <span class=\"group-level-label\">三级分组：</span>\r\n          <el-select v-model=\"groupSettings.level3\" placeholder=\"选择字段\" style=\"width: 280px;\" clearable>\r\n            <el-option v-for=\"field in groupableFields\" :key=\"field.prop\" :label=\"field.label\" :value=\"field.prop\"></el-option>\r\n          </el-select>\r\n        </div>\r\n      </div>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"groupModalVisible = false\">取消</el-button>\r\n          <el-button type=\"danger\" @click=\"clearGroupSettings\">清除分组</el-button>\r\n          <el-button type=\"primary\" @click=\"applyGroupSettings\">应用</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!-- 排序设置弹窗 -->\r\n    <el-dialog\r\n      title=\"排序设置\"\r\n      v-model=\"sortModalVisible\"\r\n      width=\"500px\"\r\n    >\r\n      <div class=\"sort-settings\">\r\n        <div v-for=\"(sort, index) in sortSettings\" :key=\"index\" class=\"sort-item\">\r\n          <el-select v-model=\"sort.field\" placeholder=\"选择字段\" style=\"width: 200px;\" clearable>\r\n            <el-option \r\n              v-for=\"field in sortableFields\" \r\n              :key=\"field.prop\" \r\n              :label=\"field.label\" \r\n              :value=\"field.prop\"\r\n            ></el-option>\r\n          </el-select>\r\n          <el-select v-model=\"sort.direction\" placeholder=\"排序方向\" style=\"width: 120px;\">\r\n            <el-option label=\"升序\" value=\"asc\"></el-option>\r\n            <el-option label=\"降序\" value=\"desc\"></el-option>\r\n          </el-select>\r\n          <el-button \r\n            type=\"danger\" \r\n            size=\"small\"\r\n            @click=\"removeSortField(index)\"\r\n          >删除</el-button>\r\n        </div>\r\n        <div class=\"sort-actions\">\r\n          <el-button type=\"primary\" plain @click=\"addSortField\">添加排序字段</el-button>\r\n        </div>\r\n      </div>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"sortModalVisible = false\">取消</el-button>\r\n          <el-button type=\"danger\" @click=\"clearSortSettings\">清除排序</el-button>\r\n          <el-button type=\"primary\" @click=\"applySortSettings\">应用</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!-- 字段配置对话框 -->\r\n    <el-dialog\r\n      title=\"字段配置\"\r\n      v-model=\"columnSettingsVisible\"\r\n      width=\"600px\"\r\n    >\r\n      <div class=\"column-settings\">\r\n        <div class=\"column-settings-header\">\r\n          <el-checkbox\r\n            v-model=\"allColumnsSelected\"\r\n            @change=\"handleSelectAllColumns\"\r\n          >全选</el-checkbox>\r\n          <el-button type=\"primary\" size=\"small\" @click=\"resetColumnSettings\">重置</el-button>\r\n        </div>\r\n        <div class=\"column-list\">\r\n          <draggable\r\n            v-model=\"columnSettingsList\"\r\n            item-key=\"prop\"\r\n            handle=\".drag-handle\"\r\n            @end=\"handleDragEnd\"\r\n          >\r\n            <template #item=\"{ element }\">\r\n              <div class=\"column-item\">\r\n                <el-icon class=\"drag-handle\"><d-arrow-left /></el-icon>\r\n                <el-checkbox v-model=\"element.visible\">{{ element.label }}</el-checkbox>\r\n              </div>\r\n            </template>\r\n          </draggable>\r\n        </div>\r\n      </div>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"columnSettingsVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"applyColumnSettings\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!-- 右键菜单 -->\r\n    <div \r\n      v-show=\"contextMenuVisible\" \r\n      class=\"context-menu\" \r\n      :style=\"{left: contextMenuX + 'px', top: contextMenuY + 'px'}\"\r\n    >\r\n      <div class=\"context-menu-item\" @click=\"handleCopyView\">\r\n        <span>复制视图</span>\r\n      </div>\r\n      <div class=\"context-menu-item\" @click=\"handleRenameView\">\r\n        <span>重命名</span>\r\n      </div>\r\n      <div class=\"context-menu-item\" @click=\"handleDeleteView\">\r\n        <span>删除</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted, computed } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { Search, DArrowLeft } from '@element-plus/icons-vue';\r\nimport { ElMessage, ElMessageBox } from 'element-plus';\r\nimport FilterPanel from '@/components/logistics/FilterPanel.vue';\r\nimport GroupableTable from '@/components/logistics/GroupableTable.vue';\r\nimport draggable from 'vuedraggable';\r\n\r\nconst router = useRouter();\r\n\r\nconst users = ref([\r\n  { id: 1, name: '张三' },\r\n  { id: 2, name: '李四' },\r\n  { id: 3, name: '客服团队' },\r\n  { id: 5, name: '财务' } // Added for example\r\n]);\r\n\r\nconst loading = ref(false);\r\nconst searchQuery = ref('');\r\n\r\nconst filters = reactive({\r\n  status: '',\r\n  type: 'exception', // 固定类型\r\n  exceptionType: '', // 新增异常类型筛选\r\n  priority: '',\r\n  assignee: null,\r\n  createdAtRange: [],\r\n});\r\n\r\n// 列表数据 (仅包含异常工单示例)\r\nconst workOrderList = ref([\r\n   {\r\n    id: 'WO202307250001',\r\n    subject: '客户反馈订单延迟问题',\r\n    type: 'exception',\r\n    status: 'pending',\r\n    priority: 'high',\r\n    exceptionType: '客户投诉', // 异常类型\r\n    orderNo: 'ORD202307250123',\r\n    creator: '张三',\r\n    assignee: '李四',\r\n    createdAt: new Date(Date.now() - 24 * 60 * 60 * 1000),\r\n    updatedAt: new Date(),\r\n  },\r\n  {\r\n    id: 'WO202307250005',\r\n    subject: '支付异常退款处理',\r\n    type: 'exception',\r\n    status: 'closed',\r\n    priority: 'high',\r\n    exceptionType: '支付问题', // 异常类型\r\n    orderNo: 'ORD202307250126',\r\n    creator: '李四',\r\n    assignee: '财务',\r\n    createdAt: new Date(Date.now() - 72 * 60 * 60 * 1000),\r\n    updatedAt: new Date(Date.now() - 48 * 60 * 60 * 1000),\r\n  },\r\n  {\r\n    id: 'WO202307250007',\r\n    subject: '入库单商品数量不符',\r\n    type: 'exception',\r\n    status: 'processing',\r\n    priority: 'medium',\r\n    exceptionType: '系统错误', // 假设是系统错误，或定义更具体的类型如\"入库差异\"\r\n    orderNo: 'INB20230725005', // 关联入库单号\r\n    creator: '仓库管理员',\r\n    assignee: '客服团队',\r\n    createdAt: new Date(Date.now() - 8 * 60 * 60 * 1000),\r\n    updatedAt: new Date(Date.now() - 2 * 60 * 60 * 1000),\r\n  }\r\n]);\r\n\r\nconst pagination = reactive({\r\n  current: 1,\r\n  pageSize: 10,\r\n  total: 0,\r\n});\r\n\r\nconst selectedRows = ref([]);\r\n\r\n// --- 辅助函数 --- (与之前相同)\r\nconst formatDateTime = (date) => {\r\n  if (!date) return '-';\r\n  const d = new Date(date);\r\n  return `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')} ${String(d.getHours()).padStart(2, '0')}:${String(d.getMinutes()).padStart(2, '0')}`;\r\n};\r\n\r\nconst getStatusText = (status) => {\r\n  const statusMap = {\r\n    'pending': '待处理',\r\n    'processing': '处理中',\r\n    'pending_confirmation': '待确认',\r\n    'resolved': '已解决',\r\n    'closed': '已关闭'\r\n  };\r\n  return statusMap[status] || status;\r\n};\r\n\r\nconst getStatusType = (status) => {\r\n  const typeMap = {\r\n    'pending': 'warning',\r\n    'processing': 'primary',\r\n    'pending_confirmation': 'info',\r\n    'resolved': 'success',\r\n    'closed': 'info'\r\n  };\r\n  return typeMap[status] || 'info';\r\n};\r\n\r\nconst getTypeText = (type) => {\r\n  const typeMap = {\r\n    'exception': '异常订单处理',\r\n    'command': '指令执行',\r\n    'warning': '订单预警响应',\r\n    'value_added': '增值服务请求',\r\n    'other': '其他问题'\r\n  };\r\n  return typeMap[type] || type;\r\n};\r\n\r\nconst getPriorityText = (priority) => {\r\n  const priorityMap = {\r\n    'urgent': '紧急',\r\n    'high': '高',\r\n    'medium': '中',\r\n    'low': '低'\r\n  };\r\n  return priorityMap[priority] || priority;\r\n};\r\n\r\nconst getPriorityType = (priority) => {\r\n  const typeMap = {\r\n    'urgent': 'danger',\r\n    'high': 'warning',\r\n    'medium': 'info',\r\n    'low': 'success'\r\n  };\r\n  return typeMap[priority] || 'info';\r\n};\r\n\r\n// 判断是否可处理\r\nconst canProcess = (workOrder) => {\r\n  return ['pending', 'processing'].includes(workOrder.status);\r\n};\r\n\r\n// --- 事件处理函数 ---\r\nconst handleSearch = () => {\r\n  pagination.current = 1;\r\n  fetchWorkOrders();\r\n};\r\n\r\nconst resetFilters = () => {\r\n  filters.status = '';\r\n  filters.exceptionType = ''; // 重置异常类型\r\n  filters.priority = '';\r\n  filters.assignee = null;\r\n  filters.createdAtRange = [];\r\n  searchQuery.value = '';\r\n  handleSearch();\r\n};\r\n\r\nconst handleSelectionChange = (selection) => {\r\n  selectedRows.value = selection;\r\n};\r\n\r\nconst clearSelection = () => {\r\n  selectedRows.value = [];\r\n};\r\n\r\nconst handleSizeChange = (size) => {\r\n  pagination.pageSize = size;\r\n  fetchWorkOrders();\r\n};\r\n\r\nconst handleCurrentChange = (page) => {\r\n  pagination.current = page;\r\n  fetchWorkOrders();\r\n};\r\n\r\n// --- 操作函数 ---\r\nconst createWorkOrder = () => {\r\n  router.push({ path: '/work-order/create', query: { defaultType: 'exception' } });\r\n};\r\n\r\nconst viewWorkOrder = (id) => {\r\n  router.push(`/work-order/detail/${id}`);\r\n};\r\n\r\nconst viewOrder = (orderNo) => {\r\n  // 根据 orderNo 的前缀或其他特征判断跳转到哪个订单详情页\r\n  // 例如：if (orderNo.startsWith('ORD')) router.push(...); else if (orderNo.startsWith('INB')) router.push(...);\r\n  console.log(\"Navigate to order detail for:\", orderNo);\r\n  // 假设有一个通用的订单详情页或根据类型跳转\r\n  // router.push(`/order/detail/${orderNo}`);\r\n  ElMessage.info(`跳转到订单 ${orderNo} 的详情页 (功能待实现)`);\r\n};\r\n\r\nconst processWorkOrder = (workOrder) => {\r\n  // 与 CommandWorkOrderList 相同逻辑\r\n  ElMessageBox.confirm(`确认开始处理工单 \"${workOrder.subject}\"?`, '操作确认', {\r\n    confirmButtonText: '确认',\r\n    cancelButtonText: '取消',\r\n    type: 'info'\r\n  }).then(() => {\r\n    const index = workOrderList.value.findIndex(item => item.id === workOrder.id);\r\n    if (index !== -1) {\r\n      workOrderList.value[index].status = 'processing';\r\n      workOrderList.value[index].updatedAt = new Date();\r\n    }\r\n    ElMessage.success('工单状态已更新为：处理中');\r\n    router.push(`/work-order/detail/${workOrder.id}`);\r\n  }).catch(() => {});\r\n};\r\n\r\nconst batchProcess = () => {\r\n  // 与 CommandWorkOrderList 相同逻辑\r\n   if (selectedRows.value.length === 0) {\r\n    ElMessage.warning('请先选择工单');\r\n    return;\r\n  }\r\n  const canProcessIds = selectedRows.value.filter(row => canProcess(row)).map(row => row.id);\r\n  if (canProcessIds.length === 0) {\r\n    ElMessage.warning('所选工单中没有可处理的工单');\r\n    return;\r\n  }\r\n  ElMessageBox.confirm(`确认批量处理 ${canProcessIds.length} 个工单?`, '操作确认', { /* ... */ }).then(() => {\r\n    canProcessIds.forEach(id => {\r\n      const index = workOrderList.value.findIndex(item => item.id === id);\r\n      if (index !== -1) {\r\n        workOrderList.value[index].status = 'processing';\r\n        workOrderList.value[index].updatedAt = new Date();\r\n      }\r\n    });\r\n    ElMessage.success(`已开始处理 ${canProcessIds.length} 个工单`);\r\n    clearSelection();\r\n    fetchWorkOrders();\r\n  }).catch(() => {});\r\n};\r\n\r\n// 获取工单列表数据\r\nconst fetchWorkOrders = async () => {\r\n  loading.value = true;\r\n  try {\r\n    const params = {\r\n      page: pagination.current,\r\n      pageSize: pagination.pageSize,\r\n      search: searchQuery.value,\r\n      type: filters.type, // 固定为 exception\r\n      status: filters.status,\r\n      exceptionType: filters.exceptionType, // 添加异常类型参数\r\n      priority: filters.priority,\r\n      assigneeId: filters.assignee,\r\n      createdAtStart: filters.createdAtRange ? filters.createdAtRange[0] : null,\r\n      createdAtEnd: filters.createdAtRange ? filters.createdAtRange[1] : null,\r\n    };\r\n    console.log(\"Fetching Exception Work Orders with params:\", params);\r\n    // const res = await api.getWorkOrders(params);\r\n    // workOrderList.value = res.data.records;\r\n    // pagination.total = res.data.total;\r\n\r\n    // 模拟API请求延迟和过滤\r\n    setTimeout(() => {\r\n        let filteredData = [...workOrderList.value]; // Start with full mock data for demo\r\n\r\n        // Apply filters (client-side simulation for demo)\r\n        if (params.search) { /* ... search logic ... */ }\r\n        if (params.status) { /* ... status filter ... */ }\r\n        if (params.exceptionType) { // Filter by exception type\r\n             filteredData = filteredData.filter(wo => wo.exceptionType === params.exceptionType);\r\n        }\r\n        if (params.priority) { /* ... priority filter ... */ }\r\n        if (params.assigneeId) { /* ... assignee filter ... */ }\r\n        // createdAtRange filter simulation\r\n        // ...\r\n\r\n        // Apply pagination (simulation)\r\n        const start = (params.page - 1) * params.pageSize;\r\n        const end = start + params.pageSize;\r\n        const paginatedData = filteredData.slice(start, end);\r\n\r\n        workOrderList.value = paginatedData;\r\n        pagination.total = filteredData.length;\r\n        loading.value = false;\r\n    }, 500);\r\n  } catch (error) {\r\n    console.error('Failed to fetch exception work orders:', error);\r\n    ElMessage.error('获取异常工单列表失败');\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\n// 视图管理相关\r\nconst currentView = ref('all');\r\nconst customViews = ref([]);\r\nconst saveViewDialogVisible = ref(false);\r\nconst renameViewDialogVisible = ref(false);\r\nconst contextMenuVisible = ref(false);\r\nconst contextMenuX = ref(0);\r\nconst contextMenuY = ref(0);\r\nconst viewForm = ref({\r\n  name: '',\r\n  columns: []\r\n});\r\n\r\n// 筛选相关\r\nconst filterPanelVisible = ref(false);\r\nconst activeFilters = ref([]);\r\nconst filterLogic = ref('and');\r\n\r\n// 分组相关\r\nconst groupModalVisible = ref(false);\r\nconst groupSettings = ref({\r\n  level1: '',\r\n  level2: '',\r\n  level3: ''\r\n});\r\nconst groupField = ref('');\r\n\r\n// 排序相关\r\nconst sortModalVisible = ref(false);\r\nconst sortSettings = ref([\r\n  { field: '', direction: 'asc' }\r\n]);\r\n\r\n// 字段配置相关\r\nconst columnSettingsVisible = ref(false);\r\nconst columnSettingsList = ref([]);\r\nconst allColumnsSelected = ref(true);\r\n\r\n// 表格列配置\r\nconst tableColumns = ref([\r\n  { prop: 'id', label: '工单号', width: 150, visible: true },\r\n  { prop: 'subject', label: '主题', minWidth: 200, visible: true },\r\n  { prop: 'type', label: '类型', width: 120, visible: true },\r\n  { prop: 'status', label: '状态', width: 100, visible: true },\r\n  { prop: 'priority', label: '优先级', width: 80, visible: true },\r\n  { prop: 'exceptionType', label: '异常类型', width: 120, visible: true },\r\n  { prop: 'orderNo', label: '关联订单', width: 150, visible: true },\r\n  { prop: 'creator', label: '创建人', width: 100, visible: true },\r\n  { prop: 'assignee', label: '当前处理人', width: 100, visible: true },\r\n  { prop: 'createdAt', label: '创建时间', width: 180, visible: true },\r\n  { prop: 'updatedAt', label: '更新时间', width: 180, visible: true },\r\n  { prop: 'operation', label: '操作', width: 150, fixed: 'right', visible: true }\r\n]);\r\n\r\n// 可分组字段\r\nconst groupableFields = ref([\r\n  { prop: 'status', label: '状态' },\r\n  { prop: 'priority', label: '优先级' },\r\n  { prop: 'exceptionType', label: '异常类型' },\r\n  { prop: 'creator', label: '创建人' },\r\n  { prop: 'assignee', label: '处理人' }\r\n]);\r\n\r\n// 可排序字段\r\nconst sortableFields = ref([\r\n  { prop: 'createdAt', label: '创建时间' },\r\n  { prop: 'updatedAt', label: '更新时间' },\r\n  { prop: 'priority', label: '优先级' },\r\n  { prop: 'status', label: '状态' }\r\n]);\r\n\r\n// 计算可见列\r\nconst visibleColumns = computed(() => {\r\n  return tableColumns.value.filter(col => col.visible);\r\n});\r\n\r\n// 获取分组列标签\r\nconst getGroupColumnLabel = (field) => {\r\n  const fieldConfig = groupableFields.value.find(f => f.prop === field);\r\n  return fieldConfig ? fieldConfig.label : field;\r\n};\r\n\r\n// 视图管理方法\r\nconst handleSaveView = () => {\r\n  saveViewDialogVisible.value = true;\r\n};\r\n\r\nconst saveView = () => {\r\n  if (!viewForm.value.name) {\r\n    ElMessage.warning('请输入视图名称');\r\n    return;\r\n  }\r\n  \r\n  const newView = {\r\n    id: Date.now().toString(),\r\n    name: viewForm.value.name,\r\n    columns: viewForm.value.columns,\r\n    filters: activeFilters.value,\r\n    groupSettings: groupSettings.value,\r\n    sortSettings: sortSettings.value\r\n  };\r\n  \r\n  customViews.value.push(newView);\r\n  saveViewDialogVisible.value = false;\r\n  ElMessage.success('视图保存成功');\r\n};\r\n\r\nconst handleRenameView = () => {\r\n  if (!currentView.value) return;\r\n  renameViewDialogVisible.value = true;\r\n};\r\n\r\nconst handleDeleteView = () => {\r\n  if (!currentView.value) return;\r\n  \r\n  ElMessageBox.confirm('确认删除该视图？', '提示', {\r\n    type: 'warning'\r\n  }).then(() => {\r\n    const index = customViews.value.findIndex(v => v.id === currentView.value);\r\n    if (index !== -1) {\r\n      customViews.value.splice(index, 1);\r\n      currentView.value = 'all';\r\n      ElMessage.success('视图删除成功');\r\n    }\r\n  });\r\n};\r\n\r\n// 筛选相关方法\r\nconst showFilterPanel = () => {\r\n  filterPanelVisible.value = true;\r\n};\r\n\r\nconst applyFilters = ({ filters, logic }) => {\r\n  activeFilters.value = filters;\r\n  filterLogic.value = logic;\r\n  fetchWorkOrders();\r\n};\r\n\r\nconst cancelFilters = () => {\r\n  filterPanelVisible.value = false;\r\n};\r\n\r\n// 分组相关方法\r\nconst showGroupModal = () => {\r\n  groupModalVisible.value = true;\r\n};\r\n\r\nconst applyGroupSettings = () => {\r\n  const { level1, level2, level3 } = groupSettings.value;\r\n  const groupFields = [level1, level2, level3].filter(Boolean);\r\n  groupField.value = groupFields[0] || '';\r\n  fetchWorkOrders();\r\n  groupModalVisible.value = false;\r\n};\r\n\r\nconst clearGroupSettings = () => {\r\n  groupSettings.value = {\r\n    level1: '',\r\n    level2: '',\r\n    level3: ''\r\n  };\r\n  groupField.value = '';\r\n  fetchWorkOrders();\r\n};\r\n\r\n// 排序相关方法\r\nconst showSortModal = () => {\r\n  sortModalVisible.value = true;\r\n};\r\n\r\nconst addSortField = () => {\r\n  sortSettings.value.push({ field: '', direction: 'asc' });\r\n};\r\n\r\nconst removeSortField = (index) => {\r\n  sortSettings.value.splice(index, 1);\r\n};\r\n\r\nconst applySortSettings = () => {\r\n  fetchWorkOrders();\r\n  sortModalVisible.value = false;\r\n};\r\n\r\nconst clearSortSettings = () => {\r\n  sortSettings.value = [{ field: '', direction: 'asc' }];\r\n  fetchWorkOrders();\r\n};\r\n\r\n// 字段配置相关方法\r\nconst showColumnSettings = () => {\r\n  columnSettingsVisible.value = true;\r\n};\r\n\r\nconst handleSelectAllColumns = (val) => {\r\n  columnSettingsList.value.forEach(col => {\r\n    col.visible = val;\r\n  });\r\n};\r\n\r\nconst handleDragEnd = () => {\r\n  // 处理拖拽结束后的逻辑\r\n};\r\n\r\nconst applyColumnSettings = () => {\r\n  tableColumns.value = columnSettingsList.value.map(col => ({\r\n    ...col,\r\n    visible: col.visible\r\n  }));\r\n  columnSettingsVisible.value = false;\r\n  ElMessage.success('字段配置已更新');\r\n};\r\n\r\nconst resetColumnSettings = () => {\r\n  initColumnSettings();\r\n  allColumnsSelected.value = true;\r\n};\r\n\r\n// 初始化字段配置列表\r\nconst initColumnSettings = () => {\r\n  columnSettingsList.value = tableColumns.value.map(col => ({\r\n    ...col,\r\n    visible: true\r\n  }));\r\n};\r\n\r\n// 处理右键菜单\r\nconst handleContextMenu = (event) => {\r\n  event.preventDefault();\r\n  contextMenuVisible.value = true;\r\n  contextMenuX.value = event.clientX;\r\n  contextMenuY.value = event.clientY;\r\n};\r\n\r\n// 复制视图\r\nconst handleCopyView = () => {\r\n  if (!currentView.value) return;\r\n  \r\n  const view = customViews.value.find(v => v.id === currentView.value);\r\n  if (view) {\r\n    const newView = {\r\n      id: Date.now().toString(),\r\n      name: `${view.name} (副本)`,\r\n      columns: [...view.columns],\r\n      filters: [...view.filters],\r\n      groupSettings: { ...view.groupSettings },\r\n      sortSettings: [...view.sortSettings]\r\n    };\r\n    \r\n    customViews.value.push(newView);\r\n    contextMenuVisible.value = false;\r\n    ElMessage.success('视图复制成功');\r\n  }\r\n};\r\n\r\n// 在组件挂载时初始化\r\nonMounted(() => {\r\n  initColumnSettings();\r\n  fetchWorkOrders();\r\n});\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* 原有样式保持不变 */\r\n.work-order-list-container {\r\n  padding: 20px;\r\n}\r\n\r\n.page-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.page-title {\r\n  margin: 0;\r\n  font-size: 22px;\r\n  font-weight: bold;\r\n}\r\n\r\n.filter-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.search-bar {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.search-input {\r\n  width: 100%;\r\n  max-width: 500px;\r\n}\r\n\r\n.list-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.table-operations {\r\n  margin-bottom: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.selected-count {\r\n  margin-right: 16px;\r\n  color: #606266;\r\n}\r\n\r\n.subject-cell {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.subject-text {\r\n  margin-right: 8px;\r\n}\r\n\r\n.pagination-container {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n/* 新增样式 */\r\n.view-management {\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16px;\r\n}\r\n\r\n.status-view-group {\r\n  margin-right: 16px;\r\n}\r\n\r\n.group-settings {\r\n  padding: 20px;\r\n}\r\n\r\n.group-level {\r\n  margin-bottom: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.group-level-label {\r\n  width: 100px;\r\n  text-align: right;\r\n  margin-right: 16px;\r\n}\r\n\r\n.sort-settings {\r\n  padding: 20px;\r\n}\r\n\r\n.sort-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 16px;\r\n  gap: 16px;\r\n}\r\n\r\n.sort-actions {\r\n  margin-top: 16px;\r\n  text-align: center;\r\n}\r\n\r\n.column-settings {\r\n  padding: 20px;\r\n}\r\n\r\n.column-settings-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.column-list {\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.column-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 8px;\r\n  border-bottom: 1px solid #EBEEF5;\r\n}\r\n\r\n.column-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.drag-handle {\r\n  cursor: move;\r\n  margin-right: 8px;\r\n  color: #909399;\r\n}\r\n\r\n.context-menu {\r\n  position: fixed;\r\n  background: white;\r\n  border: 1px solid #EBEEF5;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\r\n  z-index: 3000;\r\n}\r\n\r\n.context-menu-item {\r\n  padding: 8px 16px;\r\n  cursor: pointer;\r\n  color: #606266;\r\n}\r\n\r\n.context-menu-item:hover {\r\n  background-color: #F5F7FA;\r\n  color: #409EFF;\r\n}\r\n\r\n/* 分组样式 */\r\n.group-name {\r\n  display: flex;\r\n  align-items: center;\r\n  font-weight: bold;\r\n}\r\n\r\n.group-level-1 {\r\n  color: #409EFF;\r\n  font-size: 14px;\r\n}\r\n\r\n.group-level-2 {\r\n  color: #67C23A;\r\n  font-size: 13px;\r\n}\r\n\r\n.group-level-3 {\r\n  color: #E6A23C;\r\n  font-size: 13px;\r\n}\r\n\r\n.group-title {\r\n  margin-right: 5px;\r\n}\r\n\r\n.group-count {\r\n  color: #909399;\r\n  font-size: 12px;\r\n}\r\n\r\n.data-item {\r\n  background-color: #FAFAFA;\r\n}\r\n</style> ","import script from \"./ExceptionWorkOrderList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ExceptionWorkOrderList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ExceptionWorkOrderList.vue?vue&type=style&index=0&id=0ed3f8d6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0ed3f8d6\"]])\n\nexport default __exports__"],"names":["router","useRouter","users","ref","id","name","loading","searchQuery","filters","reactive","status","type","exceptionType","priority","assignee","createdAtRange","workOrderList","subject","orderNo","creator","createdAt","Date","now","updatedAt","pagination","current","pageSize","total","selectedRows","formatDateTime","date","d","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","getStatusText","statusMap","getStatusType","typeMap","getTypeText","getPriorityText","priorityMap","getPriorityType","canProcess","workOrder","includes","handleSearch","fetchWorkOrders","resetFilters","value","handleSelectionChange","selection","clearSelection","handleSizeChange","size","handleCurrentChange","page","createWorkOrder","push","path","query","defaultType","viewWorkOrder","viewOrder","console","log","ElMessage","info","processWorkOrder","ElMessageBox","confirm","confirmButtonText","cancelButtonText","then","index","findIndex","item","success","catch","batchProcess","length","warning","canProcessIds","filter","row","map","forEach","async","params","search","assigneeId","createdAtStart","createdAtEnd","setTimeout","filteredData","wo","start","end","paginatedData","slice","error","currentView","customViews","saveViewDialogVisible","renameViewDialogVisible","contextMenuVisible","contextMenuX","contextMenuY","viewForm","columns","filterPanelVisible","activeFilters","filterLogic","groupModalVisible","groupSettings","level1","level2","level3","groupField","sortModalVisible","sortSettings","field","direction","columnSettingsVisible","columnSettingsList","allColumnsSelected","tableColumns","prop","label","width","visible","minWidth","fixed","groupableFields","sortableFields","visibleColumns","computed","col","getGroupColumnLabel","fieldConfig","find","f","handleSaveView","saveView","newView","toString","handleRenameView","handleDeleteView","v","splice","showFilterPanel","applyFilters","logic","cancelFilters","showGroupModal","applyGroupSettings","groupFields","Boolean","clearGroupSettings","showSortModal","addSortField","removeSortField","applySortSettings","clearSortSettings","showColumnSettings","handleSelectAllColumns","val","handleDragEnd","applyColumnSettings","resetColumnSettings","initColumnSettings","handleContextMenu","event","preventDefault","clientX","clientY","handleCopyView","view","onMounted","__exports__"],"sourceRoot":""}