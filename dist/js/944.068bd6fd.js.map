{"version":3,"file":"js/944.068bd6fd.js","mappings":"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","sources":["webpack://vue-logistics-system/./src/views/Admin/ContractManagement/ContractList.vue","webpack://vue-logistics-system/./src/views/Admin/ContractManagement/ContractList.vue?a5f1"],"sourcesContent":["<template>\r\n  <div class=\"contract-list-container\">\r\n    <el-card>\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>合同列表</span>\r\n           <el-button type=\"primary\" @click=\"handleCreateContract\">\r\n             <el-icon><Plus /></el-icon> 新增合同\r\n           </el-button>\r\n        </div>\r\n      </template>\r\n\r\n      <!-- 筛选区域 -->\r\n      <el-form :inline=\"true\" :model=\"filterForm\" class=\"filter-form\">\r\n        <el-form-item label=\"合同编号/名称\">\r\n           <el-input v-model=\"filterForm.keyword\" placeholder=\"输入编号或名称关键字\" clearable />\r\n         </el-form-item>\r\n         <el-form-item label=\"供应商\">\r\n            <el-select v-model=\"filterForm.supplierId\" placeholder=\"选择供应商\" clearable filterable>\r\n               <el-option\r\n                 v-for=\"supplier in mockSuppliers\"\r\n                 :key=\"supplier.id\"\r\n                 :label=\"supplier.name\"\r\n                 :value=\"supplier.id\"\r\n               />\r\n            </el-select>\r\n         </el-form-item>\r\n         <el-form-item label=\"合同类型\">\r\n           <el-select v-model=\"filterForm.contractType\" placeholder=\"选择类型\" clearable>\r\n             <el-option v-for=\"item in contractTypeOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\r\n           </el-select>\r\n         </el-form-item>\r\n         <el-form-item label=\"合同状态\">\r\n           <el-select v-model=\"filterForm.status\" placeholder=\"选择状态\" clearable>\r\n             <el-option v-for=\"item in statusOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\r\n           </el-select>\r\n         </el-form-item>\r\n         <el-form-item label=\"有效期\">\r\n           <el-date-picker\r\n              v-model=\"filterForm.validityRange\"\r\n              type=\"daterange\"\r\n              range-separator=\"至\"\r\n              start-placeholder=\"生效开始\"\r\n              end-placeholder=\"到期结束\"\r\n              value-format=\"YYYY-MM-DD\"\r\n            />\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleSearch\">查询</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <!-- 合同列表 -->\r\n      <el-table :data=\"filteredContractList\" style=\"width: 100%\" border>\r\n         <el-table-column prop=\"contractNumber\" label=\"合同编号\" width=\"160\" fixed=\"left\" sortable />\r\n         <el-table-column prop=\"contractName\" label=\"合同名称\" min-width=\"220\" show-overflow-tooltip />\r\n         <el-table-column prop=\"supplierName\" label=\"供应商\" width=\"200\" show-overflow-tooltip />\r\n         <el-table-column prop=\"contractType\" label=\"合同类型\" width=\"130\">\r\n            <template #default=\"scope\">{{ formatContractType(scope.row.contractType) }}</template>\r\n         </el-table-column>\r\n         <el-table-column prop=\"amount\" label=\"合同金额 (USD)\" width=\"150\" align=\"right\">\r\n             <template #default=\"scope\">\r\n                {{ scope.row.amount ? scope.row.amount.toFixed(2) : '-' }}\r\n             </template>\r\n         </el-table-column>\r\n         <el-table-column prop=\"effectiveDate\" label=\"生效日期\" width=\"120\" sortable />\r\n         <el-table-column prop=\"expiryDate\" label=\"到期日期\" width=\"120\" sortable />\r\n         <el-table-column prop=\"status\" label=\"状态\" width=\"120\" align=\"center\">\r\n            <template #default=\"scope\">\r\n               <el-tag :type=\"getStatusTagType(scope.row.status)\">\r\n                 {{ formatStatus(scope.row.status) }}\r\n               </el-tag>\r\n            </template>\r\n         </el-table-column>\r\n          <el-table-column prop=\"creator\" label=\"创建人\" width=\"100\" />\r\n          <el-table-column prop=\"createdAt\" label=\"创建时间\" width=\"160\" />\r\n         <el-table-column label=\"附件数\" width=\"80\" align=\"center\">\r\n             <template #default=\"scope\">\r\n                 {{ scope.row.attachments?.length || 0 }}\r\n             </template>\r\n         </el-table-column>\r\n        <el-table-column label=\"操作\" fixed=\"right\" width=\"280\">\r\n          <template #default=\"scope\">\r\n             <el-button text type=\"primary\" size=\"small\" @click=\"handleViewDetails(scope.row)\">详情</el-button>\r\n              <el-button text type=\"warning\" size=\"small\" @click=\"handleEdit(scope.row)\" v-if=\"canEdit(scope.row)\">编辑</el-button>\r\n             <el-button text type=\"success\" size=\"small\" @click=\"handleSubmitReview(scope.row)\" v-if=\"scope.row.status === 'draft'\">提交审核</el-button>\r\n             <el-dropdown size=\"small\" style=\"margin-left: 8px;\">\r\n                <el-button text type=\"info\" size=\"small\">更多<el-icon class=\"el-icon--right\"><arrow-down /></el-icon></el-button>\r\n                <template #dropdown>\r\n                    <el-dropdown-menu>\r\n                       <el-dropdown-item @click=\"handleUploadAttachment(scope.row)\" :icon=\"Upload\">上传附件</el-dropdown-item>\r\n                       <el-dropdown-item @click=\"handleDownloadAttachment(scope.row)\" :icon=\"Download\" :disabled=\"!scope.row.attachments || scope.row.attachments.length === 0\">下载附件</el-dropdown-item>\r\n                       <el-dropdown-item @click=\"handleViewHistory(scope.row)\" :icon=\"Tickets\">查看历史</el-dropdown-item>\r\n                       <el-dropdown-item @click=\"handleTerminate(scope.row)\" v-if=\"canTerminate(scope.row)\" divided :icon=\"CircleCloseFilled\">终止合同</el-dropdown-item>\r\n                       <el-dropdown-item @click=\"handleRenew(scope.row)\" v-if=\"canRenew(scope.row)\" :icon=\"RefreshRight\">发起续签</el-dropdown-item>\r\n                       <!-- 审批操作可以放在详情里，或者根据权限显示 -->\r\n                       <el-dropdown-item @click=\"handleApprove(scope.row)\" v-if=\"scope.row.status === 'pending_review'\" divided :icon=\"CircleCheck\">审核合同</el-dropdown-item> \r\n                    </el-dropdown-menu>\r\n                </template>\r\n            </el-dropdown>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页 -->\r\n       <el-pagination\r\n          style=\"margin-top: 20px; justify-content: flex-end;\"\r\n          background\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"totalContracts\"\r\n          :page-sizes=\"[10, 20, 50, 100]\"\r\n          :page-size=\"pagination.pageSize\"\r\n          :current-page=\"pagination.currentPage\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n        />\r\n\r\n      <!-- 新增/编辑/详情 弹窗 (占位) -->\r\n       <el-dialog\r\n         v-model=\"dialogVisible\"\r\n         :title=\"dialogTitle\"\r\n         width=\"70%\"\r\n         top=\"5vh\"\r\n         :close-on-click-modal=\"false\"\r\n         @close=\"resetForm\"\r\n       >\r\n         <el-form ref=\"contractFormRef\" :model=\"contractForm\" :rules=\"formRules\" label-width=\"100px\">\r\n            <el-row :gutter=\"20\">\r\n                <el-col :span=\"12\">\r\n                   <el-form-item label=\"合同名称\" prop=\"contractName\">\r\n                     <el-input v-model=\"contractForm.contractName\" placeholder=\"输入合同名称\" :disabled=\"!isEditing\"/>\r\n                   </el-form-item>\r\n                </el-col>\r\n                <el-col :span=\"12\">\r\n                   <el-form-item label=\"合同编号\" prop=\"contractNumber\">\r\n                     <el-input v-model=\"contractForm.contractNumber\" placeholder=\"系统自动生成或手动输入\" :disabled=\"!isEditing\"/>\r\n                   </el-form-item>\r\n                </el-col>\r\n            </el-row>\r\n             <el-row :gutter=\"20\">\r\n                <el-col :span=\"12\">\r\n                   <el-form-item label=\"供应商\" prop=\"supplierId\">\r\n                      <el-select v-model=\"contractForm.supplierId\" placeholder=\"选择供应商\" filterable style=\"width: 100%;\" :disabled=\"!isEditing\">\r\n                           <el-option\r\n                             v-for=\"supplier in mockSuppliers\"\r\n                             :key=\"supplier.id\"\r\n                             :label=\"supplier.name\"\r\n                             :value=\"supplier.id\"\r\n                           />\r\n                        </el-select>\r\n                   </el-form-item>\r\n                </el-col>\r\n                <el-col :span=\"12\">\r\n                   <el-form-item label=\"合同类型\" prop=\"contractType\">\r\n                        <el-select v-model=\"contractForm.contractType\" placeholder=\"选择类型\" style=\"width: 100%;\" :disabled=\"!isEditing\">\r\n                         <el-option v-for=\"item in contractTypeOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\r\n                       </el-select>\r\n                   </el-form-item>\r\n                </el-col>\r\n            </el-row>\r\n             <el-row :gutter=\"20\">\r\n                <el-col :span=\"12\">\r\n                   <el-form-item label=\"生效日期\" prop=\"effectiveDate\">\r\n                       <el-date-picker v-model=\"contractForm.effectiveDate\" type=\"date\" placeholder=\"选择日期\" style=\"width: 100%;\" value-format=\"YYYY-MM-DD\" :disabled=\"!isEditing\"/>\r\n                   </el-form-item>\r\n                </el-col>\r\n                <el-col :span=\"12\">\r\n                   <el-form-item label=\"到期日期\" prop=\"expiryDate\">\r\n                        <el-date-picker v-model=\"contractForm.expiryDate\" type=\"date\" placeholder=\"选择日期\" style=\"width: 100%;\" value-format=\"YYYY-MM-DD\" :disabled=\"!isEditing\"/>\r\n                   </el-form-item>\r\n                </el-col>\r\n            </el-row>\r\n             <el-form-item label=\"合同金额 (USD)\">\r\n                 <el-input-number v-model=\"contractForm.amount\" :precision=\"2\" :step=\"1000\" placeholder=\"可选\" style=\"width: 250px;\" :disabled=\"!isEditing\"/>\r\n             </el-form-item>\r\n             <el-form-item label=\"合同内容/条款\">\r\n                 <el-input v-model=\"contractForm.content\" type=\"textarea\" :rows=\"5\" placeholder=\"输入合同主要内容或条款摘要\" :disabled=\"!isEditing\"/>\r\n             </el-form-item>\r\n             \r\n             <!-- 附件列表 (查看详情时显示) -->\r\n              <el-form-item label=\"附件列表\" v-if=\"!isEditing\">\r\n                <div v-if=\"contractForm.attachments && contractForm.attachments.length > 0\">\r\n                    <div v-for=\"(file, index) in contractForm.attachments\" :key=\"index\" class=\"attachment-item\">\r\n                       <el-icon><Document /></el-icon> \r\n                       <span style=\"margin-left: 5px;\">{{ file.name }} ({{ (file.size / 1024).toFixed(1) }} KB)</span>\r\n                       <el-button text type=\"primary\" size=\"small\" @click=\"downloadSingleAttachment(file)\" style=\"margin-left: 15px;\">下载</el-button>\r\n                       <el-button text type=\"danger\" size=\"small\" @click=\"removeAttachment(index)\">删除</el-button>\r\n                    </div>\r\n                </div>\r\n                <el-empty v-else description=\"暂无附件\" :image-size=\"50\"/>\r\n             </el-form-item>\r\n\r\n              <!-- 状态历史 (查看详情时显示) -->\r\n             <el-form-item label=\"状态历史\" v-if=\"!isEditing && contractForm.statusHistory && contractForm.statusHistory.length > 0\">\r\n                <el-timeline style=\"margin-top: 10px;\">\r\n                    <el-timeline-item\r\n                      v-for=\"(item, index) in contractForm.statusHistory\"\r\n                      :key=\"index\"\r\n                      :timestamp=\"item.timestamp\"\r\n                      :type=\"item.type || 'primary'\"\r\n                     >\r\n                      {{ item.operator }} {{ item.action }} {{ item.status ? `(状态变为: ${formatStatus(item.status)})` : '' }} {{ item.comment ? `- ${item.comment}` : '' }}\r\n                    </el-timeline-item>\r\n                </el-timeline>\r\n             </el-form-item>\r\n\r\n              <!-- 上传组件 (编辑/新增时) -->\r\n             <el-form-item label=\"上传附件\" v-if=\"isEditing\">\r\n                <el-upload\r\n                   v-model:file-list=\"contractForm.uploadFiles\"\r\n                   action=\"#\" \r\n                   :auto-upload=\"false\"\r\n                   multiple\r\n                   :on-change=\"handleFileChange\"\r\n                   :on-remove=\"handleFileRemove\"\r\n                 >\r\n                   <el-button type=\"primary\">选择文件</el-button>\r\n                   <template #tip>\r\n                     <div class=\"el-upload__tip\">\r\n                        可以将合同扫描件等文件上传\r\n                     </div>\r\n                   </template>\r\n                 </el-upload>\r\n             </el-form-item>\r\n         </el-form>\r\n\r\n         <template #footer>\r\n           <span class=\"dialog-footer\">\r\n             <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n             <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"submitting\" v-if=\"isEditing\">确认</el-button>\r\n           </span>\r\n         </template>\r\n       </el-dialog>\r\n\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed, onMounted, nextTick } from 'vue';\r\nimport { ElMessage, ElMessageBox } from 'element-plus';\r\nimport { Plus, Upload, Download, Tickets, CircleCloseFilled, RefreshRight, ArrowDown, Document, CircleCheck } from '@element-plus/icons-vue';\r\n\r\n// --- 模拟数据 ---\r\nconst mockSuppliers = ref([\r\n  { id: 'supplier_1', name: '测试供应商A - 专做提框服务' },\r\n  { id: 'supplier_2', name: '测试供应商B - FBA派送专家' },\r\n  { id: 'supplier_3', name: '测试供应商C - 全能型选手' },\r\n]);\r\n\r\nconst allContracts = ref([]);\r\n\r\nconst contractTypeOptions = [\r\n    { value: 'framework', label: '年度框架协议' },\r\n    { value: 'transport', label: '单次运输合同' },\r\n    { value: 'warehouse', label: '仓储服务合同' },\r\n    { value: 'spot_quote', label: '临时报价协议' },\r\n    { value: 'other', label: '其他' },\r\n];\r\n\r\nconst statusOptions = [\r\n  { value: 'draft', label: '草稿', tag: 'info' },\r\n  { value: 'pending_review', label: '待审核', tag: 'warning' },\r\n  { value: 'active', label: '生效中', tag: 'success' },\r\n  { value: 'expired', label: '已到期', tag: 'default' },\r\n  { value: 'terminated', label: '已终止', tag: 'danger' },\r\n  { value: 'rejected', label: '已驳回', tag: 'danger' },\r\n];\r\n\r\nconst generateMockContracts = (count = 40) => {\r\n  const names = ['年度运输框架协议', '旺季仓储服务合同', '专线运输协议', '临时加车协议'];\r\n  const creators = ['张三', '李四', '王五'];\r\n  const mockData = [];\r\n  const now = new Date();\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    const supplier = mockSuppliers.value[Math.floor(Math.random() * mockSuppliers.value.length)];\r\n    const contractType = contractTypeOptions[Math.floor(Math.random() * contractTypeOptions.length)].value;\r\n    const status = statusOptions[Math.floor(Math.random() * statusOptions.length)].value;\r\n    const createdAt = new Date(now.getTime() - Math.floor(Math.random() * 180 * 24 * 60 * 60 * 1000)); // 半年内\r\n    let effectiveDate, expiryDate;\r\n    if (contractType === 'framework') {\r\n        effectiveDate = new Date(createdAt.getFullYear(), createdAt.getMonth() + 1, 1); // 次月1号生效\r\n        expiryDate = new Date(effectiveDate.getFullYear() + 1, effectiveDate.getMonth(), effectiveDate.getDate() -1); // 有效期一年\r\n    } else {\r\n        effectiveDate = new Date(createdAt.getTime() + Math.floor(Math.random() * 7 * 24 * 60 * 60 * 1000));\r\n        expiryDate = new Date(effectiveDate.getTime() + (Math.random() * 60 + 30) * 24 * 60 * 60 * 1000); // 30-90天有效期\r\n    }\r\n\r\n    // 模拟附件\r\n    let attachments = [];\r\n    if (Math.random() > 0.3) {\r\n        const fileCount = Math.floor(Math.random() * 3) + 1;\r\n        for(let j=0; j<fileCount; j++) {\r\n            attachments.push({ \r\n                name: `合同附件_${i}_${j+1}.pdf`, \r\n                url: `/path/to/mock/file_${i}_${j}.pdf`, // 模拟 URL\r\n                size: Math.floor(Math.random() * 2048 + 512) * 1024 // 512KB - 2.5MB\r\n            });\r\n        }\r\n    }\r\n    \r\n    // 模拟状态历史\r\n     let statusHistory = [\r\n         { timestamp: createdAt.toLocaleString(), operator: creators[Math.floor(Math.random()*creators.length)], action: '创建合同', status: 'draft', type:'info' },\r\n     ];\r\n     if (status !== 'draft') {\r\n         statusHistory.push({ timestamp: new Date(createdAt.getTime() + 1*60*60*1000).toLocaleString(), operator: '系统', action: '提交审核', status: 'pending_review', type: 'primary' });\r\n     }\r\n     if (status === 'active' || status === 'expired' || status === 'terminated') {\r\n         statusHistory.push({ timestamp: new Date(createdAt.getTime() + 1*24*60*60*1000).toLocaleString(), operator: '审批经理', action: '审核通过', status: 'active', type: 'success' });\r\n     }\r\n      if (status === 'rejected') {\r\n         statusHistory.push({ timestamp: new Date(createdAt.getTime() + 1*24*60*60*1000).toLocaleString(), operator: '审批经理', action: '审核驳回', status: 'rejected', comment: '条款不清', type: 'danger' });\r\n     }\r\n      if (status === 'terminated') {\r\n          statusHistory.push({ timestamp: new Date(expiryDate.getTime() - 10*24*60*60*1000).toLocaleString(), operator: '法务部', action: '手动终止', status: 'terminated', comment: '协商一致', type: 'danger' });\r\n      }\r\n      if (status === 'expired') {\r\n            // 可能没有额外记录，或者有一个系统自动标记过期的记录\r\n      }\r\n\r\n    // 修正状态：如果有效期已过，则状态应为 expired (除非已终止)\r\n     let finalStatus = status;\r\n     if (status !== 'terminated' && new Date(expiryDate) < now) {\r\n         finalStatus = 'expired';\r\n     }\r\n\r\n    mockData.push({\r\n      id: `CON-${String(createdAt.getFullYear())}${String(i + 1000).slice(1)}`,\r\n      contractNumber: `CON-${String(createdAt.getFullYear())}${String(i + 1000).slice(1)}`,\r\n      contractName: `${supplier.name} ${names[Math.floor(Math.random() * names.length)]} ${createdAt.getFullYear()}`,\r\n      supplierId: supplier.id,\r\n      supplierName: supplier.name,\r\n      contractType: contractType,\r\n      amount: contractType === 'framework' ? null : parseFloat((Math.random() * 50000 + 5000).toFixed(2)), // 框架协议可能无固定金额\r\n      effectiveDate: effectiveDate.toISOString().split('T')[0],\r\n      expiryDate: expiryDate.toISOString().split('T')[0],\r\n      status: finalStatus,\r\n      content: `这是合同 ${i+1} 的主要内容摘要...`, // 简化\r\n      creator: creators[Math.floor(Math.random() * creators.length)],\r\n      createdAt: createdAt.toLocaleString(),\r\n      attachments: attachments,\r\n      statusHistory: statusHistory.sort((a,b) => new Date(a.timestamp) - new Date(b.timestamp)), // 按时间排序\r\n      uploadFiles: [] // 用于 el-upload\r\n    });\r\n  }\r\n  return mockData;\r\n};\r\n\r\n// --- 筛选与分页 ---\r\nconst filterForm = reactive({\r\n  keyword: '',\r\n  supplierId: '',\r\n  contractType: '',\r\n  status: '',\r\n  validityRange: [],\r\n});\r\n\r\nconst pagination = reactive({\r\n  currentPage: 1,\r\n  pageSize: 10,\r\n});\r\n\r\nconst totalContracts = computed(() => filteredContractsData.value.length);\r\n\r\n// 过滤逻辑\r\nconst filteredContractsData = computed(() => {\r\n  return allContracts.value.filter(contract => {\r\n    const keywordMatch = filterForm.keyword ? (contract.contractNumber.includes(filterForm.keyword) || contract.contractName.includes(filterForm.keyword)) : true;\r\n    const supplierMatch = filterForm.supplierId ? contract.supplierId === filterForm.supplierId : true;\r\n    const typeMatch = filterForm.contractType ? contract.contractType === filterForm.contractType : true;\r\n    const statusMatch = filterForm.status ? contract.status === filterForm.status : true;\r\n    const dateMatch = filterForm.validityRange && filterForm.validityRange.length === 2\r\n      ? (contract.effectiveDate <= filterForm.validityRange[1] && contract.expiryDate >= filterForm.validityRange[0]) // 时间范围有交集\r\n      : true;\r\n    return keywordMatch && supplierMatch && typeMatch && statusMatch && dateMatch;\r\n  });\r\n});\r\n\r\n// 分页逻辑\r\nconst filteredContractList = computed(() => {\r\n  const start = (pagination.currentPage - 1) * pagination.pageSize;\r\n  const end = start + pagination.pageSize;\r\n   // 默认按创建时间降序\r\n   return filteredContractsData.value.slice(start, end).sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n});\r\n\r\n// --- 弹窗与表单 ---\r\nconst dialogVisible = ref(false);\r\nconst dialogTitle = ref('');\r\nconst isEditing = ref(false); // true: 新增/编辑模式, false: 查看详情模式\r\nconst contractFormRef = ref(null);\r\nconst submitting = ref(false);\r\n\r\nconst initialFormState = {\r\n  id: null,\r\n  contractNumber: '',\r\n  contractName: '',\r\n  supplierId: '',\r\n  contractType: '',\r\n  amount: null,\r\n  effectiveDate: '',\r\n  expiryDate: '',\r\n  content: '',\r\n  status: 'draft',\r\n  attachments: [],\r\n  statusHistory: [],\r\n  uploadFiles: [], // 用于 el-upload 的 file list\r\n};\r\nconst contractForm = reactive({ ...initialFormState });\r\n\r\n// 表单验证规则 (简化)\r\nconst formRules = reactive({\r\n  contractName: [{ required: true, message: '请输入合同名称', trigger: 'blur' }],\r\n  supplierId: [{ required: true, message: '请选择供应商', trigger: 'change' }],\r\n  contractType: [{ required: true, message: '请选择合同类型', trigger: 'change' }],\r\n  effectiveDate: [{ required: true, message: '请选择生效日期', trigger: 'change' }],\r\n  expiryDate: [{ required: true, message: '请选择到期日期', trigger: 'change' }], // 可加校验：到期日期 > 生效日期\r\n});\r\n\r\n// --- 方法 ---\r\n// 格式化\r\nconst formatContractType = (type) => contractTypeOptions.find(opt => opt.value === type)?.label || type;\r\nconst formatStatus = (status) => statusOptions.find(opt => opt.value === status)?.label || status;\r\nconst getStatusTagType = (status) => statusOptions.find(opt => opt.value === status)?.tag || 'info';\r\n\r\n// 搜索\r\nconst handleSearch = () => {\r\n  pagination.currentPage = 1;\r\n};\r\n\r\n// 分页\r\nconst handleSizeChange = (newSize) => {\r\n  pagination.pageSize = newSize;\r\n  pagination.currentPage = 1;\r\n};\r\nconst handleCurrentChange = (newPage) => {\r\n  pagination.currentPage = newPage;\r\n};\r\n\r\n// 重置表单\r\nconst resetForm = () => {\r\n  Object.assign(contractForm, initialFormState);\r\n  contractForm.uploadFiles = []; // 确保 uploadFiles 也被清空\r\n  nextTick(() => {\r\n    contractFormRef.value?.clearValidate();\r\n  });\r\n};\r\n\r\n// 判断是否可编辑\r\nconst canEdit = (row) => row.status === 'draft' || row.status === 'rejected';\r\n// 判断是否可终止\r\nconst canTerminate = (row) => row.status === 'active';\r\n// 判断是否可续签 (简单逻辑：快到期或已到期)\r\nconst canRenew = (row) => {\r\n    if (row.status === 'terminated') return false;\r\n    const expiry = new Date(row.expiryDate);\r\n    const now = new Date();\r\n    const oneMonthLater = new Date(now.setDate(now.getDate() + 30));\r\n    return expiry <= oneMonthLater;\r\n};\r\n\r\n// 新增合同\r\nconst handleCreateContract = () => {\r\n  resetForm();\r\n  isEditing.value = true;\r\n  dialogTitle.value = '新增合同';\r\n  dialogVisible.value = true;\r\n};\r\n\r\n// 编辑合同\r\nconst handleEdit = (row) => {\r\n  resetForm();\r\n  isEditing.value = true;\r\n  dialogTitle.value = '编辑合同';\r\n  // 深拷贝数据到表单\r\n  Object.assign(contractForm, JSON.parse(JSON.stringify(row)));\r\n   // 将已有的附件模拟成 el-upload 需要的格式\r\n   contractForm.uploadFiles = contractForm.attachments.map(file => ({ \r\n      name: file.name, \r\n      // url: file.url, // 如果需要预览，可能需要 URL\r\n      status: 'success', // 标记为已上传成功状态\r\n      uid: Date.now() + Math.random(), // 给个唯一ID\r\n      raw: { type: 'application/pdf' } // 模拟文件类型\r\n   }));\r\n  dialogVisible.value = true;\r\n};\r\n\r\n// 查看详情\r\nconst handleViewDetails = (row) => {\r\n  resetForm();\r\n  isEditing.value = false;\r\n  dialogTitle.value = '合同详情';\r\n  Object.assign(contractForm, JSON.parse(JSON.stringify(row)));\r\n  dialogVisible.value = true;\r\n};\r\n\r\n// 提交审核 (模拟)\r\nconst handleSubmitReview = (row) => {\r\n   ElMessageBox.confirm(`确定要将合同 \"${row.contractName}\" 提交审核吗?`, '确认提交', { type: 'warning' })\r\n     .then(() => {\r\n       console.log('提交审核:', row.id);\r\n       const index = allContracts.value.findIndex(c => c.id === row.id);\r\n       if (index !== -1 && allContracts.value[index].status === 'draft') {\r\n          allContracts.value[index].status = 'pending_review';\r\n          // 添加状态历史\r\n           if (!allContracts.value[index].statusHistory) allContracts.value[index].statusHistory = [];\r\n           allContracts.value[index].statusHistory.push({timestamp: new Date().toLocaleString(), operator: '当前用户', action: '提交审核', status: 'pending_review', type:'primary' });\r\n           \r\n         ElMessage.success('提交审核成功');\r\n       } else {\r\n           ElMessage.error('操作失败或状态不允许提交');\r\n       }\r\n     })\r\n     .catch(() => {});\r\n};\r\n\r\n// 审核合同 (占位 - 打开详情并显示审核按钮/区域)\r\nconst handleApprove = (row) => {\r\n    handleViewDetails(row); // 先打开详情\r\n    ElMessage.info('显示审核操作区域 (待实现)');\r\n    // 可以在详情弹窗中增加审核通过/驳回的按钮和意见输入框\r\n};\r\n\r\n// 上传附件 (占位)\r\nconst handleUploadAttachment = (row) => {\r\n    console.log('为合同上传附件:', row.id);\r\n    ElMessage.info(`触发 ${row.contractNumber} 的附件上传操作 (待实现)`);\r\n    // 实际应用会打开文件选择框，或集成到编辑弹窗的上传组件\r\n};\r\n\r\n// 下载附件 (模拟全部下载)\r\nconst handleDownloadAttachment = (row) => {\r\n    if (!row.attachments || row.attachments.length === 0) {\r\n        ElMessage.warning('该合同没有附件可供下载');\r\n        return;\r\n    }\r\n    console.log('下载合同附件:', row.id, row.attachments);\r\n    ElMessage.success(`开始下载 ${row.attachments.length} 个附件 (模拟)`);\r\n    // 实际应用中，可能需要逐个下载，或打包下载\r\n};\r\n\r\n// 下载单个附件 (模拟)\r\nconst downloadSingleAttachment = (file) => {\r\n    console.log('下载单个附件:', file);\r\n    ElMessage.success(`开始下载文件 ${file.name} (模拟)`);\r\n    // window.open(file.url, '_blank'); // 如果 URL 可用\r\n};\r\n\r\n// 移除附件 (模拟，仅在编辑状态下)\r\nconst removeAttachment = (index) => {\r\n    if (contractForm.attachments) {\r\n        contractForm.attachments.splice(index, 1);\r\n        // 如果 uploadFiles 也存在对应文件，也需要移除\r\n        // 此处简化，假设只操作 attachments\r\n        ElMessage.success('附件已移除 (未保存)');\r\n    }\r\n};\r\n\r\n// 查看历史 (占位)\r\nconst handleViewHistory = (row) => {\r\n    console.log('查看合同历史:', row.id);\r\n    // 可以复用详情弹窗显示历史记录\r\n    handleViewDetails(row);\r\n    ElMessage.info('已在详情中展示状态历史 (附件变更历史待实现)');\r\n};\r\n\r\n// 终止合同 (模拟)\r\nconst handleTerminate = (row) => {\r\n     ElMessageBox.prompt('请输入终止原因 (可选)', '确认终止合同', {\r\n        confirmButtonText: '确认终止',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n      })\r\n      .then(({ value }) => {\r\n         console.log('终止合同:', row.id, '原因:', value);\r\n         const index = allContracts.value.findIndex(c => c.id === row.id);\r\n         if (index !== -1 && allContracts.value[index].status === 'active') {\r\n            allContracts.value[index].status = 'terminated';\r\n             // 添加状态历史\r\n             if (!allContracts.value[index].statusHistory) allContracts.value[index].statusHistory = [];\r\n             allContracts.value[index].statusHistory.push({timestamp: new Date().toLocaleString(), operator: '当前用户', action: '终止合同', status: 'terminated', comment: value, type:'danger' });\r\n            ElMessage.success('合同已终止');\r\n         } else {\r\n              ElMessage.error('操作失败或合同状态不符');\r\n         }\r\n       })\r\n      .catch(() => {});\r\n};\r\n\r\n// 发起续签 (占位)\r\nconst handleRenew = (row) => {\r\n    console.log('发起合同续签:', row.id);\r\n    ElMessage.info(`基于合同 ${row.contractNumber} 发起续签流程 (待实现)`);\r\n    // 实际可能跳转到新增合同页面，并预填部分信息\r\n};\r\n\r\n// 处理文件列表变化 (el-upload)\r\nconst handleFileChange = (uploadFile, uploadFiles) => {\r\n    console.log('File changed:', uploadFile, uploadFiles);\r\n    contractForm.uploadFiles = uploadFiles; \r\n};\r\n\r\n// 处理文件移除 (el-upload)\r\nconst handleFileRemove = (uploadFile, uploadFiles) => {\r\n    console.log('File removed:', uploadFile, uploadFiles);\r\n    contractForm.uploadFiles = uploadFiles;\r\n};\r\n\r\n\r\n// 提交表单 (新增/编辑)\r\nconst handleSubmit = async () => {\r\n  if (!contractFormRef.value) return;\r\n  try {\r\n    await contractFormRef.value.validate();\r\n    submitting.value = true;\r\n    \r\n    // 模拟处理上传的文件 (实际需要上传到服务器)\r\n    const uploadedAttachments = contractForm.uploadFiles\r\n      .filter(f => f.status === 'ready' || f.status === 'success') // 假设 status 是 success 或刚选的 ready\r\n      .map(f => ({\r\n          name: f.name,\r\n          url: `/mock/path/${f.uid}/${f.name}`, // 模拟服务器返回的 URL\r\n          size: f.size\r\n      }));\r\n      \r\n    // 合并旧附件和新上传的附件 (如果是在编辑状态下)\r\n     let finalAttachments = [];\r\n     if (contractForm.id) { // 编辑状态\r\n        // 需要区分哪些是旧的，哪些是新增的，哪些是删除了的\r\n        // 简化处理：直接使用 uploadFiles 里的文件作为最终附件列表\r\n        finalAttachments = contractForm.uploadFiles.map(f => ({ name: f.name, url: f.url || `/mock/path/${f.uid}/${f.name}`, size: f.size || Math.random()*1000*1024 }));\r\n     } else {\r\n         finalAttachments = uploadedAttachments;\r\n     }\r\n\r\n    const saveData = { ...contractForm, attachments: finalAttachments };\r\n    delete saveData.uploadFiles; // 不需要保存 uploadFiles 自身\r\n\r\n    if (saveData.id) { // 编辑\r\n      console.log('更新合同:', saveData);\r\n      const index = allContracts.value.findIndex(c => c.id === saveData.id);\r\n      if (index !== -1) {\r\n          // 更新列表数据\r\n         Object.assign(allContracts.value[index], saveData);\r\n          // 添加编辑历史 (可选)\r\n          if (!allContracts.value[index].statusHistory) allContracts.value[index].statusHistory = [];\r\n          allContracts.value[index].statusHistory.push({timestamp: new Date().toLocaleString(), operator: '当前用户', action: '编辑合同内容', type:'info' });\r\n         ElMessage.success('合同更新成功');\r\n      } else {\r\n          ElMessage.error('更新失败: 未找到合同');\r\n      }\r\n    } else { // 新增\r\n      const newId = `CON-${String(new Date().getFullYear())}${String(Date.now()).slice(-4)}`;\r\n      const newContract = {\r\n          ...saveData,\r\n          id: newId,\r\n          contractNumber: saveData.contractNumber || newId,\r\n          status: 'draft', // 新增默认是草稿\r\n          creator: '当前用户',\r\n          createdAt: new Date().toLocaleString(),\r\n          statusHistory: [\r\n              { timestamp: new Date().toLocaleString(), operator: '当前用户', action: '创建合同', status: 'draft', type:'info' }\r\n          ]\r\n      };\r\n      console.log('新增合同:', newContract);\r\n      allContracts.value.unshift(newContract);\r\n      ElMessage.success('合同新增成功');\r\n    }\r\n    dialogVisible.value = false;\r\n  } catch (error) {\r\n    console.log('表单验证失败:', error);\r\n    ElMessage.error('请检查表单填写是否正确');\r\n  } finally {\r\n    submitting.value = false;\r\n  }\r\n};\r\n\r\n// --- 生命周期 ---\r\nonMounted(() => {\r\n  allContracts.value = generateMockContracts();\r\n});\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.contract-list-container {\r\n  padding: 20px;\r\n}\r\n.attachment-item {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 5px;\r\n    font-size: 13px;\r\n    color: #606266;\r\n}\r\n/* 其他样式与之前类似 */\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n.filter-form .el-form-item {\r\n  margin-bottom: 10px;\r\n}\r\n.el-table {\r\n  margin-top: 15px;\r\n}\r\n.dialog-footer {\r\n    text-align: right;\r\n}\r\n.dialog-footer button:first-child {\r\n  margin-right: 10px;\r\n}\r\n.el-timeline {\r\n    padding-left: 10px; \r\n}\r\n</style> ","import script from \"./ContractList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ContractList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ContractList.vue?vue&type=style&index=0&id=3be2f37d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3be2f37d\"]])\n\nexport default __exports__"],"names":["mockSuppliers","ref","id","name","allContracts","contractTypeOptions","value","label","statusOptions","tag","generateMockContracts","count","names","creators","mockData","now","Date","i","supplier","Math","floor","random","length","contractType","status","createdAt","getTime","effectiveDate","expiryDate","getFullYear","getMonth","getDate","attachments","fileCount","j","push","url","size","statusHistory","timestamp","toLocaleString","operator","action","type","comment","finalStatus","String","slice","contractNumber","contractName","supplierId","supplierName","amount","parseFloat","toFixed","toISOString","split","content","creator","sort","a","b","uploadFiles","filterForm","reactive","keyword","validityRange","pagination","currentPage","pageSize","totalContracts","computed","filteredContractsData","filter","contract","keywordMatch","includes","supplierMatch","typeMatch","statusMatch","dateMatch","filteredContractList","start","end","dialogVisible","dialogTitle","isEditing","contractFormRef","submitting","initialFormState","contractForm","formRules","required","message","trigger","formatContractType","find","opt","formatStatus","getStatusTagType","handleSearch","handleSizeChange","newSize","handleCurrentChange","newPage","resetForm","Object","assign","nextTick","clearValidate","canEdit","row","canTerminate","canRenew","expiry","oneMonthLater","setDate","handleCreateContract","handleEdit","JSON","parse","stringify","map","file","uid","raw","handleViewDetails","handleSubmitReview","ElMessageBox","confirm","then","console","log","index","findIndex","c","ElMessage","success","error","catch","handleApprove","info","handleUploadAttachment","handleDownloadAttachment","warning","downloadSingleAttachment","removeAttachment","splice","handleViewHistory","handleTerminate","prompt","confirmButtonText","cancelButtonText","handleRenew","handleFileChange","uploadFile","handleFileRemove","handleSubmit","async","validate","uploadedAttachments","f","finalAttachments","saveData","newId","newContract","unshift","onMounted","__exports__"],"sourceRoot":""}