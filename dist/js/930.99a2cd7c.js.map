{"version":3,"file":"js/930.99a2cd7c.js","mappings":"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","sources":["webpack://vue-logistics-system/./src/views/Admin/AlertManagement/AlertList.vue","webpack://vue-logistics-system/./src/views/Admin/AlertManagement/AlertList.vue?bee6"],"sourcesContent":["<template>\r\n  <div class=\"alert-list-container\">\r\n    <el-card>\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>异常预警列表</span>\r\n        </div>\r\n      </template>\r\n\r\n      <!-- 筛选区域 -->\r\n      <el-form :inline=\"true\" :model=\"filterForm\" class=\"filter-form\">\r\n         <el-form-item label=\"供应商\">\r\n            <el-select v-model=\"filterForm.supplierId\" placeholder=\"选择供应商\" clearable filterable>\r\n               <el-option\r\n                 v-for=\"supplier in mockSuppliers\" \r\n                 :key=\"supplier.id\"\r\n                 :label=\"supplier.name\"\r\n                 :value=\"supplier.id\"\r\n               />\r\n            </el-select>\r\n         </el-form-item>\r\n         <el-form-item label=\"车牌号\">\r\n           <el-input v-model=\"filterForm.plateNumber\" placeholder=\"输入车牌号\" clearable />\r\n         </el-form-item>\r\n        <el-form-item label=\"预警类型\">\r\n          <el-select v-model=\"filterForm.alertType\" placeholder=\"选择预警类型\" clearable>\r\n             <el-option\r\n                v-for=\"item in alertTypeOptions\"\r\n                :key=\"item.value\"\r\n                :label=\"item.label\"\r\n                :value=\"item.value\"\r\n              />\r\n          </el-select>\r\n        </el-form-item>\r\n         <el-form-item label=\"处理状态\">\r\n            <el-select v-model=\"filterForm.processStatus\" placeholder=\"选择处理状态\" clearable>\r\n              <el-option label=\"待处理\" value=\"pending\" />\r\n              <el-option label=\"处理中\" value=\"processing\" />\r\n              <el-option label=\"已解决\" value=\"resolved\" />\r\n            </el-select>\r\n         </el-form-item>\r\n         <el-form-item label=\"时间范围\">\r\n           <el-date-picker\r\n              v-model=\"filterForm.dateRange\"\r\n              type=\"datetimerange\"\r\n              range-separator=\"至\"\r\n              start-placeholder=\"开始时间\"\r\n              end-placeholder=\"结束时间\"\r\n              value-format=\"YYYY-MM-DD HH:mm:ss\"\r\n            />\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleSearch\">查询</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <!-- 预警列表 -->\r\n      <el-table :data=\"filteredAlertList\" style=\"width: 100%\" border>\r\n        <el-table-column prop=\"timestamp\" label=\"预警时间\" width=\"180\" sortable />\r\n        <el-table-column prop=\"plateNumber\" label=\"车牌号\" width=\"120\" />\r\n        <el-table-column prop=\"supplierName\" label=\"所属供应商\" width=\"200\" show-overflow-tooltip />\r\n        <el-table-column prop=\"alertType\" label=\"预警类型\" width=\"150\">\r\n            <template #default=\"scope\">\r\n               <el-tag :type=\"getAlertTypeTag(scope.row.alertType)\" effect=\"plain\">\r\n                 {{ formatAlertType(scope.row.alertType) }}\r\n               </el-tag>\r\n            </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"details\" label=\"预警详情\" show-overflow-tooltip />\r\n         <el-table-column prop=\"processStatus\" label=\"处理状态\" width=\"120\">\r\n            <template #default=\"scope\">\r\n               <el-tag :type=\"getProcessStatusTag(scope.row.processStatus)\">\r\n                 {{ formatProcessStatus(scope.row.processStatus) }}\r\n               </el-tag>\r\n            </template>\r\n         </el-table-column>\r\n        <el-table-column label=\"操作\" fixed=\"right\" width=\"200\">\r\n          <template #default=\"scope\">\r\n             <el-button text type=\"primary\" size=\"small\" @click=\"handleViewDetails(scope.row)\">查看详情</el-button>\r\n             <el-button text type=\"success\" size=\"small\" @click=\"markAsResolved(scope.row)\" v-if=\"scope.row.processStatus !== 'resolved'\">标记解决</el-button>\r\n             <el-button text type=\"warning\" size=\"small\" @click=\"markAsProcessing(scope.row)\" v-if=\"scope.row.processStatus === 'pending'\">标记处理中</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n       <!-- 分页 -->\r\n      <el-pagination\r\n         style=\"margin-top: 20px; justify-content: flex-end;\"\r\n         background\r\n         layout=\"total, sizes, prev, pager, next, jumper\"\r\n         :total=\"totalAlerts\"\r\n         :page-sizes=\"[10, 20, 50, 100]\"\r\n         :page-size=\"pagination.pageSize\"\r\n         :current-page=\"pagination.currentPage\"\r\n         @size-change=\"handleSizeChange\"\r\n         @current-change=\"handleCurrentChange\"\r\n       />\r\n\r\n       <!-- 详情弹窗 (占位) -->\r\n       <el-dialog v-model=\"detailDialogVisible\" title=\"预警详情\" width=\"60%\">\r\n         <p><strong>时间:</strong> {{ currentAlert?.timestamp }}</p>\r\n         <p><strong>车辆:</strong> {{ currentAlert?.plateNumber }} ({{ currentAlert?.supplierName }})</p>\r\n         <p><strong>类型:</strong> {{ formatAlertType(currentAlert?.alertType) }}</p>\r\n         <p><strong>详情:</strong> {{ currentAlert?.details }}</p>\r\n         <p><strong>处理状态:</strong> {{ formatProcessStatus(currentAlert?.processStatus) }}</p>\r\n         <p><strong>处理备注 (待实现):</strong> <el-input type=\"textarea\" disabled /></p>\r\n         <template #footer>\r\n           <el-button @click=\"detailDialogVisible = false\">关闭</el-button>\r\n         </template>\r\n       </el-dialog>\r\n\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed, onMounted } from 'vue';\r\nimport { ElMessage, ElMessageBox } from 'element-plus';\r\n\r\n// --- 模拟数据 ---\r\nconst mockSuppliers = ref([\r\n  { id: 'supplier_1', name: '测试供应商A - 专做提框服务' },\r\n  { id: 'supplier_2', name: '测试供应商B - FBA派送专家' },\r\n  { id: 'supplier_3', name: '测试供应商C - 全能型选手' },\r\n]);\r\n\r\n// 假设的车辆列表 (只需要部分信息)\r\nconst mockVehicles = ref([\r\n  { id: 'vehicle_1', plateNumber: 'CA12345', supplierId: 'supplier_1', supplierName: '测试供应商A - 专做提框服务' },\r\n  { id: 'vehicle_2', plateNumber: 'NY98765', supplierId: 'supplier_2', supplierName: '测试供应商B - FBA派送专家' },\r\n  { id: 'vehicle_3', plateNumber: 'TX54321', supplierId: 'supplier_3', supplierName: '测试供应商C - 全能型选手' },\r\n   { id: 'vehicle_4', plateNumber: 'FL11223', supplierId: 'supplier_1', supplierName: '测试供应商A - 专做提框服务' },\r\n   { id: 'vehicle_5', plateNumber: 'AZ55667', supplierId: 'supplier_2', supplierName: '测试供应商B - FBA派送专家' },\r\n]);\r\n\r\nconst allAlerts = ref([]);\r\n\r\nconst generateMockAlerts = (count = 100) => {\r\n  const alertTypes = ['speeding', 'route_deviation', 'geo_fencing', 'prolonged_stop', 'fatigue_driving', 'gps_signal_lost'];\r\n  const processStatuses = ['pending', 'processing', 'resolved'];\r\n  const mockData = [];\r\n  const now = Date.now();\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    const vehicle = mockVehicles.value[Math.floor(Math.random() * mockVehicles.value.length)];\r\n    const alertType = alertTypes[Math.floor(Math.random() * alertTypes.length)];\r\n    let details = '';\r\n    switch (alertType) {\r\n        case 'speeding': details = `速度达到 ${Math.floor(Math.random() * 40) + 80} km/h (阈值 80 km/h)`; break;\r\n        case 'route_deviation': details = `偏离预定路线 1.5 km`; break;\r\n        case 'geo_fencing': details = `进入未授权区域 (ID: Zone_${Math.floor(Math.random()*5)})`; break;\r\n        case 'prolonged_stop': details = `在非预定点停留 ${Math.floor(Math.random() * 50) + 10} 分钟`; break;\r\n        case 'fatigue_driving': details = `连续驾驶超过 4 小时`; break;\r\n        case 'gps_signal_lost': details = `GPS 信号丢失超过 5 分钟`; break;\r\n        default: details = '未知详情';\r\n    }\r\n\r\n    mockData.push({\r\n      id: `alert_${now - i}`,\r\n      timestamp: new Date(now - Math.floor(Math.random() * 7 * 24 * 60 * 60 * 1000)).toLocaleString('sv-SE'), // 过去7天内\r\n      vehicleId: vehicle.id,\r\n      plateNumber: vehicle.plateNumber,\r\n      supplierId: vehicle.supplierId,\r\n      supplierName: vehicle.supplierName,\r\n      alertType: alertType,\r\n      details: details,\r\n      processStatus: processStatuses[Math.floor(Math.random() * processStatuses.length)],\r\n    });\r\n  }\r\n  // return mockData.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)); // 按时间倒序 (Table 支持排序)\r\n    return mockData;\r\n};\r\n\r\n// --- 选项数据 ---\r\nconst alertTypeOptions = [\r\n  { value: 'speeding', label: '超速报警', tag: 'danger' },\r\n  { value: 'route_deviation', label: '偏离路线报警', tag: 'warning' },\r\n  { value: 'geo_fencing', label: '电子围栏报警', tag: 'warning' },\r\n  { value: 'prolonged_stop', label: '超时停留报警', tag: 'warning' },\r\n  { value: 'fatigue_driving', label: '疲劳驾驶预警', tag: 'danger' },\r\n  { value: 'gps_signal_lost', label: 'GPS信号丢失报警', tag: 'info' },\r\n];\r\n\r\nconst processStatusOptions = {\r\n  pending: { label: '待处理', tag: 'danger' },\r\n  processing: { label: '处理中', tag: 'warning' },\r\n  resolved: { label: '已解决', tag: 'success' },\r\n};\r\n\r\n// --- 筛选与分页 ---\r\nconst filterForm = reactive({\r\n  supplierId: '',\r\n  plateNumber: '',\r\n  alertType: '',\r\n  processStatus: '',\r\n  dateRange: [],\r\n});\r\n\r\nconst pagination = reactive({\r\n  currentPage: 1,\r\n  pageSize: 10,\r\n});\r\n\r\nconst totalAlerts = computed(() => filteredAlertsData.value.length);\r\n\r\n// 过滤逻辑\r\nconst filteredAlertsData = computed(() => {\r\n  return allAlerts.value.filter(alert => {\r\n    const supplierMatch = filterForm.supplierId ? alert.supplierId === filterForm.supplierId : true;\r\n    const plateMatch = filterForm.plateNumber ? alert.plateNumber.includes(filterForm.plateNumber) : true;\r\n    const typeMatch = filterForm.alertType ? alert.alertType === filterForm.alertType : true;\r\n    const statusMatch = filterForm.processStatus ? alert.processStatus === filterForm.processStatus : true;\r\n    const dateMatch = filterForm.dateRange && filterForm.dateRange.length === 2\r\n      ? (new Date(alert.timestamp) >= new Date(filterForm.dateRange[0]) && new Date(alert.timestamp) <= new Date(filterForm.dateRange[1]))\r\n      : true;\r\n    return supplierMatch && plateMatch && typeMatch && statusMatch && dateMatch;\r\n  });\r\n});\r\n\r\n// 分页逻辑\r\nconst filteredAlertList = computed(() => {\r\n  const start = (pagination.currentPage - 1) * pagination.pageSize;\r\n  const end = start + pagination.pageSize;\r\n  // 模拟后端排序：这里简单在前端排序，实际应由后端处理\r\n  // return filteredAlertsData.value.slice(start, end).sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\r\n   return filteredAlertsData.value.slice(start, end);\r\n});\r\n\r\n// --- 弹窗 ---\r\nconst detailDialogVisible = ref(false);\r\nconst currentAlert = ref(null);\r\n\r\n// --- 方法 ---\r\n// 格式化\r\nconst formatAlertType = (type) => alertTypeOptions.find(opt => opt.value === type)?.label || type;\r\nconst getAlertTypeTag = (type) => alertTypeOptions.find(opt => opt.value === type)?.tag || 'info';\r\nconst formatProcessStatus = (status) => processStatusOptions[status]?.label || status;\r\nconst getProcessStatusTag = (status) => processStatusOptions[status]?.tag || 'info';\r\n\r\n// 搜索\r\nconst handleSearch = () => {\r\n  pagination.currentPage = 1;\r\n};\r\n\r\n// 分页\r\nconst handleSizeChange = (newSize) => {\r\n  pagination.pageSize = newSize;\r\n  pagination.currentPage = 1;\r\n};\r\nconst handleCurrentChange = (newPage) => {\r\n  pagination.currentPage = newPage;\r\n};\r\n\r\n// 查看详情\r\nconst handleViewDetails = (row) => {\r\n  currentAlert.value = row;\r\n  detailDialogVisible.value = true;\r\n};\r\n\r\n// 更新状态 (模拟)\r\nconst updateAlertStatus = (row, newStatus) => {\r\n   const index = allAlerts.value.findIndex(alert => alert.id === row.id);\r\n   if (index !== -1) {\r\n     allAlerts.value[index].processStatus = newStatus;\r\n     ElMessage.success(`已将 ${row.plateNumber} 的预警标记为 ${formatProcessStatus(newStatus)}`);\r\n     // 如果当前在详情弹窗中查看的是这个预警，也更新状态\r\n     if (currentAlert.value && currentAlert.value.id === row.id) {\r\n       currentAlert.value.processStatus = newStatus;\r\n     }\r\n   } else {\r\n     ElMessage.error('更新状态失败');\r\n   }\r\n};\r\n\r\nconst markAsResolved = (row) => {\r\n   ElMessageBox.confirm(`确定将 ${row.plateNumber} 的 ${formatAlertType(row.alertType)} 预警标记为已解决吗?`, '确认', { type: 'success' })\r\n     .then(() => {\r\n       updateAlertStatus(row, 'resolved');\r\n     })\r\n     .catch(() => {}); // 取消时不做任何事\r\n};\r\n\r\nconst markAsProcessing = (row) => {\r\n    updateAlertStatus(row, 'processing');\r\n};\r\n\r\n// --- 生命周期 ---\r\nonMounted(() => {\r\n  allAlerts.value = generateMockAlerts();\r\n});\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.alert-list-container {\r\n  padding: 20px;\r\n}\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n.filter-form .el-form-item {\r\n  margin-bottom: 10px;\r\n}\r\n.el-table {\r\n  margin-top: 15px;\r\n}\r\n.dialog-footer button:first-child {\r\n  margin-right: 10px;\r\n}\r\n</style> ","import script from \"./AlertList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AlertList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AlertList.vue?vue&type=style&index=0&id=98d1a196&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-98d1a196\"]])\n\nexport default __exports__"],"names":["mockSuppliers","ref","id","name","mockVehicles","plateNumber","supplierId","supplierName","allAlerts","generateMockAlerts","count","alertTypes","processStatuses","mockData","now","Date","i","vehicle","value","Math","floor","random","length","alertType","details","push","timestamp","toLocaleString","vehicleId","processStatus","alertTypeOptions","label","tag","processStatusOptions","pending","processing","resolved","filterForm","reactive","dateRange","pagination","currentPage","pageSize","totalAlerts","computed","filteredAlertsData","filter","alert","supplierMatch","plateMatch","includes","typeMatch","statusMatch","dateMatch","filteredAlertList","start","end","slice","detailDialogVisible","currentAlert","formatAlertType","type","find","opt","getAlertTypeTag","formatProcessStatus","status","getProcessStatusTag","handleSearch","handleSizeChange","newSize","handleCurrentChange","newPage","handleViewDetails","row","updateAlertStatus","newStatus","index","findIndex","ElMessage","success","error","markAsResolved","ElMessageBox","confirm","then","catch","markAsProcessing","onMounted","__exports__"],"sourceRoot":""}