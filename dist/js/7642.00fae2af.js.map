{"version":3,"file":"js/7642.00fae2af.js","mappings":"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","sources":["webpack://vue-logistics-system/./src/views/Admin/RatingManagement/FieldRuleConfig.vue","webpack://vue-logistics-system/./src/views/Admin/RatingManagement/FieldRuleConfig.vue?3f87"],"sourcesContent":["<template>\r\n  <div class=\"field-rule-config-container\">\r\n    <el-row :gutter=\"20\">\r\n      <!-- 规则创建/编辑区域 -->\r\n      <el-col :span=\"10\">\r\n        <el-card>\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <span>{{ isEditing ? '编辑字段规则' : '创建新字段规则' }}</span>\r\n              <el-button v-if=\"isEditing\" type=\"text\" @click=\"cancelEdit\">取消编辑</el-button>\r\n            </div>\r\n          </template>\r\n          <el-form :model=\"ruleForm\" ref=\"ruleFormRef\" :rules=\"formRules\" label-width=\"120px\" label-position=\"top\">\r\n            <el-form-item label=\"规则名称\" prop=\"name\">\r\n              <el-input v-model=\"ruleForm.name\" placeholder=\"例如：提货晚点或金额超限\"></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"数据来源表\" prop=\"sourceTable\">\r\n              <el-select v-model=\"ruleForm.sourceTable\" placeholder=\"选择数据表\" clearable @change=\"handleTableChange\">\r\n                 <el-option v-for=\"table in dataTables\" :key=\"table.value\" :label=\"table.label\" :value=\"table.value\" />\r\n              </el-select>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"规则逻辑\" prop=\"logic.conditions\">\r\n               <div class=\"rule-logic-group\">\r\n                  <!-- 移除顶层连接符选择 -->\r\n\r\n                 <!-- 条件列表 -->\r\n                 <div v-for=\"(condition, index) in ruleForm.logic.conditions\" :key=\"condition.id || index\">\r\n                    <!-- 条件间连接符选择 (显示在条件上方，从第二个条件开始) -->\r\n                    <div v-if=\"index > 0\" class=\"connector-selector\">\r\n                      <el-radio-group v-model=\"condition.connector\" size=\"small\">\r\n                          <el-radio-button label=\"AND\">AND</el-radio-button>\r\n                          <el-radio-button label=\"OR\">OR</el-radio-button>\r\n                      </el-radio-group>\r\n                    </div>\r\n\r\n                    <div class=\"condition-item\">\r\n                      <el-row :gutter=\"10\" align=\"middle\">\r\n                        <el-col :span=\"20\">\r\n                          <!-- 条件类型选择 -->\r\n                          <el-select v-model=\"condition.type\" placeholder=\"条件类型\" size=\"small\" style=\"margin-bottom: 5px; width: 150px;\">\r\n                            <el-option label=\"字段比较\" value=\"comparison\"></el-option>\r\n                            <el-option label=\"计算比较\" value=\"calculation\"></el-option>\r\n                          </el-select>\r\n\r\n                          <!-- 字段比较构建器 -->\r\n                          <div v-if=\"condition.type === 'comparison'\" class=\"rule-logic-builder\">\r\n                             <el-select v-model=\"condition.leftOperand.field\" placeholder=\"选择字段\" size=\"small\" clearable filterable :disabled=\"!ruleForm.sourceTable\" style=\"width: 160px;\">\r\n                               <el-option v-for=\"field in getAllFields(ruleForm.sourceTable)\" :key=\"field.value\" :label=\"field.label\" :value=\"field.value\" />\r\n                             </el-select>\r\n                             <el-select v-model=\"condition.operator\" placeholder=\"比较符\" size=\"small\" style=\"width: 100px;\">\r\n                               <el-option v-for=\"op in comparisonOperators\" :key=\"op.value\" :label=\"op.label\" :value=\"op.value\" />\r\n                             </el-select>\r\n                             <template v-if=\"!isUnaryOperator(condition.operator)\">\r\n                                <el-select v-model=\"condition.rightOperand.type\" placeholder=\"类型\" size=\"small\" style=\"width: 70px;\" @change=\"condition.rightOperand.value = null\">\r\n                                  <el-option label=\"字段\" value=\"field\" />\r\n                                  <el-option label=\"常量\" value=\"constant\" />\r\n                                </el-select>\r\n                                <el-select v-if=\"condition.rightOperand.type === 'field'\" v-model=\"condition.rightOperand.value\" placeholder=\"选择字段\" size=\"small\" clearable filterable :disabled=\"!ruleForm.sourceTable\" style=\"width: 160px;\">\r\n                                  <el-option v-for=\"field in getAllFields(ruleForm.sourceTable)\" :key=\"field.value\" :label=\"field.label\" :value=\"field.value\" />\r\n                                </el-select>\r\n                                <el-input v-else v-model=\"condition.rightOperand.value\" placeholder=\"输入常量值\" size=\"small\" clearable style=\"width: 160px;\" />\r\n                             </template>\r\n                          </div>\r\n\r\n                          <!-- 计算比较构建器 -->\r\n                           <div v-else-if=\"condition.type === 'calculation'\" class=\"rule-logic-builder\">\r\n                             <el-select v-model=\"condition.fieldA\" placeholder=\"字段A\" size=\"small\" clearable filterable :disabled=\"!ruleForm.sourceTable\" style=\"width: 130px;\">\r\n                               <el-option v-for=\"field in getNumericOrDateFields(ruleForm.sourceTable)\" :key=\"field.value\" :label=\"field.label\" :value=\"field.value\" />\r\n                             </el-select>\r\n                             <el-select v-model=\"condition.calcOperator\" placeholder=\"算术符\" size=\"small\" style=\"width: 60px;\">\r\n                                <el-option label=\"-\" value=\"-\"></el-option>\r\n                             </el-select>\r\n                             <el-select v-model=\"condition.fieldB\" placeholder=\"字段B\" size=\"small\" clearable filterable :disabled=\"!ruleForm.sourceTable\" style=\"width: 130px;\">\r\n                               <el-option v-for=\"field in getNumericOrDateFields(ruleForm.sourceTable)\" :key=\"field.value\" :label=\"field.label\" :value=\"field.value\" />\r\n                             </el-select>\r\n                              <el-select v-model=\"condition.comparisonOperator\" placeholder=\"比较符\" size=\"small\" style=\"width: 80px;\">\r\n                                 <el-option v-for=\"op in numericComparisonOperators\" :key=\"op.value\" :label=\"op.label\" :value=\"op.value\" />\r\n                              </el-select>\r\n                              <el-input v-model=\"condition.constantValue\" placeholder=\"常量值\" size=\"small\" clearable style=\"width: 100px;\" />\r\n                          </div>\r\n                        </el-col>\r\n                        <el-col :span=\"4\" style=\"text-align: right;\">\r\n                            <el-button type=\"danger\" :icon=\"Delete\" circle plain size=\"small\" @click=\"removeCondition(index)\" :disabled=\"ruleForm.logic.conditions.length <= 1\"></el-button>\r\n                        </el-col>\r\n                      </el-row>\r\n                    </div>\r\n                 </div>\r\n\r\n                 <!-- 添加条件按钮 -->\r\n                 <el-button type=\"primary\" link :icon=\"Plus\" @click=\"addCondition\" style=\"margin-top: 10px;\">添加条件</el-button>\r\n               </div>\r\n            </el-form-item>\r\n\r\n            <!-- 新增：扣分分值 -->\r\n            <el-form-item label=\"扣分分值\" prop=\"deductionPoints\">\r\n              <el-input-number v-model=\"ruleForm.deductionPoints\" :min=\"0\" :step=\"1\" controls-position=\"right\" placeholder=\"规则触发时扣除的分数\" style=\"width: 100%;\"></el-input-number>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"规则描述 (可选)\">\r\n               <el-input type=\"textarea\" v-model=\"ruleForm.description\" placeholder=\"简要说明规则的用途\"></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item>\r\n              <el-button type=\"primary\" @click=\"submitForm\" :loading=\"saving\">{{ isEditing ? '更新规则' : '创建规则' }}</el-button>\r\n              <el-button @click=\"resetForm\">重置</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n        </el-card>\r\n      </el-col>\r\n\r\n      <!-- 规则列表区域 -->\r\n      <el-col :span=\"14\">\r\n         <el-card>\r\n           <template #header>\r\n             <div class=\"card-header\">\r\n               <span>已配置的字段规则</span>\r\n             </div>\r\n           </template>\r\n            <el-table :data=\"configuredRules\" style=\"width: 100%\" border height=\"500px\" v-loading=\"loadingRules\">\r\n                <el-table-column prop=\"name\" label=\"规则名称\" width=\"180\" show-overflow-tooltip/>\r\n                <el-table-column label=\"规则逻辑\" min-width=\"300\">\r\n                  <template #default=\"scope\">\r\n                     <div v-html=\"formatRuleLogic(scope.row.logic, scope.row.sourceTable)\"></div>\r\n                  </template>\r\n                </el-table-column>\r\n                <!-- 新增：扣分分值列 -->\r\n                <el-table-column prop=\"deductionPoints\" label=\"扣分分值\" width=\"100\" align=\"center\">\r\n                  <template #default=\"scope\">\r\n                    <span style=\"color: red; font-weight: bold;\">-{{ scope.row.deductionPoints || 0 }}</span>\r\n                  </template>\r\n                </el-table-column>\r\n                <el-table-column prop=\"description\" label=\"描述\" show-overflow-tooltip/>\r\n                <el-table-column label=\"操作\" width=\"150\" align=\"center\">\r\n                    <template #default=\"scope\">\r\n                        <el-button size=\"small\" type=\"primary\" @click=\"editRule(scope.row)\">编辑</el-button>\r\n                        <el-button size=\"small\" type=\"danger\" @click=\"deleteRule(scope.row.id)\">删除</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n         </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted, nextTick } from 'vue';\r\nimport { ElMessage, ElMessageBox } from 'element-plus';\r\nimport { Plus, Delete } from '@element-plus/icons-vue';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n// --- refs ---\r\nconst ruleFormRef = ref(null);\r\n\r\n// --- state ---\r\nconst isEditing = ref(false);\r\nconst editingRuleId = ref(null);\r\nconst saving = ref(false);\r\nconst loadingRules = ref(false);\r\n\r\n// 创建新的空条件\r\nconst createNewCondition = (type = 'comparison', connector = 'AND') => { // 添加默认 connector\r\n    const baseCondition = { id: uuidv4(), type: type, connector: connector }; // 添加 connector 到基础对象\r\n    if (type === 'comparison') {\r\n        return {\r\n            ...baseCondition,\r\n            leftOperand: { field: null },\r\n            operator: null,\r\n            rightOperand: { type: 'constant', value: null },\r\n        };\r\n    } else if (type === 'calculation') {\r\n        return {\r\n            ...baseCondition,\r\n            fieldA: null,\r\n            calcOperator: '-',\r\n            fieldB: null,\r\n            comparisonOperator: null,\r\n            constantValue: null,\r\n        };\r\n    }\r\n    return baseCondition;\r\n};\r\n\r\n// 规则表单数据模型\r\nconst initialRuleForm = () => ({\r\n  id: null,\r\n  name: '',\r\n  description: '',\r\n  sourceTable: null,\r\n  deductionPoints: 0, // 新增：默认扣 0 分\r\n  logic: {\r\n    // groupOperator: 'AND', // 移除 groupOperator\r\n    conditions: [createNewCondition('comparison')] // 第一个条件的 connector 实际无作用，但保持结构一致\r\n  }\r\n});\r\nconst ruleForm = reactive(initialRuleForm());\r\n\r\n// 表单验证规则\r\nconst formRules = reactive({\r\n  name: [{ required: true, message: '请输入规则名称', trigger: 'blur' }],\r\n  sourceTable: [{ required: true, message: '请选择数据来源表', trigger: 'change' }],\r\n  deductionPoints: [\r\n      { required: true, message: '请输入扣分分值', trigger: 'blur' },\r\n      { type: 'number', message: '扣分分值必须为数字' },\r\n      { validator: (rule, value, callback) => {\r\n          if (value < 0) {\r\n              callback(new Error('扣分分值不能为负数'));\r\n          } else {\r\n              callback();\r\n          }\r\n        }, trigger: 'blur' }\r\n  ]\r\n});\r\n\r\n// 已配置的规则列表 (模拟)\r\nconst configuredRules = ref([]);\r\n\r\n// --- 模拟数据 ---\r\nconst dataTables = ref([]);\r\nconst tableFields = ref({});\r\n\r\n// 字段比较操作符\r\nconst comparisonOperators = ref([\r\n  { value: '>=', label: '>=' }, { value: '<=', label: '<=' },\r\n  { value: '>', label: '>' }, { value: '<', label: '<' },\r\n  { value: '==', label: '==' }, { value: '!=', label: '!=' },\r\n  { value: 'is_empty', label: '为空' }, { value: 'is_not_empty', label: '不为空' },\r\n  { value: 'earlier_than', label: '早于' }, { value: 'later_than', label: '晚于' },\r\n]);\r\n// 数值比较操作符 (用于计算比较)\r\nconst numericComparisonOperators = ref([\r\n   { value: '>=', label: '>=' }, { value: '<=', label: '<=' },\r\n   { value: '>', label: '>' }, { value: '<', label: '<' },\r\n   { value: '==', label: '==' }, { value: '!=', label: '!=' },\r\n]);\r\n\r\nconst unaryOperators = ['is_empty', 'is_not_empty'];\r\n\r\n// --- Lifecycle ---\r\nonMounted(async () => {\r\n  await loadTableAndFieldMetadata();\r\n  await loadConfiguredRules();\r\n});\r\n\r\n// --- 模拟 API 调用 ---\r\nconst loadTableAndFieldMetadata = async () => {\r\n    await new Promise(resolve => setTimeout(resolve, 100));\r\n    dataTables.value = [\r\n        { value: 'order', label: '订单表 (order)' },\r\n        { value: 'cargo_damage', label: '货损记录表 (cargo_damage)' },\r\n    ];\r\n    tableFields.value = {\r\n        order: [\r\n            { value: 'planned_pickup_time', label: '计划提货时间', type: 'datetime' },\r\n            { value: 'actual_pickup_time', label: '实际提货时间', type: 'datetime' },\r\n            { value: 'pickup_duration', label: '提货用时(小时)', type: 'number'},\r\n            { value: 'order_amount', label: '订单金额', type: 'number' },\r\n            { value: 'remarks', label: '备注', type: 'string'}\r\n        ],\r\n        cargo_damage: [\r\n            { value: 'damage_amount', label: '货损金额', type: 'number' },\r\n            { value: 'compensation_amount', label: '赔偿金额', type: 'number'},\r\n            { value: 'is_compensated', label: '是否赔付', type: 'boolean'}\r\n        ],\r\n    };\r\n};\r\n\r\nconst loadConfiguredRules = async () => {\r\n  loadingRules.value = true;\r\n  await new Promise(resolve => setTimeout(resolve, 500));\r\n  configuredRules.value = [\r\n    {\r\n      id: 'rule_1', name: '实际提货晚点', description: '', sourceTable: 'order',\r\n      deductionPoints: 5, // 添加扣分\r\n      logic: {\r\n          conditions: [\r\n              { id: uuidv4(), type: 'comparison', connector: 'AND', leftOperand: { field: 'actual_pickup_time' }, operator: 'later_than', rightOperand: { type: 'field', value: 'planned_pickup_time' } }\r\n          ]\r\n      }\r\n    },\r\n    {\r\n      id: 'rule_mixed', name: '提货晚点 且 (金额>5000 或 备注为空)', description: '', sourceTable: 'order',\r\n      deductionPoints: 10, // 添加扣分\r\n      logic: {\r\n          conditions: [\r\n              { id: uuidv4(), type: 'comparison', connector: 'AND', leftOperand: { field: 'actual_pickup_time' }, operator: 'later_than', rightOperand: { type: 'field', value: 'planned_pickup_time' } },\r\n              { id: uuidv4(), type: 'comparison', connector: 'OR', leftOperand: { field: 'order_amount' }, operator: '>', rightOperand: { type: 'constant', value: '5000' } }, // 这个 AND 连接上面，下面的 OR 连接这个和下一个\r\n              { id: uuidv4(), type: 'comparison', connector: 'AND', leftOperand: { field: 'remarks' }, operator: 'is_empty', rightOperand: { type: 'constant', value: null } } // 最后一个 connector 无效\r\n          ]\r\n      }\r\n    },\r\n    {\r\n       id: 'rule_calc_or', name: '货损金额>1000 或 赔偿金额>500', description: '', sourceTable: 'cargo_damage',\r\n       deductionPoints: 15, // 添加扣分\r\n       logic: {\r\n            conditions: [\r\n                { id: uuidv4(), type: 'comparison', connector: 'OR', leftOperand: { field: 'damage_amount' }, operator: '>', rightOperand: { type: 'constant', value: '1000' } },\r\n                { id: uuidv4(), type: 'comparison', connector: 'AND', leftOperand: { field: 'compensation_amount' }, operator: '>', rightOperand: { type: 'constant', value: '500' } }\r\n            ]\r\n       }\r\n    },\r\n  ];\r\n  loadingRules.value = false;\r\n};\r\n\r\n// --- Methods ---\r\nconst getAllFields = (tableName) => {\r\n    return tableName && tableFields.value[tableName] ? tableFields.value[tableName] : [];\r\n};\r\nconst getNumericOrDateFields = (tableName) => {\r\n     const fields = getAllFields(tableName);\r\n     return fields.filter(f => ['number', 'datetime'].includes(f.type));\r\n}\r\nconst getFieldLabel = (tableName, fieldValue) => {\r\n    const fields = getAllFields(tableName);\r\n    const field = fields.find(f => f.value === fieldValue);\r\n    return field ? field.label : fieldValue;\r\n}\r\nconst isUnaryOperator = (operator) => {\r\n    return unaryOperators.includes(operator);\r\n}\r\n\r\n// 格式化单个条件逻辑\r\nconst formatSingleCondition = (condition, sourceTable) => {\r\n    let formattedContent = '';\r\n    if (!condition) return '(无效条件)';\r\n\r\n    if (condition.type === 'comparison') {\r\n        if (!condition.leftOperand || !condition.leftOperand.field || !condition.operator) return '(无效字段比较)';\r\n        const leftFieldLabel = getFieldLabel(sourceTable, condition.leftOperand.field);\r\n        const operatorLabel = comparisonOperators.value.find(op => op.value === condition.operator)?.label || condition.operator;\r\n        formattedContent = `[${leftFieldLabel}] ${operatorLabel}`;\r\n        if (!isUnaryOperator(condition.operator)) {\r\n            if (condition.rightOperand) {\r\n                 if (condition.rightOperand.type === 'field') {\r\n                     const rightFieldLabel = getFieldLabel(sourceTable, condition.rightOperand.value);\r\n                     formattedContent += ` [${rightFieldLabel || '未选字段'}]`;\r\n                 } else if (condition.rightOperand.type === 'constant') {\r\n                     formattedContent += ` \"${condition.rightOperand.value || ''}\"`;\r\n                 }\r\n            } else { formattedContent += ' [未配置]'; }\r\n        }\r\n    } else if (condition.type === 'calculation') {\r\n         if (!condition.fieldA || !condition.calcOperator || !condition.fieldB || !condition.comparisonOperator) return '(无效计算比较)';\r\n         const fieldALabel = getFieldLabel(sourceTable, condition.fieldA);\r\n         const fieldBLabel = getFieldLabel(sourceTable, condition.fieldB);\r\n         const comparisonOpLabel = numericComparisonOperators.value.find(op => op.value === condition.comparisonOperator)?.label || condition.comparisonOperator;\r\n         formattedContent = `([${fieldALabel}] ${condition.calcOperator} [${fieldBLabel}]) ${comparisonOpLabel} \"${condition.constantValue || ''}\"`;\r\n    } else {\r\n        formattedContent = `未知条件类型: ${condition.type}`;\r\n    }\r\n    return `(${formattedContent})`;\r\n};\r\n\r\n// 格式化整个规则逻辑\r\nconst formatRuleLogic = (logic, sourceTable) => {\r\n    if (!logic || !logic.conditions || logic.conditions.length === 0) return '未配置逻辑';\r\n\r\n    let result = '';\r\n    logic.conditions.forEach((cond, index) => {\r\n        const formattedCond = formatSingleCondition(cond, sourceTable);\r\n        if (index === 0) {\r\n            result += formattedCond; // 第一个条件直接添加\r\n        } else {\r\n            // 从第二个条件开始，添加上一个条件的连接符\r\n            const connector = logic.conditions[index - 1]?.connector || 'AND'; // 获取上一个条件的连接符，默认为 AND\r\n            const operatorStr = connector === 'OR' ? ' <span style=\"color: orange; font-weight: bold;\">OR</span> ' : ' <span style=\"color: blue; font-weight: bold;\">AND</span> ';\r\n            result += operatorStr + formattedCond;\r\n        }\r\n    });\r\n\r\n    return result;\r\n};\r\n\r\n// 处理数据表选择变化\r\nconst handleTableChange = () => {\r\n    ruleForm.logic.conditions.forEach(cond => {\r\n        if (cond.type === 'comparison') {\r\n            cond.leftOperand.field = null;\r\n            if (cond.rightOperand.type === 'field') {\r\n                cond.rightOperand.value = null;\r\n            }\r\n        } else if (cond.type === 'calculation') {\r\n            cond.fieldA = null;\r\n            cond.fieldB = null;\r\n        }\r\n    });\r\n    ruleFormRef.value?.clearValidate();\r\n};\r\n\r\n// 添加条件\r\nconst addCondition = () => {\r\n    // 新添加的条件，其 connector 决定了它和 *下一个* 条件的关系，默认为 AND\r\n    ruleForm.logic.conditions.push(createNewCondition('comparison', 'AND'));\r\n};\r\n\r\n// 移除条件\r\nconst removeCondition = (index) => {\r\n    if (ruleForm.logic.conditions.length > 1) {\r\n        ruleForm.logic.conditions.splice(index, 1);\r\n    }\r\n};\r\n\r\n// 重置表单\r\nconst resetForm = () => {\r\n  const initial = initialRuleForm();\r\n  Object.assign(ruleForm, JSON.parse(JSON.stringify(initial)));\r\n  isEditing.value = false;\r\n  editingRuleId.value = null;\r\n  nextTick(() => {\r\n      ruleFormRef.value?.clearValidate();\r\n  });\r\n};\r\n\r\n// 取消编辑\r\nconst cancelEdit = () => {\r\n    resetForm();\r\n};\r\n\r\n// 编辑规则\r\nconst editRule = (rule) => {\r\n    isEditing.value = true;\r\n    editingRuleId.value = rule.id;\r\n    // 深拷贝，并确保 deductionPoints 被加载 (如果旧数据没有，initialRuleForm 会提供默认值)\r\n    const initial = initialRuleForm();\r\n    const ruleDataToLoad = { ...initial, ...JSON.parse(JSON.stringify(rule)) };\r\n    Object.assign(ruleForm, ruleDataToLoad);\r\n     if (ruleForm.logic && ruleForm.logic.conditions) {\r\n         ruleForm.logic.conditions.forEach(cond => {\r\n             if (!cond.id) cond.id = uuidv4();\r\n             if (cond.connector === undefined) cond.connector = 'AND';\r\n         });\r\n     }\r\n     nextTick(() => {\r\n        ruleFormRef.value?.clearValidate();\r\n     });\r\n};\r\n\r\n// 删除规则\r\nconst deleteRule = (ruleId) => {\r\n    ElMessageBox.confirm('确定要删除这条规则吗？此操作不可撤销。', '确认删除', {\r\n        confirmButtonText: '确定', cancelButtonText: '取消', type: 'warning',\r\n    }).then(async () => {\r\n        console.log('删除规则 ID:', ruleId);\r\n        saving.value = true;\r\n        await new Promise(resolve => setTimeout(resolve, 300));\r\n        saving.value = false;\r\n        ElMessage.success('规则删除成功');\r\n        loadConfiguredRules();\r\n         if (isEditing.value && editingRuleId.value === ruleId) {\r\n             resetForm();\r\n         }\r\n    }).catch(() => {});\r\n};\r\n\r\n// 验证单个条件是否有效\r\nconst validateCondition = (condition, index) => {\r\n    const prefix = `条件 #${index + 1}: `;\r\n    if (!condition.type) {\r\n         ElMessage.error(`${prefix}请选择条件类型`); return false;\r\n    }\r\n    if (condition.type === 'comparison') {\r\n        if (!condition.leftOperand || !condition.leftOperand.field) { ElMessage.error(`${prefix}请选择左侧字段`); return false; }\r\n        if (!condition.operator) { ElMessage.error(`${prefix}请选择比较符`); return false; }\r\n        if (!isUnaryOperator(condition.operator)) {\r\n            if (!condition.rightOperand || !condition.rightOperand.type) { ElMessage.error(`${prefix}请选择右侧操作数类型`); return false; }\r\n            if (condition.rightOperand.value === null || condition.rightOperand.value === undefined || condition.rightOperand.value === '') {\r\n                 const msg = condition.rightOperand.type === 'field' ? '请选择右侧字段' : '请输入右侧常量值';\r\n                 ElMessage.error(`${prefix}${msg}`); return false;\r\n             }\r\n        }\r\n    } else if (condition.type === 'calculation') {\r\n        if (!condition.fieldA) { ElMessage.error(`${prefix}请选择计算字段A`); return false; }\r\n        if (!condition.calcOperator) { ElMessage.error(`${prefix}请选择算术运算符`); return false; }\r\n        if (!condition.fieldB) { ElMessage.error(`${prefix}请选择计算字段B`); return false; }\r\n        if (!condition.comparisonOperator) { ElMessage.error(`${prefix}请选择比较运算符`); return false; }\r\n        if (condition.constantValue === null || condition.constantValue === undefined || condition.constantValue === '') {\r\n             ElMessage.error(`${prefix}请输入常量值`); return false;\r\n        }\r\n    } else {\r\n        ElMessage.error(`${prefix}未知的条件类型`); return false;\r\n    }\r\n\r\n    // 验证连接符 (除最后一个条件外)\r\n    if (index < ruleForm.logic.conditions.length - 1 && !condition.connector) {\r\n        ElMessage.error(`${prefix}请为该条件选择一个连接到下一条件的运算符 (AND/OR)`);\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\n// 提交表单 (创建或更新)\r\nconst submitForm = () => {\r\n  ruleFormRef.value?.validate(async (valid) => {\r\n    if (valid) {\r\n        if (!ruleForm.logic.conditions || ruleForm.logic.conditions.length === 0) {\r\n            ElMessage.error('请至少配置一个规则条件');\r\n            return;\r\n        }\r\n        let allConditionsValid = true;\r\n        for (let i = 0; i < ruleForm.logic.conditions.length; i++) {\r\n            if (!validateCondition(ruleForm.logic.conditions[i], i)) {\r\n                allConditionsValid = false;\r\n                break;\r\n            }\r\n        }\r\n        if (!allConditionsValid) return;\r\n\r\n      saving.value = true;\r\n      try {\r\n        const payload = JSON.parse(JSON.stringify(ruleForm));\r\n        // 清理最后一个条件的无效 connector\r\n        if (payload.logic && payload.logic.conditions && payload.logic.conditions.length > 0) {\r\n             delete payload.logic.conditions[payload.logic.conditions.length - 1].connector;\r\n        }\r\n\r\n        if (isEditing.value) {\r\n          console.log('更新规则:', payload);\r\n          await new Promise(resolve => setTimeout(resolve, 500));\r\n          ElMessage.success('规则更新成功');\r\n        } else {\r\n          payload.id = `rule_${uuidv4()}`;\r\n          console.log('创建规则:', payload);\r\n          await new Promise(resolve => setTimeout(resolve, 500));\r\n          ElMessage.success('规则创建成功');\r\n        }\r\n        resetForm();\r\n        loadConfiguredRules();\r\n      } catch (error) {\r\n        console.error('保存规则失败:', error);\r\n        ElMessage.error('保存规则失败，请稍后重试。');\r\n      } finally {\r\n        saving.value = false;\r\n      }\r\n    } else {\r\n      ElMessage.error('表单验证失败，请检查输入项。');\r\n      return false;\r\n    }\r\n  });\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.field-rule-config-container {\r\n  padding: 20px;\r\n}\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n.el-form {\r\n    padding-right: 15px;\r\n}\r\n.rule-logic-group {\r\n    border: 1px solid #dcdfe6;\r\n    border-radius: 4px;\r\n    padding: 15px;\r\n    background-color: #fdfdfd;\r\n}\r\n.connector-selector {\r\n    text-align: center;\r\n    margin: 10px 0;\r\n}\r\n.condition-item {\r\n    border: 1px dashed #e4e7ed;\r\n    padding: 10px;\r\n    /* margin-bottom: 10px; */ /* 由 connector-selector 提供间距 */\r\n    border-radius: 4px;\r\n    background-color: #fff;\r\n}\r\n.condition-item .el-row {\r\n    width: 100%;\r\n}\r\n.rule-logic-builder {\r\n    display: flex;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    gap: 8px;\r\n    padding: 8px;\r\n    border: 1px solid #ebeef5;\r\n    border-radius: 4px;\r\n    background-color: #fafcff;\r\n    margin-top: 5px;\r\n}\r\n.el-select {\r\n    width: 100%;\r\n}\r\n.rule-logic-builder .el-select,\r\n.rule-logic-builder .el-input {\r\n     width: auto;\r\n     min-width: 80px;\r\n}\r\n:deep(.el-table .cell) {\r\n    text-align: left;\r\n    line-height: 1.4;\r\n    white-space: normal;\r\n}\r\n:deep(.el-table .cell > div) {\r\n   white-space: normal;\r\n}\r\n</style> ","import script from \"./FieldRuleConfig.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FieldRuleConfig.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./FieldRuleConfig.vue?vue&type=style&index=0&id=524b08dc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-524b08dc\"]])\n\nexport default __exports__"],"names":["ruleFormRef","ref","isEditing","editingRuleId","saving","loadingRules","createNewCondition","type","connector","baseCondition","id","uuidv4","leftOperand","field","operator","rightOperand","value","fieldA","calcOperator","fieldB","comparisonOperator","constantValue","initialRuleForm","name","description","sourceTable","deductionPoints","logic","conditions","ruleForm","reactive","formRules","required","message","trigger","validator","rule","callback","Error","configuredRules","dataTables","tableFields","comparisonOperators","label","numericComparisonOperators","unaryOperators","onMounted","async","loadTableAndFieldMetadata","loadConfiguredRules","Promise","resolve","setTimeout","order","cargo_damage","getAllFields","tableName","getNumericOrDateFields","fields","filter","f","includes","getFieldLabel","fieldValue","find","isUnaryOperator","formatSingleCondition","condition","formattedContent","leftFieldLabel","operatorLabel","op","rightFieldLabel","fieldALabel","fieldBLabel","comparisonOpLabel","formatRuleLogic","length","result","forEach","cond","index","formattedCond","operatorStr","handleTableChange","clearValidate","addCondition","push","removeCondition","splice","resetForm","initial","Object","assign","JSON","parse","stringify","nextTick","cancelEdit","editRule","ruleDataToLoad","undefined","deleteRule","ruleId","ElMessageBox","confirm","confirmButtonText","cancelButtonText","then","console","log","ElMessage","success","catch","validateCondition","prefix","error","msg","submitForm","validate","valid","allConditionsValid","i","payload","__exports__"],"sourceRoot":""}