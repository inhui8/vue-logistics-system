{"version":3,"file":"js/328.2bf3a9de.js","mappings":"qSA+HE,MAAMA,GAASC,EAAAA,EAAAA,MACTC,GAAmBC,EAAAA,EAAAA,IAAI,MAGvBC,GAAQD,EAAAA,EAAAA,IAAI,CACd,CAAEE,GAAI,EAAGC,KAAM,MACf,CAAED,GAAI,EAAGC,KAAM,MACf,CAAED,GAAI,EAAGC,KAAM,UAGbC,GAAOC,EAAAA,EAAAA,IAAS,CAClBC,KAAM,YACNC,QAAS,GACTC,SAAU,SACVC,QAAS,GACTC,cAAe,GACfC,cAAe,GACfC,YAAa,GACbC,YAAa,GACbC,MAAO,KACPC,SAAU,GACVC,YAAa,EACbC,YAAa,GACbC,SAAU,KACVC,GAAI,GACJC,gBAAiB,OAIfC,GAAmBC,EAAAA,EAAAA,KAAS,KAC9B,OAAQlB,EAAKE,MACT,IAAK,UAAW,MAAO,OACvB,IAAK,cAAe,MAAO,OAC3B,IAAK,YACL,IAAK,UACL,IAAK,QACL,QACI,MAAO,OACf,IAIEiB,GAAQlB,EAAAA,EAAAA,IAAS,CACnBC,KAAM,CACF,CAAEkB,UAAU,EAAMC,QAAS,UAAWC,QAAS,WAEnDlB,SAAU,CACN,CAAEgB,UAAU,EAAMC,QAAS,SAAUC,QAAS,WAElDjB,QAAS,CACL,CAAEe,UAAU,EAAMC,QAAS,UAAWC,QAAS,QAC/C,CAAEC,IAAK,EAAGF,QAAS,eAAgBC,QAAS,SAEhDb,YAAa,CACT,CAAEW,UAAU,EAAMC,QAAS,UAAWC,QAAS,QAC/C,CAAEC,IAAK,GAAIF,QAAS,gBAAiBC,QAAS,SAElDZ,MAAO,CACH,CAAEU,UAAU,EAAMC,QAAS,YAAaC,QAAS,WAErDX,SAAU,CACN,CAAES,UAAU,EAAMC,QAAS,UAAWC,QAAS,SAEnDV,YAAa,CACT,CAAEQ,UAAU,EAAMC,QAAS,QAASC,QAAS,QAC7C,CAAEpB,KAAM,SAAUqB,IAAK,EAAGF,QAAS,YAAaC,QAAS,SAE7DhB,cAAe,CAEX,CAAEkB,UAAWA,CAACC,EAAMC,EAAOC,KACL,cAAd3B,EAAKE,MAAyBwB,EAG9BC,IAFAA,EAAS,IAAIC,MAAM,WAGvB,EACAN,QAAS,WAEjBf,cAAe,CACX,CAAEiB,UAAWA,CAACC,EAAMC,EAAOC,KACL,YAAd3B,EAAKE,MAAuBwB,EAG5BC,IAFAA,EAAS,IAAIC,MAAM,WAGvB,EACAN,QAAS,SAEjBd,YAAa,CACT,CAAEgB,UAAWA,CAACC,EAAMC,EAAOC,KACL,gBAAd3B,EAAKE,MAA2BwB,EAGhCC,IAFAA,EAAS,IAAIC,MAAM,WAGvB,EACAN,QAAS,SAEjBR,SAAU,CACN,CAAEM,UAAU,EAAMC,QAAS,YAAaC,QAAS,aAInDO,EAASA,KACXpC,EAAOqC,MAAM,EAGXC,EAAaA,KACfpC,EAAiB+B,MAAMM,UAAUC,IAC7B,IAAIA,EASA,OAFAC,QAAQC,IAAI,kBACZC,EAAAA,GAAUC,MAAM,iBACT,EARPH,QAAQC,IAAI,UAAWnC,GAEvBoC,EAAAA,GAAUE,QAAQ,UAOtB,GACF,EAGAC,EAAYA,KACd5C,EAAiB+B,MAAMc,cAEvBxC,EAAKa,YAAc,GACnBb,EAAKgB,gBAAkB,KAEvBhB,EAAKE,KAAO,YACZF,EAAKI,SAAW,QAAQ,E,OAG5BqC,EAAAA,EAAAA,KAAU,S,42KC3PZ,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,G","sources":["webpack://vue-logistics-system/./src/views/WorkOrder/CommandWorkCreate.vue","webpack://vue-logistics-system/./src/views/WorkOrder/CommandWorkCreate.vue?a6d4"],"sourcesContent":["<template>\r\n    <div class=\"work-order-create-container\">\r\n      <el-page-header @back=\"goBack\" content=\"创建新工单\"></el-page-header>\r\n  \r\n      <el-card class=\"form-card\" shadow=\"never\">\r\n          <el-form :model=\"form\" ref=\"workOrderFormRef\" :rules=\"rules\" label-width=\"120px\">\r\n              <el-form-item label=\"工单类型\" prop=\"type\">\r\n                   <el-select v-model=\"form.type\" placeholder=\"请选择工单类型\">\r\n                      <el-option label=\"异常订单处理\" value=\"exception\"></el-option>\r\n                      <el-option label=\"指令执行\" value=\"command\"></el-option>\r\n                      <el-option label=\"订单预警响应\" value=\"warning\"></el-option>\r\n                      <el-option label=\"增值服务请求\" value=\"value_added\"></el-option>\r\n                      <el-option label=\"其他问题\" value=\"other\"></el-option>\r\n                  </el-select>\r\n              </el-form-item>\r\n  \r\n              <el-form-item label=\"关联订单号\" prop=\"orderNo\">\r\n                  <el-input v-model=\"form.orderNo\" placeholder=\"请输入关联的订单号 (选填)\"></el-input>\r\n                  <!-- 可以考虑添加搜索或选择订单的功能 -->\r\n              </el-form-item>\r\n  \r\n              <el-form-item label=\"优先级\" prop=\"priority\">\r\n                   <el-select v-model=\"form.priority\" placeholder=\"请选择优先级\">\r\n                      <el-option label=\"紧急\" value=\"urgent\"></el-option>\r\n                      <el-option label=\"高\" value=\"high\"></el-option>\r\n                      <el-option label=\"中\" value=\"medium\"></el-option>\r\n                      <el-option label=\"低\" value=\"low\"></el-option>\r\n                  </el-select>\r\n              </el-form-item>\r\n  \r\n              <el-form-item label=\"工单标题\" prop=\"subject\">\r\n                  <el-input v-model=\"form.subject\" placeholder=\"请简要描述问题或任务\"></el-input>\r\n              </el-form-item>\r\n  \r\n              <!-- 根据工单类型动态显示字段 -->\r\n              <el-form-item v-if=\"form.type === 'exception'\" label=\"异常类型\" prop=\"exceptionType\">\r\n                   <el-select v-model=\"form.exceptionType\" placeholder=\"请选择异常类型\">\r\n                      <el-option label=\"缺货\" value=\"out_of_stock\"></el-option>\r\n                      <el-option label=\"地址错误\" value=\"address_error\"></el-option>\r\n                      <el-option label=\"支付问题\" value=\"payment_issue\"></el-option>\r\n                      <el-option label=\"客户投诉\" value=\"customer_complaint\"></el-option>\r\n                       <el-option label=\"系统错误\" value=\"system_error\"></el-option>\r\n                       <!-- 可以添加更多类型 -->\r\n                  </el-select>\r\n              </el-form-item>\r\n  \r\n              <el-form-item v-if=\"form.type === 'warning'\" label=\"预警来源\" prop=\"warningSource\">\r\n                  <el-input v-model=\"form.warningSource\" placeholder=\"例如：低库存预警、潜在延误预警\"></el-input>\r\n              </el-form-item>\r\n  \r\n               <el-form-item v-if=\"form.type === 'value_added'\" label=\"服务项目\" prop=\"serviceItem\">\r\n                  <el-input v-model=\"form.serviceItem\" placeholder=\"例如：礼品包装、特殊配送、安装调试\"></el-input>\r\n              </el-form-item>\r\n  \r\n              <el-form-item :label=\"descriptionLabel\" prop=\"description\">\r\n                   <el-input\r\n                      type=\"textarea\"\r\n                      :rows=\"5\"\r\n                      placeholder=\"请详细描述情况、指令内容或服务要求\"\r\n                      v-model=\"form.description\">\r\n                  </el-input>\r\n              </el-form-item>\r\n  \r\n               <el-form-item label=\"最晚完成时间\" prop=\"dueAt\">\r\n                   <el-date-picker\r\n                      v-model=\"form.dueAt\"\r\n                      type=\"datetime\"\r\n                      placeholder=\"选择日期时间\">\r\n                  </el-date-picker>\r\n              </el-form-item>\r\n  \r\n               <el-form-item label=\"库位\" prop=\"location\">\r\n                   <el-input v-model=\"form.location\" placeholder=\"请输入库位信息\"></el-input>\r\n              </el-form-item>\r\n  \r\n               <el-form-item label=\"板数\" prop=\"palletCount\">\r\n                   <el-input-number v-model=\"form.palletCount\" :min=\"0\" :precision=\"0\" placeholder=\"请输入板数\"></el-input-number>\r\n              </el-form-item>\r\n  \r\n               <el-form-item label=\"附件\">\r\n                   <el-upload\r\n                      class=\"upload-demo\"\r\n                      action=\"#\"\r\n                      :auto-upload=\"false\"\r\n                      multiple>\r\n                      <el-button type=\"primary\">点击上传</el-button>\r\n                      <template #tip>\r\n                          <div class=\"el-upload__tip\">上传截图或文件有助于更快解决问题</div>\r\n                      </template>\r\n                  </el-upload>\r\n              </el-form-item>\r\n  \r\n              <el-form-item label=\"指派给\" prop=\"assignee\">\r\n                  <!-- 这里可以使用用户/团队选择器组件 -->\r\n                   <el-select v-model=\"form.assignee\" placeholder=\"选择处理人或团队\" filterable clearable>\r\n                       <!-- 假设 users 是从 API 获取的用户列表 -->\r\n                      <el-option v-for=\"user in users\" :key=\"user.id\" :label=\"user.name\" :value=\"user.id\"></el-option>\r\n                  </el-select>\r\n              </el-form-item>\r\n  \r\n               <el-form-item label=\"抄送给\">\r\n                  <!-- 类似指派给，但可能是多选 -->\r\n                  <el-select v-model=\"form.cc\" placeholder=\"选择抄送人 (可选)\" multiple filterable clearable>\r\n                      <el-option v-for=\"user in users\" :key=\"user.id\" :label=\"user.name\" :value=\"user.id\"></el-option>\r\n                  </el-select>\r\n              </el-form-item>\r\n  \r\n               <!-- 如果需要显示关联的客户信息 -->\r\n              <el-form-item v-if=\"form.relatedCustomer\" label=\"客户信息\">\r\n                  <span>{{ form.relatedCustomer.name }} (ID: {{ form.relatedCustomer.id }})</span>\r\n              </el-form-item>\r\n  \r\n               <el-form-item>\r\n                   <el-button type=\"primary\" @click=\"submitForm\">提交工单</el-button>\r\n                  <el-button @click=\"resetForm\">重置</el-button>\r\n              </el-form-item>\r\n          </el-form>\r\n      </el-card>\r\n  \r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, reactive, computed, onMounted } from 'vue';\r\n  import { useRouter } from 'vue-router';\r\n  import { ElMessage } from 'element-plus'; // 引入提示\r\n  \r\n  const router = useRouter();\r\n  const workOrderFormRef = ref(null); // 表单引用\r\n  \r\n  // 模拟用户数据 (实际应从API获取)\r\n  const users = ref([\r\n      { id: 1, name: '张三' },\r\n      { id: 2, name: '李四' },\r\n      { id: 3, name: '客服团队' },\r\n  ]);\r\n  \r\n  const form = reactive({\r\n      type: 'exception', // 默认工单类型\r\n      orderNo: '',\r\n      priority: 'medium', // 默认优先级\r\n      subject: '',\r\n      exceptionType: '',\r\n      warningSource: '',\r\n      serviceItem: '',\r\n      description: '',\r\n      dueAt: null,\r\n      location: '',\r\n      palletCount: 0,\r\n      attachments: [], // 存储附件信息\r\n      assignee: null,\r\n      cc: [],\r\n      relatedCustomer: null, // 示例：关联的客户信息\r\n  });\r\n  \r\n  // 动态计算描述标签\r\n  const descriptionLabel = computed(() => {\r\n      switch (form.type) {\r\n          case 'command': return '指令内容';\r\n          case 'value_added': return '服务要求';\r\n          case 'exception':\r\n          case 'warning':\r\n          case 'other':\r\n          default:\r\n              return '详细情况';\r\n      }\r\n  });\r\n  \r\n  // 表单验证规则\r\n  const rules = reactive({\r\n      type: [\r\n          { required: true, message: '请选择工单类型', trigger: 'change' },\r\n      ],\r\n      priority: [\r\n          { required: true, message: '请选择优先级', trigger: 'change' },\r\n      ],\r\n      subject: [\r\n          { required: true, message: '请输入工单标题', trigger: 'blur' },\r\n          { min: 5, message: '标题长度至少 5 个字符', trigger: 'blur' },\r\n      ],\r\n      description: [\r\n          { required: true, message: '请输入详细情况', trigger: 'blur' },\r\n          { min: 10, message: '描述内容至少 10 个字符', trigger: 'blur' },\r\n      ],\r\n      dueAt: [\r\n          { required: true, message: '请选择最晚完成时间', trigger: 'change' },\r\n      ],\r\n      location: [\r\n          { required: true, message: '请输入库位信息', trigger: 'blur' },\r\n      ],\r\n      palletCount: [\r\n          { required: true, message: '请输入板数', trigger: 'blur' },\r\n          { type: 'number', min: 0, message: '板数必须大于等于0', trigger: 'blur' },\r\n      ],\r\n      exceptionType: [\r\n          // 仅当类型为 exception 时需要\r\n          { validator: (rule, value, callback) => {\r\n              if (form.type === 'exception' && !value) {\r\n                  callback(new Error('请选择异常类型'));\r\n              } else {\r\n                  callback();\r\n              }\r\n           }, trigger: 'change' }\r\n      ],\r\n      warningSource: [\r\n          { validator: (rule, value, callback) => {\r\n              if (form.type === 'warning' && !value) {\r\n                  callback(new Error('请输入预警来源'));\r\n              } else {\r\n                  callback();\r\n              }\r\n           }, trigger: 'blur' }\r\n      ],\r\n      serviceItem: [\r\n          { validator: (rule, value, callback) => {\r\n              if (form.type === 'value_added' && !value) {\r\n                  callback(new Error('请输入服务项目'));\r\n              } else {\r\n                  callback();\r\n              }\r\n           }, trigger: 'blur' }\r\n      ],\r\n      assignee: [\r\n          { required: true, message: '请选择处理人或团队', trigger: 'change' },\r\n      ],\r\n  });\r\n  \r\n  const goBack = () => {\r\n      router.back();\r\n  };\r\n  \r\n  const submitForm = () => {\r\n      workOrderFormRef.value.validate((valid) => {\r\n          if (valid) {\r\n              console.log('Submit!', form);\r\n              // 在这里调用 API 提交表单数据\r\n              ElMessage.success('工单创建成功!');\r\n              // 提交成功后可以跳转到列表页或详情页\r\n              // router.push('/work-order/list');\r\n          } else {\r\n              console.log('error submit!!');\r\n              ElMessage.error('表单校验失败，请检查输入');\r\n              return false;\r\n          }\r\n      });\r\n  };\r\n  \r\n  const resetForm = () => {\r\n      workOrderFormRef.value.resetFields();\r\n      // 可能需要手动重置非表单项关联的数据，例如附件列表\r\n      form.attachments = [];\r\n      form.relatedCustomer = null;\r\n      // 根据需要设置默认值\r\n      form.type = 'exception';\r\n      form.priority = 'medium';\r\n  };\r\n  \r\n  onMounted(() => {\r\n      // 可以在这里获取必要的初始数据，比如用户信息等\r\n      // fetchUsers();\r\n      // 如果是从特定上下文（如订单详情页）跳转过来的，可以预填部分信息\r\n      // const { relatedOrderNo } = router.currentRoute.value.query;\r\n      // if(relatedOrderNo) form.orderNo = relatedOrderNo;\r\n  });\r\n  \r\n  </script>\r\n  \r\n  <style scoped>\r\n  .work-order-create-container {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .el-page-header {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .form-card {\r\n      /* 可选，为表单添加卡片样式 */\r\n  }\r\n  \r\n  .el-select {\r\n      width: 100%; /* 让下拉选择框撑满 */\r\n  }\r\n  \r\n  .el-date-picker {\r\n      width: 100%;\r\n  }\r\n  \r\n  .upload-demo {\r\n      /* 上传组件样式调整 */\r\n  }\r\n  \r\n  .el-upload__tip {\r\n      font-size: 12px;\r\n      color: #909399;\r\n      margin-top: 7px;\r\n  }\r\n  </style> ","import script from \"./CommandWorkCreate.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CommandWorkCreate.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CommandWorkCreate.vue?vue&type=style&index=0&id=575bbfbd&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-575bbfbd\"]])\n\nexport default __exports__"],"names":["router","useRouter","workOrderFormRef","ref","users","id","name","form","reactive","type","orderNo","priority","subject","exceptionType","warningSource","serviceItem","description","dueAt","location","palletCount","attachments","assignee","cc","relatedCustomer","descriptionLabel","computed","rules","required","message","trigger","min","validator","rule","value","callback","Error","goBack","back","submitForm","validate","valid","console","log","ElMessage","error","success","resetForm","resetFields","onMounted","__exports__"],"sourceRoot":""}