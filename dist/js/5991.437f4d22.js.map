{"version":3,"file":"js/5991.437f4d22.js","mappings":"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","sources":["webpack://vue-logistics-system/./src/views/WorkOrder/CommandWorkDetail.vue","webpack://vue-logistics-system/./src/views/WorkOrder/CommandWorkDetail.vue?e01d"],"sourcesContent":["<template>\r\n    <div class=\"work-order-detail-container\">\r\n      <el-page-header @back=\"goBack\" :content=\"`工单详情: ${workOrder.subject || '加载中...'}`\"></el-page-header>\r\n  \r\n      <div v-if=\"loading\" class=\"loading-state\">\r\n          <el-skeleton :rows=\"10\" animated />\r\n      </div>\r\n  \r\n      <div v-else>\r\n          <!-- 工单头部信息卡片 -->\r\n          <el-card class=\"info-card\" shadow=\"never\">\r\n              <div class=\"work-order-header\">\r\n                  <h2 class=\"work-order-title\">{{ workOrder.subject }}</h2>\r\n                  <el-tag :type=\"getStatusType(workOrder.status)\" effect=\"dark\">{{ getStatusText(workOrder.status) }}</el-tag>\r\n              </div>\r\n  \r\n              <div class=\"work-order-meta\">\r\n                  <div class=\"meta-item\">\r\n                      <span class=\"meta-label\">工单号:</span>\r\n                      <span class=\"meta-value\">{{ workOrder.id }}</span>\r\n                  </div>\r\n                  <div class=\"meta-item\">\r\n                      <span class=\"meta-label\">工单类型:</span>\r\n                      <span class=\"meta-value\">{{ getTypeText(workOrder.type) }}</span>\r\n                  </div>\r\n                  <div v-if=\"workOrder.orderNo\" class=\"meta-item\">\r\n                      <span class=\"meta-label\">关联订单号:</span>\r\n                      <span class=\"meta-value\">\r\n                          <el-link @click=\"viewOrder(workOrder.orderNo)\" type=\"primary\">{{ workOrder.orderNo }}</el-link>\r\n                      </span>\r\n                  </div>\r\n                  <div class=\"meta-item\">\r\n                      <span class=\"meta-label\">优先级:</span>\r\n                      <span class=\"meta-value\">\r\n                          <el-tag :type=\"getPriorityType(workOrder.priority)\" size=\"small\">{{ getPriorityText(workOrder.priority) }}</el-tag>\r\n                      </span>\r\n                  </div>\r\n                  <div class=\"meta-item\">\r\n                      <span class=\"meta-label\">创建人:</span>\r\n                      <span class=\"meta-value\">{{ workOrder.creator }}</span>\r\n                  </div>\r\n                  <div class=\"meta-item\">\r\n                      <span class=\"meta-label\">处理人:</span>\r\n                      <span class=\"meta-value\">{{ workOrder.assignee || '未指派' }}</span>\r\n                  </div>\r\n                  <div class=\"meta-item\">\r\n                      <span class=\"meta-label\">创建时间:</span>\r\n                      <span class=\"meta-value\">{{ formatDateTime(workOrder.createdAt) }}</span>\r\n                  </div>\r\n                  <div class=\"meta-item\">\r\n                      <span class=\"meta-label\">最晚完成时间:</span>\r\n                      <span class=\"meta-value\">{{ formatDateTime(workOrder.dueAt) }}</span>\r\n                  </div>\r\n                  <div class=\"meta-item\">\r\n                      <span class=\"meta-label\">完成时间:</span>\r\n                      <span class=\"meta-value\">{{ formatDateTime(workOrder.completedAt) }}</span>\r\n                  </div>\r\n                  <div class=\"meta-item\">\r\n                      <span class=\"meta-label\">库位:</span>\r\n                      <span class=\"meta-value\">{{ workOrder.location || '-' }}</span>\r\n                  </div>\r\n                  <div class=\"meta-item\">\r\n                      <span class=\"meta-label\">板数:</span>\r\n                      <span class=\"meta-value\">{{ workOrder.palletCount || '-' }}</span>\r\n                  </div>\r\n                  <div class=\"meta-item\">\r\n                      <span class=\"meta-label\">最后更新:</span>\r\n                      <span class=\"meta-value\">{{ formatDateTime(workOrder.updatedAt) }}</span>\r\n                  </div>\r\n              </div>\r\n  \r\n              <!-- 根据工单类型显示特定字段 -->\r\n              <div v-if=\"workOrder.type === 'exception'\" class=\"meta-item\">\r\n                  <span class=\"meta-label\">异常类型:</span>\r\n                  <span class=\"meta-value\">{{ workOrder.exceptionType }}</span>\r\n              </div>\r\n  \r\n              <div v-if=\"workOrder.type === 'warning'\" class=\"meta-item\">\r\n                  <span class=\"meta-label\">预警来源:</span>\r\n                  <span class=\"meta-value\">{{ workOrder.warningSource }}</span>\r\n              </div>\r\n  \r\n              <div v-if=\"workOrder.type === 'value_added'\" class=\"meta-item\">\r\n                  <span class=\"meta-label\">服务项目:</span>\r\n                  <span class=\"meta-value\">{{ workOrder.serviceItem }}</span>\r\n              </div>\r\n  \r\n              <!-- 工单操作按钮组 -->\r\n              <div class=\"work-order-actions\">\r\n                  <el-button-group>\r\n                      <el-button type=\"primary\" @click=\"handleProcess\" v-if=\"canProcess\">开始处理</el-button>\r\n                      <el-button @click=\"handleReassign\" v-if=\"canReassign\">转派</el-button>\r\n                      <el-button @click=\"handleUpdateStatus\" v-if=\"canUpdateStatus\">更新状态</el-button>\r\n                      <el-button type=\"success\" @click=\"handleComplete\" v-if=\"canComplete\">标记为解决</el-button>\r\n                      <el-button @click=\"handleClose\" v-if=\"canClose\">关闭工单</el-button>\r\n                      <el-button @click=\"handleReopen\" v-if=\"isClosed\">重新打开</el-button>\r\n                  </el-button-group>\r\n              </div>\r\n          </el-card>\r\n  \r\n          <!-- 工单详情内容 -->\r\n          <el-card class=\"content-card\" shadow=\"never\">\r\n              <div class=\"card-header\">\r\n                  <h3>{{ getDescriptionTitle(workOrder.type) }}</h3>\r\n              </div>\r\n              <div class=\"content-body\">\r\n                  <pre class=\"description-content\">{{ workOrder.description }}</pre>\r\n              </div>\r\n              \r\n              <!-- 附件区域 -->\r\n              <div v-if=\"workOrder.attachments && workOrder.attachments.length > 0\" class=\"attachments-section\">\r\n                  <h4>附件</h4>\r\n                  <div class=\"attachments-list\">\r\n                      <div v-for=\"(attachment, index) in workOrder.attachments\" :key=\"index\" class=\"attachment-item\">\r\n                          <el-link :href=\"attachment.url\" target=\"_blank\" type=\"primary\">\r\n                              {{ attachment.name }} ({{ formatFileSize(attachment.size) }})\r\n                          </el-link>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </el-card>\r\n  \r\n          <!-- 工单处理记录区域 -->\r\n          <el-card class=\"records-card\" shadow=\"never\">\r\n              <div class=\"card-header\">\r\n                  <h3>处理记录</h3>\r\n                  <el-button size=\"small\" @click=\"showAddRecordDialog\">添加备注</el-button>\r\n              </div>\r\n  \r\n              <el-timeline>\r\n                  <el-timeline-item\r\n                      v-for=\"(record, index) in workOrder.records\"\r\n                      :key=\"index\"\r\n                      :type=\"getRecordType(record.type)\"\r\n                      :color=\"getRecordColor(record.type)\"\r\n                      :timestamp=\"formatDateTime(record.timestamp)\">\r\n                      <div class=\"record-item\">\r\n                          <div class=\"record-header\">\r\n                              <span class=\"record-type\">{{ getRecordTypeText(record.type) }}</span>\r\n                              <span class=\"record-user\">{{ record.user }}</span>\r\n                          </div>\r\n                          <div class=\"record-content\">{{ record.content }}</div>\r\n                          <!-- 添加附件显示 -->\r\n                          <div v-if=\"record.attachments && record.attachments.length > 0\" class=\"record-attachments\">\r\n                              <div class=\"attachments-header\">附件：</div>\r\n                              <div class=\"attachments-list\">\r\n                                  <div v-for=\"(attachment, attachIndex) in record.attachments\" \r\n                                       :key=\"attachIndex\" \r\n                                       class=\"attachment-item\">\r\n                                      <el-link \r\n                                          :href=\"attachment.url\" \r\n                                          target=\"_blank\" \r\n                                          type=\"primary\"\r\n                                          @click.prevent=\"previewAttachment(attachment)\">\r\n                                          {{ attachment.name }} ({{ formatFileSize(attachment.size) }})\r\n                                      </el-link>\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                  </el-timeline-item>\r\n              </el-timeline>\r\n          </el-card>\r\n      </div>\r\n  \r\n      <!-- 添加处理记录对话框 -->\r\n      <el-dialog v-model=\"recordDialogVisible\" title=\"添加处理记录\" width=\"500px\">\r\n          <el-form :model=\"recordForm\" ref=\"recordFormRef\">\r\n              <el-form-item label=\"记录类型\" prop=\"type\">\r\n                  <el-select v-model=\"recordForm.type\">\r\n                      <el-option label=\"处理过程记录\" value=\"process\"></el-option>\r\n                      <el-option label=\"内部沟通\" value=\"note\"></el-option>\r\n                      <el-option label=\"状态更新\" value=\"status\"></el-option>\r\n                  </el-select>\r\n              </el-form-item>\r\n              <el-form-item label=\"内容\" prop=\"content\">\r\n                  <el-input \r\n                      type=\"textarea\" \r\n                      v-model=\"recordForm.content\" \r\n                      rows=\"4\" \r\n                      placeholder=\"请输入处理过程或备注信息\"></el-input>\r\n              </el-form-item>\r\n          </el-form>\r\n          <template #footer>\r\n              <span class=\"dialog-footer\">\r\n                  <el-button @click=\"recordDialogVisible = false\">取消</el-button>\r\n                  <el-button type=\"primary\" @click=\"submitRecord\">提交</el-button>\r\n              </span>\r\n          </template>\r\n      </el-dialog>\r\n  \r\n      <!-- 转派对话框 -->\r\n      <el-dialog v-model=\"reassignDialogVisible\" title=\"转派工单\" width=\"500px\">\r\n          <el-form :model=\"reassignForm\" ref=\"reassignFormRef\">\r\n              <el-form-item label=\"转派给\" prop=\"assignee\">\r\n                  <el-select v-model=\"reassignForm.assignee\" filterable placeholder=\"选择处理人\">\r\n                      <el-option \r\n                          v-for=\"user in users\" \r\n                          :key=\"user.id\" \r\n                          :label=\"user.name\" \r\n                          :value=\"user.id\">\r\n                      </el-option>\r\n                  </el-select>\r\n              </el-form-item>\r\n              <el-form-item label=\"转派原因\" prop=\"reason\">\r\n                  <el-input \r\n                      type=\"textarea\" \r\n                      v-model=\"reassignForm.reason\" \r\n                      rows=\"3\" \r\n                      placeholder=\"请输入转派原因\"></el-input>\r\n              </el-form-item>\r\n          </el-form>\r\n          <template #footer>\r\n              <span class=\"dialog-footer\">\r\n                  <el-button @click=\"reassignDialogVisible = false\">取消</el-button>\r\n                  <el-button type=\"primary\" @click=\"submitReassign\">确认转派</el-button>\r\n              </span>\r\n          </template>\r\n      </el-dialog>\r\n  \r\n      <!-- 更新状态对话框 -->\r\n      <el-dialog v-model=\"statusDialogVisible\" title=\"更新工单状态\" width=\"500px\">\r\n          <el-form :model=\"statusForm\" ref=\"statusFormRef\">\r\n              <el-form-item label=\"新状态\" prop=\"status\">\r\n                  <el-select v-model=\"statusForm.status\">\r\n                      <el-option label=\"处理中\" value=\"processing\"></el-option>\r\n                      <el-option label=\"待确认\" value=\"pending_confirmation\"></el-option>\r\n                      <el-option label=\"已解决\" value=\"resolved\"></el-option>\r\n                      <el-option label=\"已关闭\" value=\"closed\"></el-option>\r\n                  </el-select>\r\n              </el-form-item>\r\n              <el-form-item label=\"状态说明\" prop=\"comment\">\r\n                  <el-input \r\n                      type=\"textarea\" \r\n                      v-model=\"statusForm.comment\" \r\n                      rows=\"3\" \r\n                      placeholder=\"请输入状态变更说明\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"附件\">\r\n                  <el-upload\r\n                      class=\"status-upload\"\r\n                      action=\"#\"\r\n                      :auto-upload=\"false\"\r\n                      :on-change=\"handleFileChange\"\r\n                      :on-remove=\"handleFileRemove\"\r\n                      :file-list=\"statusForm.fileList\"\r\n                      multiple>\r\n                      <el-button type=\"primary\">选择文件</el-button>\r\n                      <template #tip>\r\n                          <div class=\"el-upload__tip\">支持任意格式文件，单个文件不超过10MB</div>\r\n                      </template>\r\n                  </el-upload>\r\n              </el-form-item>\r\n              <!-- 文件预览区域 -->\r\n              <div v-if=\"previewVisible\" class=\"preview-container\">\r\n                  <div class=\"preview-header\">\r\n                      <span>文件预览</span>\r\n                      <el-button type=\"text\" @click=\"closePreview\">关闭</el-button>\r\n                  </div>\r\n                  <div class=\"preview-content\" v-if=\"previewFile\">\r\n                      <!-- 图片预览 -->\r\n                      <img v-if=\"isImage(previewFile)\" :src=\"previewUrl\" class=\"preview-image\" />\r\n                      <!-- PDF预览 -->\r\n                      <iframe v-else-if=\"isPdf(previewFile)\" :src=\"previewUrl\" class=\"preview-pdf\"></iframe>\r\n                      <!-- 其他文件类型 -->\r\n                      <div v-else class=\"preview-other\">\r\n                          <el-icon><Document /></el-icon>\r\n                          <span>{{ previewFile.name }}</span>\r\n                          <el-button type=\"primary\" size=\"small\" @click=\"downloadFile(previewFile)\">下载</el-button>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </el-form>\r\n          <template #footer>\r\n              <span class=\"dialog-footer\">\r\n                  <el-button @click=\"statusDialogVisible = false\">取消</el-button>\r\n                  <el-button type=\"primary\" @click=\"submitStatusUpdate\">确认更新</el-button>\r\n              </span>\r\n          </template>\r\n      </el-dialog>\r\n  \r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, reactive, computed, onMounted } from 'vue';\r\n  import { useRouter, useRoute } from 'vue-router';\r\n  import { ElMessage, ElMessageBox } from 'element-plus';\r\n  import { Document } from '@element-plus/icons-vue';\r\n  \r\n  const router = useRouter();\r\n  const route = useRoute();\r\n  const loading = ref(true);\r\n  \r\n  // 模拟用户数据\r\n  const users = ref([\r\n      { id: 1, name: '张三' },\r\n      { id: 2, name: '李四' },\r\n      { id: 3, name: '客服团队' },\r\n  ]);\r\n  \r\n  // 模拟工单数据\r\n  const workOrder = reactive({\r\n      id: 'WO202307250001',\r\n      subject: '客户反馈订单延迟问题',\r\n      type: 'exception',\r\n      status: 'pending',  // pending, processing, pending_confirmation, resolved, closed\r\n      priority: 'high',\r\n      orderNo: 'ORD202307250123', // 关联订单号\r\n      creator: '张三',\r\n      assignee: '李四',\r\n      createdAt: new Date(Date.now() - 24 * 60 * 60 * 1000), // 一天前\r\n      updatedAt: new Date(),\r\n      dueAt: new Date(Date.now() + 2 * 24 * 60 * 60 * 1000), // 两天后\r\n      completedAt: null,\r\n      location: 'A-01-02',\r\n      palletCount: 3,\r\n      exceptionType: '客户投诉', // 对于异常工单\r\n      description: '客户反馈他的订单已经延迟3天未发货，客户情绪激动，需要尽快处理。客户电话：13800138000',\r\n      attachments: [\r\n          { name: '客户投诉截图.png', url: '#', size: 1024 * 512 }, // 512KB\r\n          { name: '订单详情.pdf', url: '#', size: 1024 * 1024 * 2 }, // 2MB\r\n      ],\r\n      records: [\r\n          {\r\n              type: 'create',\r\n              user: '张三',\r\n              timestamp: new Date(Date.now() - 24 * 60 * 60 * 1000),\r\n              content: '创建工单'\r\n          },\r\n          {\r\n              type: 'assign',\r\n              user: '系统',\r\n              timestamp: new Date(Date.now() - 23 * 60 * 60 * 1000),\r\n              content: '工单已指派给李四'\r\n          },\r\n          {\r\n              type: 'note',\r\n              user: '李四',\r\n              timestamp: new Date(Date.now() - 20 * 60 * 60 * 1000),\r\n              content: '已联系客户，告知原因是由于商品缺货，预计明天可以发货'\r\n          },\r\n          {\r\n              type: 'status',\r\n              user: '李四',\r\n              timestamp: new Date(Date.now() - 18 * 60 * 60 * 1000),\r\n              content: '状态更新为：处理中'\r\n          }\r\n      ]\r\n  });\r\n  \r\n  // 对话框相关状态\r\n  const recordDialogVisible = ref(false);\r\n  const reassignDialogVisible = ref(false);\r\n  const statusDialogVisible = ref(false);\r\n  \r\n  // 表单引用\r\n  const recordFormRef = ref(null);\r\n  const reassignFormRef = ref(null);\r\n  const statusFormRef = ref(null);\r\n  \r\n  // 表单数据\r\n  const recordForm = reactive({\r\n      type: 'process',\r\n      content: ''\r\n  });\r\n  \r\n  const reassignForm = reactive({\r\n      assignee: null,\r\n      reason: ''\r\n  });\r\n  \r\n  // 文件预览相关状态\r\n  const previewVisible = ref(false);\r\n  const previewFile = ref(null);\r\n  const previewUrl = ref('');\r\n  \r\n  // 文件处理相关函数\r\n  const handleFileChange = (file) => {\r\n      // 文件大小限制：10MB\r\n      const isLt10M = file.size / 1024 / 1024 < 10;\r\n      if (!isLt10M) {\r\n          ElMessage.error('文件大小不能超过 10MB!');\r\n          return false;\r\n      }\r\n      \r\n      // 如果是图片或PDF，生成预览URL\r\n      if (isImage(file.raw) || isPdf(file.raw)) {\r\n          previewUrl.value = URL.createObjectURL(file.raw);\r\n          previewFile.value = file;\r\n          previewVisible.value = true;\r\n      }\r\n      \r\n      return true;\r\n  };\r\n  \r\n  const handleFileRemove = (file) => {\r\n      // 如果移除的是当前预览的文件，关闭预览\r\n      if (previewFile.value && previewFile.value.uid === file.uid) {\r\n          closePreview();\r\n      }\r\n  };\r\n  \r\n  const closePreview = () => {\r\n      if (previewUrl.value) {\r\n          URL.revokeObjectURL(previewUrl.value);\r\n      }\r\n      previewVisible.value = false;\r\n      previewFile.value = null;\r\n      previewUrl.value = '';\r\n  };\r\n  \r\n  const isImage = (file) => {\r\n      return file.type.startsWith('image/');\r\n  };\r\n  \r\n  const isPdf = (file) => {\r\n      return file.type === 'application/pdf';\r\n  };\r\n  \r\n  const downloadFile = (file) => {\r\n      // 创建下载链接\r\n      const link = document.createElement('a');\r\n      link.href = URL.createObjectURL(file.raw);\r\n      link.download = file.name;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      URL.revokeObjectURL(link.href);\r\n  };\r\n  \r\n  // 修改状态表单数据结构\r\n  const statusForm = reactive({\r\n      status: 'processing',\r\n      comment: '',\r\n      fileList: []\r\n  });\r\n  \r\n  // 修改状态更新提交函数\r\n  const submitStatusUpdate = async () => {\r\n      if (!statusForm.comment.trim()) {\r\n          ElMessage.warning('请输入状态变更说明');\r\n          return;\r\n      }\r\n  \r\n      try {\r\n          // 处理文件上传\r\n          const uploadedFiles = await Promise.all(\r\n              statusForm.fileList.map(async file => {\r\n                  // 这里应该调用实际的文件上传API\r\n                  // const formData = new FormData();\r\n                  // formData.append('file', file.raw);\r\n                  // const response = await api.uploadFile(formData);\r\n                  // return response.data;\r\n                  \r\n                  // 模拟上传成功\r\n                  return {\r\n                      name: file.name,\r\n                      url: URL.createObjectURL(file.raw),\r\n                      size: file.size\r\n                  };\r\n              })\r\n          );\r\n  \r\n          // 添加状态更新记录\r\n          workOrder.records.push({\r\n              type: 'status',\r\n              user: '当前用户', // 实际应用中应该获取当前登录用户\r\n              timestamp: new Date(),\r\n              content: `状态更新为：${getStatusText(statusForm.status)}。说明：${statusForm.comment}`,\r\n              attachments: uploadedFiles\r\n          });\r\n  \r\n          // 更新工单状态\r\n          workOrder.status = statusForm.status;\r\n          workOrder.updatedAt = new Date();\r\n  \r\n          ElMessage.success(`工单状态已更新为：${getStatusText(statusForm.status)}`);\r\n          statusDialogVisible.value = false;\r\n          \r\n          // 清理预览和文件列表\r\n          closePreview();\r\n          statusForm.fileList = [];\r\n      } catch (error) {\r\n          console.error('Failed to update status:', error);\r\n          ElMessage.error('更新状态失败');\r\n      }\r\n  };\r\n  \r\n  // 计算属性：按钮是否可见/可用\r\n  const canProcess = computed(() => {\r\n      return workOrder.status === 'pending';\r\n  });\r\n  \r\n  const canReassign = computed(() => {\r\n      return ['pending', 'processing'].includes(workOrder.status);\r\n  });\r\n  \r\n  const canUpdateStatus = computed(() => {\r\n      return ['processing', 'pending_confirmation'].includes(workOrder.status);\r\n  });\r\n  \r\n  const canComplete = computed(() => {\r\n      return ['processing', 'pending_confirmation'].includes(workOrder.status);\r\n  });\r\n  \r\n  const canClose = computed(() => {\r\n      return ['resolved'].includes(workOrder.status);\r\n  });\r\n  \r\n  const isClosed = computed(() => {\r\n      return workOrder.status === 'closed';\r\n  });\r\n  \r\n  // 辅助函数\r\n  const formatDateTime = (date) => {\r\n      if (!date) return '未设置';\r\n      const d = new Date(date);\r\n      return `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')} ${String(d.getHours()).padStart(2, '0')}:${String(d.getMinutes()).padStart(2, '0')}`;\r\n  };\r\n  \r\n  const formatFileSize = (bytes) => {\r\n      if (bytes < 1024) return bytes + ' B';\r\n      if (bytes < 1024 * 1024) return (bytes / 1024).toFixed(1) + ' KB';\r\n      return (bytes / (1024 * 1024)).toFixed(1) + ' MB';\r\n  };\r\n  \r\n  const getStatusText = (status) => {\r\n      const statusMap = {\r\n          'pending': '待处理',\r\n          'processing': '处理中',\r\n          'pending_confirmation': '待确认',\r\n          'resolved': '已解决',\r\n          'closed': '已关闭'\r\n      };\r\n      return statusMap[status] || status;\r\n  };\r\n  \r\n  const getStatusType = (status) => {\r\n      const typeMap = {\r\n          'pending': 'warning',\r\n          'processing': 'primary',\r\n          'pending_confirmation': 'info',\r\n          'resolved': 'success',\r\n          'closed': 'info'\r\n      };\r\n      return typeMap[status] || 'info';\r\n  };\r\n  \r\n  const getTypeText = (type) => {\r\n      const typeMap = {\r\n          'exception': '异常订单处理',\r\n          'command': '指令执行',\r\n          'warning': '订单预警响应',\r\n          'value_added': '增值服务请求',\r\n          'other': '其他问题'\r\n      };\r\n      return typeMap[type] || type;\r\n  };\r\n  \r\n  const getPriorityText = (priority) => {\r\n      const priorityMap = {\r\n          'urgent': '紧急',\r\n          'high': '高',\r\n          'medium': '中',\r\n          'low': '低'\r\n      };\r\n      return priorityMap[priority] || priority;\r\n  };\r\n  \r\n  const getPriorityType = (priority) => {\r\n      const typeMap = {\r\n          'urgent': 'danger',\r\n          'high': 'warning',\r\n          'medium': 'info',\r\n          'low': 'success'\r\n      };\r\n      return typeMap[priority] || 'info';\r\n  };\r\n  \r\n  const getDescriptionTitle = (type) => {\r\n      const titleMap = {\r\n          'command': '指令内容',\r\n          'value_added': '服务要求',\r\n          'exception': '详细情况',\r\n          'warning': '详细情况',\r\n          'other': '详细情况'\r\n      };\r\n      return titleMap[type] || '详细情况';\r\n  };\r\n  \r\n  const getRecordType = (recordType) => {\r\n      const typeMap = {\r\n          'create': 'primary',\r\n          'assign': 'info',\r\n          'note': 'info',\r\n          'process': 'warning',\r\n          'status': 'success'\r\n      };\r\n      return typeMap[recordType] || 'info';\r\n  };\r\n  \r\n  const getRecordColor = (recordType) => {\r\n      const colorMap = {\r\n          'create': '#409EFF',\r\n          'assign': '#909399',\r\n          'note': '#E6A23C',\r\n          'process': '#409EFF',\r\n          'status': '#67C23A'\r\n      };\r\n      return colorMap[recordType] || '#909399';\r\n  };\r\n  \r\n  const getRecordTypeText = (recordType) => {\r\n      const textMap = {\r\n          'create': '创建工单',\r\n          'assign': '指派工单',\r\n          'note': '内部备注',\r\n          'process': '处理记录',\r\n          'status': '状态更新'\r\n      };\r\n      return textMap[recordType] || recordType;\r\n  };\r\n  \r\n  // 页面加载数据\r\n  const loadWorkOrderData = async () => {\r\n      try {\r\n          const workOrderId = route.params.id;\r\n          // 模拟API请求\r\n          console.log(`Loading work order: ${workOrderId}`);\r\n          // 实际应用中，这里会发起API请求获取工单数据\r\n          // const response = await api.getWorkOrder(workOrderId);\r\n          // Object.assign(workOrder, response.data);\r\n          \r\n          // 模拟延迟加载\r\n          setTimeout(() => {\r\n              loading.value = false;\r\n          }, 1000);\r\n      } catch (error) {\r\n          console.error('Failed to load work order:', error);\r\n          ElMessage.error('加载工单数据失败');\r\n          loading.value = false;\r\n      }\r\n  };\r\n  \r\n  // 页面方法\r\n  const goBack = () => {\r\n      router.back();\r\n  };\r\n  \r\n  const viewOrder = (orderNo) => {\r\n      router.push(`/order/detail/${orderNo}`);\r\n  };\r\n  \r\n  // 对话框相关方法\r\n  const showAddRecordDialog = () => {\r\n      recordForm.type = 'process';\r\n      recordForm.content = '';\r\n      recordDialogVisible.value = true;\r\n  };\r\n  \r\n  const submitRecord = () => {\r\n      if (!recordForm.content.trim()) {\r\n          ElMessage.warning('请输入记录内容');\r\n          return;\r\n      }\r\n  \r\n      // 添加记录\r\n      workOrder.records.push({\r\n          type: recordForm.type,\r\n          user: '当前用户', // 实际应用中应该获取当前登录用户\r\n          timestamp: new Date(),\r\n          content: recordForm.content\r\n      });\r\n  \r\n      ElMessage.success('记录已添加');\r\n      recordDialogVisible.value = false;\r\n      workOrder.updatedAt = new Date();\r\n  };\r\n  \r\n  // 处理转派\r\n  const handleReassign = () => {\r\n      reassignForm.assignee = null;\r\n      reassignForm.reason = '';\r\n      reassignDialogVisible.value = true;\r\n  };\r\n  \r\n  const submitReassign = () => {\r\n      if (!reassignForm.assignee) {\r\n          ElMessage.warning('请选择处理人');\r\n          return;\r\n      }\r\n  \r\n      // 获取处理人名称\r\n      const assignee = users.value.find(u => u.id === reassignForm.assignee)?.name || '未知用户';\r\n      \r\n      // 添加转派记录\r\n      workOrder.records.push({\r\n          type: 'assign',\r\n          user: '当前用户', // 实际应用中应该获取当前登录用户\r\n          timestamp: new Date(),\r\n          content: `工单已转派给 ${assignee}。原因：${reassignForm.reason || '无'}`\r\n      });\r\n  \r\n      // 更新处理人\r\n      workOrder.assignee = assignee;\r\n      workOrder.updatedAt = new Date();\r\n  \r\n      ElMessage.success(`工单已转派给 ${assignee}`);\r\n      reassignDialogVisible.value = false;\r\n  };\r\n  \r\n  // 处理状态更新\r\n  const handleUpdateStatus = () => {\r\n      statusForm.status = 'processing'; // 默认值\r\n      statusForm.comment = '';\r\n      statusDialogVisible.value = true;\r\n  };\r\n  \r\n  // 其他操作方法\r\n  const handleProcess = () => {\r\n      ElMessageBox.confirm('确认开始处理该工单?', '操作确认', {\r\n          confirmButtonText: '确认',\r\n          cancelButtonText: '取消',\r\n          type: 'info'\r\n      }).then(() => {\r\n          workOrder.status = 'processing';\r\n          workOrder.updatedAt = new Date();\r\n          \r\n          // 添加记录\r\n          workOrder.records.push({\r\n              type: 'status',\r\n              user: '当前用户', // 实际应用中应该获取当前登录用户\r\n              timestamp: new Date(),\r\n              content: '开始处理工单'\r\n          });\r\n          \r\n          ElMessage.success('工单状态已更新为：处理中');\r\n      }).catch(() => {});\r\n  };\r\n  \r\n  const handleComplete = () => {\r\n      ElMessageBox.prompt('请输入解决方案', '标记为已解决', {\r\n          confirmButtonText: '确认',\r\n          cancelButtonText: '取消',\r\n          inputType: 'textarea',\r\n          inputValidator: (value) => {\r\n              if (!value.trim()) {\r\n                  return '解决方案不能为空';\r\n              }\r\n              return true;\r\n          }\r\n      }).then(({ value }) => {\r\n          workOrder.status = 'resolved';\r\n          workOrder.updatedAt = new Date();\r\n          \r\n          // 添加记录\r\n          workOrder.records.push({\r\n              type: 'status',\r\n              user: '当前用户', // 实际应用中应该获取当前登录用户\r\n              timestamp: new Date(),\r\n              content: `工单已解决。解决方案：${value}`\r\n          });\r\n          \r\n          ElMessage.success('工单已标记为已解决');\r\n      }).catch(() => {});\r\n  };\r\n  \r\n  const handleClose = () => {\r\n      ElMessageBox.confirm('确认关闭该工单?', '操作确认', {\r\n          confirmButtonText: '确认',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n      }).then(() => {\r\n          workOrder.status = 'closed';\r\n          workOrder.updatedAt = new Date();\r\n          \r\n          // 添加记录\r\n          workOrder.records.push({\r\n              type: 'status',\r\n              user: '当前用户', // 实际应用中应该获取当前登录用户\r\n              timestamp: new Date(),\r\n              content: '工单已关闭'\r\n          });\r\n          \r\n          ElMessage.success('工单已关闭');\r\n      }).catch(() => {});\r\n  };\r\n  \r\n  const handleReopen = () => {\r\n      ElMessageBox.prompt('请输入重新打开原因', '重新打开工单', {\r\n          confirmButtonText: '确认',\r\n          cancelButtonText: '取消',\r\n          inputType: 'textarea',\r\n          inputValidator: (value) => {\r\n              if (!value.trim()) {\r\n                  return '原因不能为空';\r\n              }\r\n              return true;\r\n          }\r\n      }).then(({ value }) => {\r\n          workOrder.status = 'processing';\r\n          workOrder.updatedAt = new Date();\r\n          \r\n          // 添加记录\r\n          workOrder.records.push({\r\n              type: 'status',\r\n              user: '当前用户', // 实际应用中应该获取当前登录用户\r\n              timestamp: new Date(),\r\n              content: `工单已重新打开。原因：${value}`\r\n          });\r\n          \r\n          ElMessage.success('工单已重新打开');\r\n      }).catch(() => {});\r\n  };\r\n  \r\n  // 附件预览处理函数\r\n  const previewAttachment = (attachment) => {\r\n      // 根据文件类型处理预览\r\n      const fileExtension = attachment.name.split('.').pop().toLowerCase();\r\n      const isImageFile = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp'].includes(fileExtension);\r\n      const isPdfFile = fileExtension === 'pdf';\r\n  \r\n      if (isImageFile || isPdfFile) {\r\n          previewUrl.value = attachment.url;\r\n          previewFile.value = attachment;\r\n          previewVisible.value = true;\r\n      } else {\r\n          // 非图片或PDF文件，直接下载\r\n          window.open(attachment.url, '_blank');\r\n      }\r\n  };\r\n  \r\n  // 页面加载\r\n  onMounted(() => {\r\n      loadWorkOrderData();\r\n  });\r\n  \r\n  </script>\r\n  \r\n  <style scoped>\r\n  .work-order-detail-container {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .el-page-header {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .loading-state {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .info-card, .content-card, .records-card {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .work-order-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .work-order-title {\r\n    margin: 0;\r\n    font-size: 20px;\r\n  }\r\n  \r\n  .work-order-meta {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    gap: 15px;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .meta-item {\r\n    display: flex;\r\n    align-items: flex-start;\r\n  }\r\n  \r\n  .meta-label {\r\n    color: #909399;\r\n    margin-right: 8px;\r\n    min-width: 80px;\r\n  }\r\n  \r\n  .work-order-actions {\r\n    margin-top: 20px;\r\n    padding-top: 20px;\r\n    border-top: 1px solid #EBEEF5;\r\n  }\r\n  \r\n  .card-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  .card-header h3 {\r\n    margin: 0;\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .content-body {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .description-content {\r\n    white-space: pre-wrap;\r\n    font-family: inherit;\r\n    margin: 0;\r\n    padding: 12px;\r\n    background-color: #F5F7FA;\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  .attachments-section {\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .attachments-section h4 {\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .attachment-item {\r\n    margin-bottom: 8px;\r\n  }\r\n  \r\n  .record-item {\r\n    padding: 0 0 8px 0;\r\n  }\r\n  \r\n  .record-header {\r\n    display: flex;\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  .record-type {\r\n    font-weight: bold;\r\n    margin-right: 10px;\r\n  }\r\n  \r\n  .record-user {\r\n    color: #606266;\r\n  }\r\n  \r\n  .record-content {\r\n    color: #303133;\r\n  }\r\n  \r\n  .status-upload {\r\n      .el-upload {\r\n          margin-right: 10px;\r\n      }\r\n      .el-upload__tip {\r\n          line-height: 1.2;\r\n          margin-top: 5px;\r\n          color: #909399;\r\n      }\r\n  }\r\n  \r\n  .preview-container {\r\n      margin-top: 15px;\r\n      border: 1px solid #EBEEF5;\r\n      border-radius: 4px;\r\n  }\r\n  \r\n  .preview-header {\r\n      padding: 10px;\r\n      border-bottom: 1px solid #EBEEF5;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n  }\r\n  \r\n  .preview-content {\r\n      padding: 15px;\r\n      min-height: 200px;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n  }\r\n  \r\n  .preview-image {\r\n      max-width: 100%;\r\n      max-height: 300px;\r\n      object-fit: contain;\r\n  }\r\n  \r\n  .preview-pdf {\r\n      width: 100%;\r\n      height: 400px;\r\n      border: none;\r\n  }\r\n  \r\n  .preview-other {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      gap: 10px;\r\n      color: #909399;\r\n      \r\n      .el-icon {\r\n          font-size: 48px;\r\n      }\r\n  }\r\n  \r\n  .record-attachments {\r\n      margin-top: 8px;\r\n      padding-top: 8px;\r\n      border-top: 1px dashed #EBEEF5;\r\n  }\r\n  \r\n  .attachments-header {\r\n      font-size: 13px;\r\n      color: #909399;\r\n      margin-bottom: 5px;\r\n  }\r\n  \r\n  .attachments-list {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      gap: 8px;\r\n  }\r\n  \r\n  .attachment-item {\r\n      font-size: 13px;\r\n  }\r\n  </style> ","import script from \"./CommandWorkDetail.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CommandWorkDetail.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CommandWorkDetail.vue?vue&type=style&index=0&id=73561016&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-73561016\"]])\n\nexport default __exports__"],"names":["router","useRouter","route","useRoute","loading","ref","users","id","name","workOrder","reactive","subject","type","status","priority","orderNo","creator","assignee","createdAt","Date","now","updatedAt","dueAt","completedAt","location","palletCount","exceptionType","description","attachments","url","size","records","user","timestamp","content","recordDialogVisible","reassignDialogVisible","statusDialogVisible","recordFormRef","reassignFormRef","statusFormRef","recordForm","reassignForm","reason","previewVisible","previewFile","previewUrl","handleFileChange","file","isLt10M","isImage","raw","isPdf","value","URL","createObjectURL","ElMessage","error","handleFileRemove","uid","closePreview","revokeObjectURL","startsWith","downloadFile","link","document","createElement","href","download","body","appendChild","click","removeChild","statusForm","comment","fileList","submitStatusUpdate","async","trim","uploadedFiles","Promise","all","map","push","getStatusText","success","console","warning","canProcess","computed","canReassign","includes","canUpdateStatus","canComplete","canClose","isClosed","formatDateTime","date","d","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","formatFileSize","bytes","toFixed","statusMap","getStatusType","typeMap","getTypeText","getPriorityText","priorityMap","getPriorityType","getDescriptionTitle","titleMap","getRecordType","recordType","getRecordColor","colorMap","getRecordTypeText","textMap","loadWorkOrderData","workOrderId","params","log","setTimeout","goBack","back","viewOrder","showAddRecordDialog","submitRecord","handleReassign","submitReassign","find","u","handleUpdateStatus","handleProcess","ElMessageBox","confirm","confirmButtonText","cancelButtonText","then","catch","handleComplete","prompt","inputType","inputValidator","handleClose","handleReopen","previewAttachment","attachment","fileExtension","split","pop","toLowerCase","isImageFile","isPdfFile","window","open","onMounted","__exports__"],"sourceRoot":""}