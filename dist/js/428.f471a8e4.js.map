{"version":3,"file":"js/428.f471a8e4.js","mappings":"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","sources":["webpack://vue-logistics-system/./src/views/Admin/RoleManagement/RoleList.vue","webpack://vue-logistics-system/./src/views/Admin/RoleManagement/RoleList.vue?99e7"],"sourcesContent":["<template>\r\n  <div class=\"role-list-container\">\r\n    <el-card>\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>角色列表</span>\r\n          <el-button type=\"primary\" @click=\"handleAddRole\">\r\n            <el-icon><Plus /></el-icon> 新增角色\r\n          </el-button>\r\n        </div>\r\n      </template>\r\n\r\n      <el-table :data=\"roleList\" style=\"width: 100%\" border>\r\n        <el-table-column prop=\"name\" label=\"角色名称\" width=\"200\" />\r\n        <el-table-column prop=\"description\" label=\"描述\" show-overflow-tooltip />\r\n        <el-table-column label=\"关联用户数\" width=\"150\" align=\"center\">\r\n            <template #default=\"scope\">\r\n              <el-button type=\"primary\" link @click=\"handleViewUsers(scope.row)\">\r\n                  {{ scope.row.users?.length || 0 }} 人\r\n              </el-button>\r\n            </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" fixed=\"right\" width=\"180\">\r\n          <template #default=\"scope\">\r\n            <el-button text type=\"primary\" size=\"small\" @click=\"handleEditRole(scope.row)\">编辑权限</el-button>\r\n            <el-button text type=\"danger\" size=\"small\" @click=\"handleDeleteRole(scope.row)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 新增/编辑角色弹窗 -->\r\n      <el-dialog\r\n        v-model=\"roleDialogVisible\"\r\n        :title=\"roleDialogTitle\"\r\n        width=\"50%\"\r\n        @close=\"handleDialogClose\"\r\n        :close-on-click-modal=\"false\"\r\n      >\r\n        <el-form\r\n          ref=\"roleFormRef\"\r\n          :model=\"roleForm\"\r\n          :rules=\"formRules\"\r\n          label-width=\"80px\"\r\n        >\r\n          <el-form-item label=\"角色名称\" prop=\"name\">\r\n            <el-input v-model=\"roleForm.name\" placeholder=\"请输入角色名称\" />\r\n          </el-form-item>\r\n          <el-form-item label=\"描述\" prop=\"description\">\r\n            <el-input\r\n              v-model=\"roleForm.description\"\r\n              type=\"textarea\"\r\n              :rows=\"2\"\r\n              placeholder=\"请输入角色描述\"\r\n            />\r\n          </el-form-item>\r\n          <el-form-item label=\"权限配置\">\r\n            <el-tree\r\n              ref=\"permissionTreeRef\"\r\n              :data=\"permissionTreeData\"\r\n              show-checkbox\r\n              node-key=\"id\"\r\n              default-expand-all\r\n              :default-checked-keys=\"roleForm.permissions\"\r\n              :props=\"{ children: 'children', label: 'label' }\"\r\n              style=\"width: 100%; border: 1px solid #dcdfe6; border-radius: 4px; padding: 10px; max-height: 300px; overflow-y: auto;\"\r\n              @check=\"handlePermissionCheck\"\r\n            />\r\n          </el-form-item>\r\n        </el-form>\r\n        <template #footer>\r\n          <span class=\"dialog-footer\">\r\n            <el-button @click=\"roleDialogVisible = false\">取消</el-button>\r\n            <el-button type=\"primary\" @click=\"handleSubmit\">确认</el-button>\r\n          </span>\r\n        </template>\r\n      </el-dialog>\r\n\r\n       <!-- 查看关联用户弹窗 -->\r\n      <el-dialog\r\n        v-model=\"userDialogVisible\"\r\n        :title=\"`角色用户管理 - ${currentUserRole?.name}`\"\r\n        width=\"60%\"\r\n        :close-on-click-modal=\"false\"\r\n      >\r\n        <el-table :data=\"currentUserRole?.users\" style=\"width: 100%\" border size=\"small\">\r\n           <el-table-column prop=\"username\" label=\"用户名\" />\r\n           <el-table-column prop=\"realName\" label=\"姓名\" />\r\n           <el-table-column prop=\"supplierName\" label=\"所属供应商 (若有)\" show-overflow-tooltip/>\r\n           <el-table-column label=\"账号状态\" width=\"120\" align=\"center\">\r\n              <template #default=\"scope\">\r\n                <el-switch \r\n                    v-model=\"scope.row.enabled\"\r\n                    active-text=\"启用\"\r\n                    inactive-text=\"禁用\"\r\n                    inline-prompt\r\n                    @change=\"handleUserStatusChange(scope.row)\"\r\n                />\r\n              </template>\r\n           </el-table-column>\r\n           <el-table-column label=\"操作\" width=\"100\" align=\"center\">\r\n             <template #default=\"scope\">\r\n                <!-- 可以添加移除用户、重置密码等操作 -->\r\n                <el-button text type=\"danger\" size=\"small\" @click=\"handleRemoveUserFromRole(scope.row)\">移除</el-button>\r\n             </template>\r\n           </el-table-column>\r\n        </el-table>\r\n         <template #footer>\r\n           <el-button @click=\"userDialogVisible = false\">关闭</el-button>\r\n         </template>\r\n       </el-dialog>\r\n\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, nextTick } from 'vue';\r\nimport { ElMessage, ElMessageBox } from 'element-plus';\r\nimport { Plus } from '@element-plus/icons-vue';\r\n\r\n// --- 模拟数据 ---\r\n// 模拟用户信息 (应从用户管理模块获取)\r\nconst mockUsers = [\r\n    { id: 'user1', username: 'pickup_op1', realName: '提货员A', supplierId: 1, supplierName: '测试供应商A', enabled: true },\r\n    { id: 'user2', username: 'pickup_admin', realName: '提货主管', supplierId: 1, supplierName: '测试供应商A', enabled: true },\r\n    { id: 'user3', username: 'delivery_driver1', realName: '派送司机B1', supplierId: 2, supplierName: '测试供应商B', enabled: true },\r\n    { id: 'user4', username: 'delivery_dispatch', realName: '派送调度B', supplierId: 2, supplierName: '测试供应商B', enabled: false }, // 禁用示例\r\n    { id: 'user5', username: 'universal_op', realName: '全能操作C', supplierId: 3, supplierName: '测试供应商C', enabled: true },\r\n    { id: 'user6', username: 'backend_admin1', realName: '后台管理员1', supplierId: null, supplierName: '内部', enabled: true },\r\n    { id: 'user7', username: 'backend_admin2', realName: '后台管理员2', supplierId: null, supplierName: '内部', enabled: true },\r\n];\r\n\r\nconst roleList = ref([\r\n  {\r\n    id: 'role_pickup_standard',\r\n    name: '标准提框商',\r\n    description: '负责码头提柜到仓库的基础操作权限',\r\n    users: [mockUsers[0], mockUsers[1]], // 关联模拟用户\r\n    permissions: ['order:seas:portal:list', 'order:seas:portal:assign_vehicle', 'order:seas:portal:update_status', 'vehicle:portal:list', 'account:view'] \r\n  },\r\n  {\r\n    id: 'role_delivery_standard',\r\n    name: '标准派送商',\r\n    description: '负责仓库到 FBA 或其他地址的派送操作权限',\r\n    users: [mockUsers[2], mockUsers[3]],\r\n    permissions: ['order:delivery:portal:list', 'order:delivery:portal:assign_vehicle', 'order:delivery:portal:update_status', 'vehicle:portal:list', 'account:view']\r\n  },\r\n   {\r\n    id: 'role_supplier_admin', // 新增一个供应商管理员角色\r\n    name: '供应商管理员',\r\n    description: '管理供应商内部的用户账号、车辆信息等',\r\n    users: [mockUsers[4]],\r\n    permissions: [\r\n        'order:seas:portal:list', 'order:delivery:portal:list',\r\n        'vehicle:portal:list', 'vehicle:portal:add', 'vehicle:portal:edit', 'vehicle:portal:delete',\r\n        'account:view', 'account:edit', 'account:upload_docs',\r\n        'quote:portal:submit_fixed', 'quote:portal:respond_inquiry', 'quote:portal:participate_bid',\r\n        'rating:portal:view', 'appointment:portal:request'\r\n    ]\r\n  },\r\n  {\r\n    id: 'role_admin',\r\n    name: '后台管理员',\r\n    description: '拥有所有后台管理权限',\r\n    users: [mockUsers[5], mockUsers[6]],\r\n    permissions: [ // 简化，直接用 '*' 表示所有权限 (实际不推荐)\r\n      '*'\r\n      // ... (或者列出所有权限 ID)\r\n    ]\r\n  },\r\n]);\r\n\r\n// 模拟权限树结构数据 (保持不变，只添加一个顶级表示所有权限的选项)\r\nconst permissionTreeData = ref([\r\n   { id: '*' , label: '所有权限' }, // 添加一个代表所有权限的根节点\r\n  {\r\n    id: 'supplier',\r\n    label: '供应商管理 (后台)',\r\n    children: [\r\n      { id: 'supplier:list', label: '查看列表' },\r\n      { id: 'supplier:create', label: '新增供应商' },\r\n      { id: 'supplier:edit', label: '编辑供应商' },\r\n      { id: 'supplier:delete', label: '删除供应商' },\r\n      { id: 'supplier:audit', label: '审核资质' },\r\n      { id: 'supplier:approve_qualification', label: '批准合作 (审批)' }\r\n    ]\r\n  },\r\n  // ... 其他权限树节点保持不变 ...\r\n   {\r\n      id: 'account',\r\n      label: '账户管理 (门户)',\r\n      children: [\r\n          { id: 'account:view', label: '查看账户信息' },\r\n          { id: 'account:edit', label: '编辑基本信息' },\r\n          { id: 'account:upload_docs', label: '上传资质文件' },\r\n          // 可能还有管理子账号等权限\r\n      ]\r\n    }\r\n]);\r\n\r\n// --- 响应式状态 ---\r\nconst roleDialogVisible = ref(false); // 角色编辑弹窗\r\nconst roleDialogTitle = ref('');\r\nconst userDialogVisible = ref(false); // 用户列表弹窗\r\nconst currentUserRole = ref(null); // 当前查看用户的角色\r\n\r\nconst isEditMode = ref(false);\r\nconst roleFormRef = ref(null);\r\nconst permissionTreeRef = ref(null); // 权限树引用\r\n\r\n// 表单数据模型\r\nconst initialFormState = {\r\n  id: null,\r\n  name: '',\r\n  description: '',\r\n  permissions: [],\r\n  users: [] // 关联的用户列表\r\n};\r\nconst roleForm = reactive({ ...initialFormState });\r\n\r\n// 表单验证规则\r\nconst formRules = reactive({\r\n  name: [\r\n    { required: true, message: '请输入角色名称', trigger: 'blur' },\r\n  ],\r\n  description: [\r\n     { required: true, message: '请输入角色描述', trigger: 'blur' },\r\n  ]\r\n});\r\n\r\n// --- 方法 ---\r\n// 处理权限树节点勾选变化\r\nconst handlePermissionCheck = (data, checkedData) => {\r\n    console.log(\"Checked keys:\", checkedData.checkedKeys);\r\n    roleForm.permissions = permissionTreeRef.value.getCheckedKeys(false); // 获取选中的叶子节点key\r\n     // 如果勾选了\"所有权限\"\r\n    if (roleForm.permissions.includes('*')) {\r\n        // 选中所有叶子节点\r\n        const allLeafKeys = getAllLeafKeys(permissionTreeData.value);\r\n        roleForm.permissions = allLeafKeys;\r\n        // 在 nextTick 中更新 Tree 的选中状态，避免冲突\r\n        nextTick(() => {\r\n            permissionTreeRef.value.setCheckedKeys(allLeafKeys, true);\r\n        });\r\n    } else {\r\n         // 过滤掉可能的 '*' （虽然上面已经处理了）\r\n         roleForm.permissions = roleForm.permissions.filter(p => p !== '*');\r\n    }\r\n    console.log(\"Final permissions:\", roleForm.permissions);\r\n};\r\n\r\n// 辅助函数：获取权限树所有叶子节点的 key\r\nconst getAllLeafKeys = (nodes) => {\r\n    let keys = [];\r\n    nodes.forEach(node => {\r\n        if (node.id === '*') return; // 跳过特殊节点\r\n        if (!node.children || node.children.length === 0) {\r\n            keys.push(node.id);\r\n        } else {\r\n            keys = keys.concat(getAllLeafKeys(node.children));\r\n        }\r\n    });\r\n    return keys;\r\n};\r\n\r\n// 处理新增\r\nconst handleAddRole = () => {\r\n  Object.assign(roleForm, initialFormState);\r\n  roleForm.permissions = []; // 确保清空\r\n  isEditMode.value = false;\r\n  roleDialogTitle.value = '新增角色';\r\n  roleDialogVisible.value = true;\r\n  nextTick(() => {\r\n      permissionTreeRef.value?.setCheckedKeys([]); // 清空树的选中状态\r\n      roleFormRef.value?.clearValidate();\r\n  });\r\n};\r\n\r\n// 处理编辑\r\nconst handleEditRole = (row) => {\r\n  isEditMode.value = true;\r\n  roleDialogTitle.value = '编辑角色权限';\r\n  // 深拷贝数据\r\n  Object.assign(roleForm, JSON.parse(JSON.stringify(row)));\r\n  roleDialogVisible.value = true;\r\n  nextTick(() => {\r\n     roleFormRef.value?.clearValidate();\r\n      // 处理 '*' 代表所有权限的情况\r\n     if (roleForm.permissions.includes('*')) {\r\n         permissionTreeRef.value?.setCheckedKeys(['*'], true); \r\n     } else {\r\n         permissionTreeRef.value?.setCheckedKeys(roleForm.permissions || [], true);\r\n     }\r\n  });\r\n};\r\n\r\n// 处理删除\r\nconst handleDeleteRole = (row) => {\r\n   // 检查是否有用户关联\r\n   if (row.users && row.users.length > 0) {\r\n     ElMessageBox.alert(`角色 \"${row.name}\" 下关联了 ${row.users.length} 个用户，请先将用户移除或分配到其他角色后再删除。`, '无法删除', { type: 'error' });\r\n     return;\r\n   }\r\n  ElMessageBox.confirm(`确定要删除角色 \"${row.name}\" 吗?`, '确认删除', {\r\n    type: 'warning',\r\n  })\r\n    .then(() => {\r\n      console.log('删除角色:', row.id);\r\n      const index = roleList.value.findIndex(r => r.id === row.id);\r\n      if (index !== -1) {\r\n        roleList.value.splice(index, 1);\r\n        ElMessage.success('角色删除成功');\r\n      } else {\r\n        ElMessage.error('删除失败');\r\n      }\r\n    })\r\n    .catch(() => {});\r\n};\r\n\r\n// 处理查看关联用户\r\nconst handleViewUsers = (row) => {\r\n    currentUserRole.value = JSON.parse(JSON.stringify(row)); // 深拷贝，防止修改影响原列表\r\n    userDialogVisible.value = true;\r\n};\r\n\r\n// 处理用户状态变更 (模拟)\r\nconst handleUserStatusChange = (user) => {\r\n    console.log(`更改用户 ${user.username} 状态为: ${user.enabled}`);\r\n    // 实际应用中需要调用 API 更新用户状态\r\n     // 更新 mockUsers 中的状态 (如果需要模拟持久化)\r\n    const mockUserIndex = mockUsers.findIndex(u => u.id === user.id);\r\n    if (mockUserIndex !== -1) {\r\n        mockUsers[mockUserIndex].enabled = user.enabled;\r\n    }\r\n    // 更新 currentUserRole 中的状态，以便弹窗立即反应\r\n    const userInDialogIndex = currentUserRole.value.users.findIndex(u => u.id === user.id);\r\n    if (userInDialogIndex !== -1) {\r\n         currentUserRole.value.users[userInDialogIndex].enabled = user.enabled;\r\n    }\r\n    ElMessage.success(`用户 ${user.username} 状态已${user.enabled ? '启用' : '禁用'}`);\r\n};\r\n\r\n// 处理从角色中移除用户 (模拟)\r\nconst handleRemoveUserFromRole = (user) => {\r\n    if (!currentUserRole.value) return;\r\n    ElMessageBox.confirm(`确定要将用户 \"${user.username}\" 从角色 \"${currentUserRole.value.name}\" 中移除吗?`, '确认移除', { type: 'warning' })\r\n    .then(() => {\r\n        console.log(`移除用户 ${user.username} 从角色 ${currentUserRole.value.id}`);\r\n        // 更新弹窗内数据\r\n        const userIndexInDialog = currentUserRole.value.users.findIndex(u => u.id === user.id);\r\n        if (userIndexInDialog !== -1) {\r\n            currentUserRole.value.users.splice(userIndexInDialog, 1);\r\n        }\r\n        // 更新主列表数据\r\n        const roleIndex = roleList.value.findIndex(r => r.id === currentUserRole.value.id);\r\n        if (roleIndex !== -1) {\r\n            const userIndexInList = roleList.value[roleIndex].users.findIndex(u => u.id === user.id);\r\n            if (userIndexInList !== -1) {\r\n                roleList.value[roleIndex].users.splice(userIndexInList, 1);\r\n            }\r\n        }\r\n        ElMessage.success('用户已移除');\r\n    })\r\n    .catch(() => {});\r\n};\r\n\r\n// 处理弹窗关闭\r\nconst handleDialogClose = () => {\r\n  // 清理表单校验\r\n  nextTick(() => {\r\n     roleFormRef.value?.clearValidate();\r\n     permissionTreeRef.value?.setCheckedKeys([]); // 清空树的选中\r\n  });\r\n  Object.assign(roleForm, initialFormState); // 重置表单\r\n};\r\n\r\n// 处理表单提交 (新增/编辑)\r\nconst handleSubmit = async () => {\r\n  if (!roleFormRef.value) return;\r\n  try {\r\n    await roleFormRef.value.validate();\r\n    // 获取最终选中的权限 key\r\n    roleForm.permissions = permissionTreeRef.value.getCheckedKeys(false);\r\n     // 如果包含了 '*'，实际保存时可能只需要存 '*'，或者展开存所有叶子节点，取决于后端设计\r\n     if (roleForm.permissions.includes('*')) {\r\n         console.warn(\"选择了 '所有权限', 实际保存的权限列表将根据后端逻辑处理。\");\r\n         // 假设后端能识别 '*'，或者在此处展开为所有叶子节点\r\n         // roleForm.permissions = getAllLeafKeys(permissionTreeData.value);\r\n     } else {\r\n          roleForm.permissions = roleForm.permissions.filter(p => p !== '*'); // 确保不包含 '*'\r\n     }\r\n\r\n    console.log('提交的角色数据:', JSON.parse(JSON.stringify(roleForm)));\r\n\r\n    if (isEditMode.value) {\r\n      // 编辑逻辑\r\n      const index = roleList.value.findIndex(r => r.id === roleForm.id);\r\n      if (index !== -1) {\r\n        roleList.value[index] = { ...roleList.value[index], ...JSON.parse(JSON.stringify(roleForm)) }; // 保留 users\r\n        ElMessage.success('角色权限更新成功');\r\n      } else {\r\n        ElMessage.error('更新失败');\r\n      }\r\n    } else {\r\n      // 新增逻辑\r\n      const newRole = {\r\n          ...JSON.parse(JSON.stringify(roleForm)),\r\n          id: `role_${Date.now()}`,\r\n          users: [], // 新角色默认没有用户\r\n      };\r\n      roleList.value.push(newRole);\r\n      ElMessage.success('角色新增成功');\r\n    }\r\n    roleDialogVisible.value = false;\r\n  } catch (error) {\r\n    console.log('表单验证失败:', error);\r\n    ElMessage.error('请检查表单信息');\r\n  }\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.role-list-container {\r\n  padding: 20px;\r\n}\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n.el-table {\r\n  margin-top: 15px;\r\n}\r\n.dialog-footer {\r\n  text-align: right;\r\n}\r\n</style> ","import script from \"./RoleList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RoleList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./RoleList.vue?vue&type=style&index=0&id=aca8de5e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-aca8de5e\"]])\n\nexport default __exports__"],"names":["mockUsers","id","username","realName","supplierId","supplierName","enabled","roleList","ref","name","description","users","permissions","permissionTreeData","label","children","roleDialogVisible","roleDialogTitle","userDialogVisible","currentUserRole","isEditMode","roleFormRef","permissionTreeRef","initialFormState","roleForm","reactive","formRules","required","message","trigger","handlePermissionCheck","data","checkedData","console","log","checkedKeys","value","getCheckedKeys","includes","allLeafKeys","getAllLeafKeys","nextTick","setCheckedKeys","filter","p","nodes","keys","forEach","node","length","concat","push","handleAddRole","Object","assign","clearValidate","handleEditRole","row","JSON","parse","stringify","handleDeleteRole","ElMessageBox","alert","type","confirm","then","index","findIndex","r","splice","ElMessage","success","error","catch","handleViewUsers","handleUserStatusChange","user","mockUserIndex","u","userInDialogIndex","handleRemoveUserFromRole","userIndexInDialog","roleIndex","userIndexInList","handleDialogClose","handleSubmit","async","validate","warn","newRole","Date","now","__exports__"],"sourceRoot":""}